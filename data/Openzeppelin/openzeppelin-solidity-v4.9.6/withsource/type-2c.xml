<clones>
<systeminfo processor="nicad6" system="source-code" granularity="functions-consistent" threshold="0%" minlines="3" maxlines="2500"/>
<cloneinfo npcs="534" npairs="359"/>
<runinfo ncompares="58309" cputime="7977"/>
<classinfo nclasses="69"/>

<class classid="1" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/AccessControlDefaultAdminRulesHarness.sol" startline="24" endline="27" pcid="2">
    function pendingDefaultAdminSchedule_() external view returns (uint48) {
        (, uint48 schedule) = pendingDefaultAdmin();
        return schedule;
    }
</source>
<source file="systems/source-code/AccessControlDefaultAdminRulesHarness.sol" startline="34" endline="37" pcid="4">
    function pendingDelaySchedule_() external view returns (uint48) {
        (, uint48 schedule) = pendingDefaultAdminDelay();
        return schedule;
    }
</source>
</class>

<class classid="2" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/AccessControlDefaultAdminRulesHarness.sol" startline="44" endline="46" pcid="6">
    function defaultAdminDelayIncreaseWait() public view override returns (uint48) {
        return _delayIncreaseWait;
    }
</source>
<source file="systems/source-code/ERC20FlashMintHarness.sol" startline="33" endline="35" pcid="202">
    function _flashFeeReceiver() internal view override returns (address) {
        return someFeeReceiver;
    }
</source>
</class>

<class classid="3" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ArraysMock.sol" startline="20" endline="22" pcid="8">
    function unsafeAccess(uint256 pos) external view returns (uint256) {
        return _array.unsafeAccess(pos).value;
    }
</source>
<source file="systems/source-code/ArraysMock.sol" startline="34" endline="36" pcid="9">
    function unsafeAccess(uint256 pos) external view returns (address) {
        return _array.unsafeAccess(pos).value;
    }
</source>
<source file="systems/source-code/ArraysMock.sol" startline="48" endline="50" pcid="10">
    function unsafeAccess(uint256 pos) external view returns (bytes32) {
        return _array.unsafeAccess(pos).value;
    }
</source>
</class>

<class classid="4" nclones="8" nlines="3" similarity="100">
<source file="systems/source-code/CallReceiverMock.sol" startline="37" endline="39" pcid="25">
    function mockFunctionRevertsNoReason() public payable {
        revert();
    }
</source>
<source file="systems/source-code/ReentrancyMock.sol" startline="15" endline="17" pcid="384">
    function callback() external nonReentrant {
        _count();
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="29" endline="31" pcid="306">
    function __SampleHuman_init() internal onlyInitializing {
        __SampleHuman_init_unchained();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="28" endline="30" pcid="289">
    function initializerNested() public initializer {
        initialize();
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="24" endline="26" pcid="305">
    function initialize() public initializer {
        __SampleHuman_init();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="32" endline="34" pcid="290">
    function onlyInitializingNested() public initializer {
        initializeOnlyInitializing();
    }
</source>
<source file="systems/source-code/InitializableHarness.sol" startline="11" endline="11" pcid="280">
    function nested_init_init()                     public initializer      { initialize();    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="86" endline="88" pcid="298">
    function initialize() public initializer {
        doStuff();
    }
</source>
</class>

<class classid="5" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Checkpoints.t.sol" startline="20" endline="22" pcid="30">
    function _boundUint32(uint32 x, uint32 min, uint32 max) internal view returns (uint32) {
        return SafeCast.toUint32(bound(uint256(x), uint256(min), uint256(max)));
    }
</source>
<source file="systems/source-code/Checkpoints.t.sol" startline="143" endline="145" pcid="38">
    function _boundUint32(uint32 x, uint32 min, uint32 max) internal view returns (uint32) {
        return SafeCast.toUint32(bound(uint256(x), uint256(min), uint256(max)));
    }
</source>
</class>

<class classid="6" nclones="2" nlines="8" similarity="100">
<source file="systems/source-code/Checkpoints.t.sol" startline="24" endline="31" pcid="31">
    function _prepareKeys(uint32[] memory keys, uint32 maxSpread) internal view {
        uint32 lastKey = 0;
        for (uint256 i = 0; i < keys.length; ++i) {
            uint32 key = _boundUint32(keys[i], lastKey, lastKey + maxSpread);
            keys[i] = key;
            lastKey = key;
        }
    }
</source>
<source file="systems/source-code/Checkpoints.t.sol" startline="147" endline="154" pcid="39">
    function _prepareKeys(uint32[] memory keys, uint32 maxSpread) internal view {
        uint32 lastKey = 0;
        for (uint256 i = 0; i < keys.length; ++i) {
            uint32 key = _boundUint32(keys[i], lastKey, lastKey + maxSpread);
            keys[i] = key;
            lastKey = key;
        }
    }
</source>
</class>

<class classid="7" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/Checkpoints.t.sol" startline="33" endline="38" pcid="32">
    function _assertLatestCheckpoint(bool exist, uint32 key, uint224 value) internal {
        (bool _exist, uint32 _key, uint224 _value) = _ckpts.latestCheckpoint();
        assertEq(_exist, exist);
        assertEq(_key, key);
        assertEq(_value, value);
    }
</source>
<source file="systems/source-code/Checkpoints.t.sol" startline="156" endline="161" pcid="40">
    function _assertLatestCheckpoint(bool exist, uint32 key, uint224 value) internal {
        (bool _exist, uint32 _key, uint224 _value) = _ckpts.latestCheckpoint();
        assertEq(_exist, exist);
        assertEq(_key, key);
        assertEq(_value, value);
    }
</source>
</class>

<class classid="8" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Checkpoints.t.sol" startline="123" endline="125" pcid="36">
    function getAtBlock(uint32 key) external view {
        _ckpts.getAtBlock(key);
    }
</source>
<source file="systems/source-code/Checkpoints.t.sol" startline="128" endline="130" pcid="37">
    function getAtProbablyRecentBlock(uint32 key) external view {
        _ckpts.getAtProbablyRecentBlock(key);
    }
</source>
</class>

<class classid="9" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ContextMock.sol" startline="10" endline="12" pcid="58">
    function msgSender() public {
        emit Sender(_msgSender());
    }
</source>
<source file="systems/source-code/ContextMock.sol" startline="22" endline="24" pcid="60">
    function msgDataShort() public {
        emit DataShort(_msgData());
    }
</source>
</class>

<class classid="10" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="12" endline="14" pcid="66">
    function pushFront(bytes32 value) external {
        _deque.pushFront(value);
    }
</source>
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="16" endline="18" pcid="67">
    function pushBack(bytes32 value) external {
        _deque.pushBack(value);
    }
</source>
</class>

<class classid="11" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="20" endline="22" pcid="68">
    function popFront() external returns (bytes32 value) {
        return _deque.popFront();
    }
</source>
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="24" endline="26" pcid="69">
    function popBack() external returns (bytes32 value) {
        return _deque.popBack();
    }
</source>
</class>

<class classid="12" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="28" endline="30" pcid="70">
    function clear() external {
        _deque.clear();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="20" endline="22" pcid="511">
    function reset() public {
        _timer.reset();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="20" endline="22" pcid="518">
    function reset() public {
        _timer.reset();
    }
</source>
</class>

<class classid="13" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="32" endline="34" pcid="71">
    function begin() external view returns (int128) {
        return _deque._begin;
    }
</source>
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="36" endline="38" pcid="72">
    function end() external view returns (int128) {
        return _deque._end;
    }
</source>
</class>

<class classid="14" nclones="14" nlines="3" similarity="100">
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="40" endline="42" pcid="73">
    function length() external view returns (uint256) {
        return _deque.length();
    }
</source>
<source file="systems/source-code/EnumerableMapHarness.sol" startline="24" endline="26" pcid="137">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="44" endline="46" pcid="74">
    function empty() external view returns (bool) {
        return _deque.empty();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="12" endline="14" pcid="509">
    function getDeadline() public view returns (uint64) {
        return _timer.getDeadline();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="24" endline="26" pcid="512">
    function isUnset() public view returns (bool) {
        return _timer.isUnset();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="28" endline="30" pcid="513">
    function isStarted() public view returns (bool) {
        return _timer.isStarted();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="32" endline="34" pcid="514">
    function isPending() public view returns (bool) {
        return _timer.isPending();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="36" endline="38" pcid="522">
    function isExpired() public view returns (bool) {
        return _timer.isExpired();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="36" endline="38" pcid="515">
    function isExpired() public view returns (bool) {
        return _timer.isExpired();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="32" endline="34" pcid="521">
    function isPending() public view returns (bool) {
        return _timer.isPending();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="28" endline="30" pcid="520">
    function isStarted() public view returns (bool) {
        return _timer.isStarted();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="24" endline="26" pcid="519">
    function isUnset() public view returns (bool) {
        return _timer.isUnset();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="12" endline="14" pcid="516">
    function getDeadline() public view returns (uint64) {
        return _timer.getDeadline();
    }
</source>
<source file="systems/source-code/EnumerableSetHarness.sol" startline="24" endline="26" pcid="171">
    function length() public view returns (uint256) {
        return _set.length();
    }
</source>
</class>

<class classid="15" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="48" endline="50" pcid="75">
    function front() external view returns (bytes32 value) {
        return _deque.front();
    }
</source>
<source file="systems/source-code/DoubleEndedQueueHarness.sol" startline="52" endline="54" pcid="76">
    function back() external view returns (bytes32 value) {
        return _deque.back();
    }
</source>
</class>

<class classid="16" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="193" endline="195" pcid="99">
    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {
        return remove(map._inner, bytes32(key));
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="297" endline="299" pcid="108">
    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {
        return remove(map._inner, bytes32(key));
    }
</source>
</class>

<class classid="17" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="200" endline="202" pcid="100">
    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {
        return contains(map._inner, bytes32(key));
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="304" endline="306" pcid="109">
    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {
        return contains(map._inner, bytes32(key));
    }
</source>
</class>

<class classid="18" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="207" endline="209" pcid="101">
    function length(UintToUintMap storage map) internal view returns (uint256) {
        return length(map._inner);
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="527" endline="529" pcid="128">
    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {
        return length(map._inner);
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="419" endline="421" pcid="119">
    function length(AddressToUintMap storage map) internal view returns (uint256) {
        return length(map._inner);
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="311" endline="313" pcid="110">
    function length(UintToAddressMap storage map) internal view returns (uint256) {
        return length(map._inner);
    }
</source>
</class>

<class classid="19" nclones="2" nlines="8" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="263" endline="273" pcid="106">
    function keys(UintToUintMap storage map) internal view returns (uint256[] memory) {
        bytes32[] memory store = keys(map._inner);
        uint256[] memory result;

        /// @solidity memory-safe-assembly
        assembly {
            result := store
        }

        return result;
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="371" endline="381" pcid="115">
    function keys(UintToAddressMap storage map) internal view returns (uint256[] memory) {
        bytes32[] memory store = keys(map._inner);
        uint256[] memory result;

        /// @solidity memory-safe-assembly
        assembly {
            result := store
        }

        return result;
    }
</source>
</class>

<class classid="20" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapHarness.sol" startline="16" endline="18" pcid="135">
    function remove(bytes32 key) public returns (bool) {
        return _map.remove(key);
    }
</source>
<source file="systems/source-code/EnumerableSetHarness.sol" startline="16" endline="18" pcid="169">
    function remove(bytes32 value) public returns (bool) {
        return _set.remove(value);
    }
</source>
<source file="systems/source-code/EnumerableSetHarness.sol" startline="12" endline="14" pcid="168">
    function add(bytes32 value) public returns (bool) {
        return _set.add(value);
    }
</source>
</class>

<class classid="21" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapHarness.sol" startline="20" endline="22" pcid="136">
    function contains(bytes32 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
<source file="systems/source-code/EnumerableMapHarness.sol" startline="48" endline="50" pcid="142">
    function get(bytes32 key) public view returns (bytes32) {
        return _map.get(key);
    }
</source>
<source file="systems/source-code/EnumerableSetHarness.sol" startline="20" endline="22" pcid="170">
    function contains(bytes32 value) public view returns (bool) {
        return _set.contains(value);
    }
</source>
</class>

<class classid="22" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableSet.sol" startline="169" endline="171" pcid="150">
    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {
        return _add(set._inner, value);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="179" endline="181" pcid="151">
    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {
        return _remove(set._inner, value);
    }
</source>
</class>

<class classid="23" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableSet.sol" startline="193" endline="195" pcid="153">
    function length(Bytes32Set storage set) internal view returns (uint256) {
        return _length(set._inner);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="341" endline="343" pcid="165">
    function length(UintSet storage set) internal view returns (uint256) {
        return _length(set._inner);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="267" endline="269" pcid="159">
    function length(AddressSet storage set) internal view returns (uint256) {
        return _length(set._inner);
    }
</source>
</class>

<class classid="24" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableSet.sol" startline="243" endline="245" pcid="156">
    function add(AddressSet storage set, address value) internal returns (bool) {
        return _add(set._inner, bytes32(uint256(uint160(value))));
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="253" endline="255" pcid="157">
    function remove(AddressSet storage set, address value) internal returns (bool) {
        return _remove(set._inner, bytes32(uint256(uint160(value))));
    }
</source>
</class>

<class classid="25" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableSet.sol" startline="317" endline="319" pcid="162">
    function add(UintSet storage set, uint256 value) internal returns (bool) {
        return _add(set._inner, bytes32(value));
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="327" endline="329" pcid="163">
    function remove(UintSet storage set, uint256 value) internal returns (bool) {
        return _remove(set._inner, bytes32(value));
    }
</source>
</class>

<class classid="26" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155PresetMinterPauser.sol" startline="98" endline="102" pcid="180">
    function supportsInterface(
        bytes4 interfaceId
    ) public view virtual override(AccessControlEnumerable, ERC1155) returns (bool) {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveEnumerableMock.sol" startline="20" endline="24" pcid="227">
    function supportsInterface(
        bytes4 interfaceId
    ) public view virtual override(ERC721, ERC721Enumerable) returns (bool) {
        return super.supportsInterface(interfaceId);
    }
</source>
</class>

<class classid="27" nclones="11" nlines="3" similarity="100">
<source file="systems/source-code/ERC20FlashMintHarness.sol" startline="15" endline="17" pcid="198">
    function mint(address account, uint256 amount) external {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC4626Mock.sol" startline="9" endline="11" pcid="225">
    function mint(address account, uint256 amount) external {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC20PermitHarness.sol" startline="14" endline="16" pcid="206">
    function burn(address account, uint256 amount) external {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC4626Mock.sol" startline="13" endline="15" pcid="226">
    function burn(address account, uint256 amount) external {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC20PermitHarness.sol" startline="10" endline="12" pcid="205">
    function mint(address account, uint256 amount) external {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC721Harness.sol" startline="10" endline="12" pcid="236">
    function mint(address account, uint256 tokenId) external {
        _mint(account, tokenId);
    }
</source>
<source file="systems/source-code/ERC20Mock.sol" startline="13" endline="15" pcid="204">
    function burn(address account, uint256 amount) external {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC721Harness.sol" startline="14" endline="16" pcid="237">
    function safeMint(address to, uint256 tokenId) external {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC20Mock.sol" startline="9" endline="11" pcid="203">
    function mint(address account, uint256 amount) external {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/PullPaymentMock.sol" startline="12" endline="14" pcid="382">
    function callTransfer(address dest, uint256 amount) public {
        _asyncTransfer(dest, amount);
    }
</source>
<source file="systems/source-code/ERC20FlashMintHarness.sol" startline="19" endline="21" pcid="199">
    function burn(address account, uint256 amount) external {
        _burn(account, amount);
    }
</source>
</class>

<class classid="28" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC2771ContextMock.sol" startline="16" endline="18" pcid="219">
    function _msgSender() internal view override(Context, ERC2771Context) returns (address) {
        return ERC2771Context._msgSender();
    }
</source>
<source file="systems/source-code/ERC2771ContextMock.sol" startline="24" endline="26" pcid="221">
    function _contextSuffixLength() internal view override(Context, ERC2771Context) returns (uint256) {
        return ERC2771Context._contextSuffixLength();
    }
</source>
</class>

<class classid="29" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721ConsecutiveEnumerableMock.sol" startline="26" endline="28" pcid="228">
    function _ownerOf(uint256 tokenId) internal view virtual override(ERC721, ERC721Consecutive) returns (address) {
        return super._ownerOf(tokenId);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="30" endline="32" pcid="232">
    function _ownerOf(uint256 tokenId) internal view virtual override(ERC721, ERC721Consecutive) returns (address) {
        return super._ownerOf(tokenId);
    }
</source>
</class>

<class classid="30" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721ConsecutiveEnumerableMock.sol" startline="30" endline="32" pcid="229">
    function _mint(address to, uint256 tokenId) internal virtual override(ERC721, ERC721Consecutive) {
        super._mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="34" endline="36" pcid="233">
    function _mint(address to, uint256 tokenId) internal virtual override(ERC721, ERC721Consecutive) {
        super._mint(to, tokenId);
    }
</source>
</class>

<class classid="31" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ERC721ConsecutiveEnumerableMock.sol" startline="34" endline="41" pcid="230">
    function _beforeTokenTransfer(
        address from,
        address to,
        uint256 firstTokenId,
        uint256 batchSize
    ) internal virtual override(ERC721, ERC721Enumerable) {
        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="38" endline="45" pcid="234">
    function _beforeTokenTransfer(
        address from,
        address to,
        uint256 firstTokenId,
        uint256 batchSize
    ) internal virtual override(ERC721, ERC721Pausable) {
        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveEnumerableMock.sol" startline="43" endline="50" pcid="231">
    function _afterTokenTransfer(
        address from,
        address to,
        uint256 firstTokenId,
        uint256 batchSize
    ) internal virtual override(ERC721, ERC721Consecutive) {
        super._afterTokenTransfer(from, to, firstTokenId, batchSize);
    }
</source>
</class>

<class classid="32" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="47" endline="54" pcid="235">
    function _afterTokenTransfer(
        address from,
        address to,
        uint256 firstTokenId,
        uint256 batchSize
    ) internal virtual override(ERC721, ERC721Votes, ERC721Consecutive) {
        super._afterTokenTransfer(from, to, firstTokenId, batchSize);
    }
</source>
<source file="systems/source-code/ERC721PresetMinterPauserAutoId.sol" startline="115" endline="122" pcid="248">
    function _beforeTokenTransfer(
        address from,
        address to,
        uint256 firstTokenId,
        uint256 batchSize
    ) internal virtual override(ERC721, ERC721Enumerable, ERC721Pausable) {
        super._beforeTokenTransfer(from, to, firstTokenId, batchSize);
    }
</source>
</class>

<class classid="33" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ERC721Harness.sol" startline="26" endline="28" pcid="240">
    function tokenExists(uint256 tokenId) external view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721Harness.sol" startline="30" endline="32" pcid="241">
    function unsafeOwnerOf(uint256 tokenId) external view returns (address) {
        return _ownerOf(tokenId);
    }
</source>
<source file="systems/source-code/ERC721Harness.sol" startline="34" endline="36" pcid="242">
    function unsafeGetApproved(uint256 tokenId) external view returns (address) {
        return _getApproved(tokenId);
    }
</source>
</class>

<class classid="34" nclones="2" nlines="9" similarity="100">
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="48" endline="77" pcid="251">
    function tokensToSend(
        address operator,
        address from,
        address to,
        uint256 amount,
        bytes calldata userData,
        bytes calldata operatorData
    ) external override {
        if (_shouldRevertSend) {
            revert();
        }

        IERC777 token = IERC777(_msgSender());

        uint256 fromBalance = token.balanceOf(from);
        // when called due to burn, to will be the zero address, which will have a balance of 0
        uint256 toBalance = token.balanceOf(to);

        emit TokensToSendCalled(
            operator,
            from,
            to,
            amount,
            userData,
            operatorData,
            address(token),
            fromBalance,
            toBalance
        );
    }
</source>
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="79" endline="108" pcid="252">
    function tokensReceived(
        address operator,
        address from,
        address to,
        uint256 amount,
        bytes calldata userData,
        bytes calldata operatorData
    ) external override {
        if (_shouldRevertReceive) {
            revert();
        }

        IERC777 token = IERC777(_msgSender());

        uint256 fromBalance = token.balanceOf(from);
        // when called due to burn, to will be the zero address, which will have a balance of 0
        uint256 toBalance = token.balanceOf(to);

        emit TokensReceivedCalled(
            operator,
            from,
            to,
            amount,
            userData,
            operatorData,
            address(token),
            fromBalance,
            toBalance
        );
    }
</source>
</class>

<class classid="35" nclones="2" nlines="7" similarity="100">
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="110" endline="117" pcid="253">
    function senderFor(address account) public {
        _registerInterfaceForAddress(_TOKENS_SENDER_INTERFACE_HASH, account);

        address self = address(this);
        if (account == self) {
            registerSender(self);
        }
    }
</source>
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="123" endline="130" pcid="255">
    function recipientFor(address account) public {
        _registerInterfaceForAddress(_TOKENS_RECIPIENT_INTERFACE_HASH, account);

        address self = address(this);
        if (account == self) {
            registerRecipient(self);
        }
    }
</source>
</class>

<class classid="36" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="119" endline="121" pcid="254">
    function registerSender(address sender) public {
        _erc1820.setInterfaceImplementer(address(this), _TOKENS_SENDER_INTERFACE_HASH, sender);
    }
</source>
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="132" endline="134" pcid="256">
    function registerRecipient(address recipient) public {
        _erc1820.setInterfaceImplementer(address(this), _TOKENS_RECIPIENT_INTERFACE_HASH, recipient);
    }
</source>
</class>

<class classid="37" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="136" endline="138" pcid="257">
    function setShouldRevertSend(bool shouldRevert) public {
        _shouldRevertSend = shouldRevert;
    }
</source>
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="140" endline="142" pcid="258">
    function setShouldRevertReceive(bool shouldRevert) public {
        _shouldRevertReceive = shouldRevert;
    }
</source>
</class>

<class classid="38" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/InitializableHarness.sol" startline="9" endline="9" pcid="279">
    function disable()             public { _disableInitializers(); }
</source>
<source file="systems/source-code/PausableMock.sol" startline="24" endline="26" pcid="380">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/PausableHarness.sol" startline="8" endline="10" pcid="374">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/PausableHarness.sol" startline="12" endline="14" pcid="375">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="28" endline="30" pcid="381">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="103" endline="105" pcid="302">
    function disableInitializers() public {
        _disableInitializers();
    }
</source>
</class>

<class classid="39" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/InitializableHarness.sol" startline="13" endline="13" pcid="282">
    function nested_reinit_init(uint8 n)            public reinitializer(n) { initialize();    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="90" endline="92" pcid="299">
    function reinitialize(uint8 i) public reinitializer(i) {
        doStuff();
    }
</source>
</class>

<class classid="40" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/InitializableHarness.sol" startline="14" endline="14" pcid="283">
    function nested_reinit_reinit(uint8 n, uint8 m) public reinitializer(n) { reinitialize(m); }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="94" endline="96" pcid="300">
    function nestedReinitialize(uint8 i, uint8 j) public reinitializer(i) {
        reinitialize(j);
    }
</source>
</class>

<class classid="41" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/InitializableHarness.sol" startline="16" endline="18" pcid="284">
    function version() public view returns (uint8) {
        return _getInitializedVersion();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="82" endline="84" pcid="297">
    function getInitializedVersion() public view returns (uint8) {
        return _getInitializedVersion();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="16" endline="18" pcid="286">
    function isInitializing() public view returns (bool) {
        return _isInitializing();
    }
</source>
<source file="systems/source-code/InitializableHarness.sol" startline="20" endline="22" pcid="285">
    function initializing() public view returns (bool) {
        return _isInitializing();
    }
</source>
</class>

<class classid="42" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="20" endline="22" pcid="287">
    function initialize() public initializer {
        initializerRan = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="74" endline="76" pcid="296">
    function childInitialize() public initializer {
        childInitializerRan = true;
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="34" endline="36" pcid="307">
    function __SampleHuman_init_unchained() internal onlyInitializing {
        isHuman = true;
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="20" endline="22" pcid="379">
    function drasticMeasure() external whenPaused {
        drasticMeasureTaken = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="58" endline="60" pcid="294">
    function initialize() public initializer {
        initializerRan = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="24" endline="26" pcid="288">
    function initializeOnlyInitializing() public onlyInitializing {
        onlyInitializingRan = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="62" endline="64" pcid="295">
    function initializeOnlyInitializing() public onlyInitializing {
        onlyInitializingRan = true;
    }
</source>
</class>

<class classid="43" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="36" endline="38" pcid="291">
    function initializeWithX(uint256 _x) public payable initializer {
        x = _x;
    }
</source>
<source file="systems/source-code/SingleInheritanceInitializableMocks.sol" startline="14" endline="16" pcid="473">
    function initialize(uint256 value) public payable initializer {
        x = value;
    }
</source>
</class>

<class classid="44" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="40" endline="42" pcid="292">
    function nonInitializable(uint256 _x) public payable {
        x = _x;
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="128" endline="130" pcid="319">
    function __SampleChild_init_unchained(uint256 _child) internal onlyInitializing {
        child = _child;
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="56" endline="58" pcid="310">
    function __SampleMother_init_unchained(uint256 value) internal onlyInitializing {
        mother = value;
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="100" endline="102" pcid="316">
    function __SampleFather_init_unchained(uint256 _father) internal onlyInitializing {
        father = _father;
    }
</source>
</class>

<class classid="45" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="107" endline="109" pcid="303">
    function doStuff() public onlyInitializing {
        counter++;
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="16" endline="18" pcid="378">
    function normalProcess() external whenNotPaused {
        count++;
    }
</source>
</class>

<class classid="46" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor.sol" startline="36" endline="40" pcid="323">
    function state(
        uint256 proposalId
    ) public view override(Governor, IGovernor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="42" endline="46" pcid="353">
    function state(
        uint256 proposalId
    ) public view override(Governor, IGovernor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
</class>

<class classid="47" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor.sol" startline="42" endline="49" pcid="324">
    function propose(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        string memory description
    ) public override(Governor, GovernorCompatibilityBravo, IGovernor) returns (uint256) {
        return super.propose(targets, values, calldatas, description);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="48" endline="55" pcid="344">
    function propose(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        string memory description
    ) public override(Governor, GovernorProposalThreshold, IGovernor) returns (uint256) {
        return super.propose(targets, values, calldatas, description);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="48" endline="55" pcid="354">
    function propose(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        string memory description
    ) public override(Governor, GovernorCompatibilityBravo, IGovernor) returns (uint256) {
        return super.propose(targets, values, calldatas, description);
    }
</source>
</class>

<class classid="48" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor.sol" startline="51" endline="58" pcid="325">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) public override(Governor, GovernorCompatibilityBravo, IGovernor) returns (uint256) {
        return super.cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="57" endline="64" pcid="355">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) public override(Governor, GovernorCompatibilityBravo, IGovernor) returns (uint256) {
        return super.cancel(targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="49" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor.sol" startline="60" endline="68" pcid="326">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="57" endline="65" pcid="345">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="66" endline="74" pcid="356">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="51" endline="59" pcid="335">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="50" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor.sol" startline="70" endline="77" pcid="327">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="61" endline="68" pcid="336">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="76" endline="83" pcid="357">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="67" endline="74" pcid="346">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="51" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor.sol" startline="79" endline="81" pcid="328">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="76" endline="78" pcid="347">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="85" endline="87" pcid="358">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="70" endline="72" pcid="337">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
</class>

<class classid="52" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor.sol" startline="83" endline="87" pcid="329">
    function supportsInterface(
        bytes4 interfaceId
    ) public view override(Governor, IERC165, GovernorTimelockControl) returns (bool) {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="89" endline="93" pcid="359">
    function supportsInterface(
        bytes4 interfaceId
    ) public view override(Governor, IERC165, GovernorTimelockControl) returns (bool) {
        return super.supportsInterface(interfaceId);
    }
</source>
</class>

<class classid="53" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="22" endline="24" pcid="330">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="24" endline="26" pcid="339">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="22" endline="24" pcid="349">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
</class>

<class classid="54" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="26" endline="28" pcid="331">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="28" endline="30" pcid="340">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="26" endline="28" pcid="350">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
</class>

<class classid="55" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="32" endline="36" pcid="332">
    function quorum(
        uint256 blockNumber
    ) public view override(IGovernor, GovernorVotesQuorumFraction) returns (uint256) {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="44" endline="46" pcid="343">
    function state(uint256 proposalId) public view override(Governor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="38" endline="42" pcid="342">
    function quorum(
        uint256 blockNumber
    ) public view override(IGovernor, GovernorVotesQuorumFraction) returns (uint256) {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="36" endline="40" pcid="352">
    function quorum(
        uint256 blockNumber
    ) public view override(IGovernor, GovernorVotesQuorumFraction) returns (uint256) {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="38" endline="40" pcid="333">
    function state(uint256 proposalId) public view override(Governor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
</class>

<class classid="56" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="74" endline="78" pcid="338">
    function supportsInterface(
        bytes4 interfaceId
    ) public view override(Governor, GovernorTimelockControl) returns (bool) {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="80" endline="84" pcid="348">
    function supportsInterface(
        bytes4 interfaceId
    ) public view override(Governor, GovernorTimelockControl) returns (bool) {
        return super.supportsInterface(interfaceId);
    }
</source>
</class>

<class classid="57" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor2.sol" startline="32" endline="34" pcid="341">
    function proposalThreshold() public pure override returns (uint256) {
        return 1000e18;
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="30" endline="32" pcid="351">
    function proposalThreshold() public pure override returns (uint256) {
        return 1000e18;
    }
</source>
</class>

<class classid="58" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyToken.sol" startline="13" endline="15" pcid="360">
    function _afterTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._afterTokenTransfer(from, to, amount);
    }
</source>
<source file="systems/source-code/MyTokenTimestampBased.sol" startline="24" endline="26" pcid="365">
    function _afterTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._afterTokenTransfer(from, to, amount);
    }
</source>
<source file="systems/source-code/MyTokenWrapped.sol" startline="20" endline="22" pcid="369">
    function _afterTokenTransfer(address from, address to, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._afterTokenTransfer(from, to, amount);
    }
</source>
</class>

<class classid="59" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/MyToken.sol" startline="17" endline="19" pcid="361">
    function _mint(address to, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._mint(to, amount);
    }
</source>
<source file="systems/source-code/MyTokenTimestampBased.sol" startline="32" endline="34" pcid="367">
    function _burn(address account, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._burn(account, amount);
    }
</source>
<source file="systems/source-code/MyTokenTimestampBased.sol" startline="28" endline="30" pcid="366">
    function _mint(address to, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._mint(to, amount);
    }
</source>
<source file="systems/source-code/MyToken.sol" startline="21" endline="23" pcid="362">
    function _burn(address account, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._burn(account, amount);
    }
</source>
<source file="systems/source-code/MyTokenWrapped.sol" startline="28" endline="30" pcid="371">
    function _burn(address account, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._burn(account, amount);
    }
</source>
<source file="systems/source-code/MyTokenWrapped.sol" startline="24" endline="26" pcid="370">
    function _mint(address to, uint256 amount) internal override(ERC20, ERC20Votes) {
        super._mint(to, amount);
    }
</source>
</class>

<class classid="60" nclones="4" nlines="12" similarity="100">
<source file="systems/source-code/SafeMathMemoryCheck.sol" startline="8" endline="19" pcid="455">
    function addMemoryCheck() internal pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.add(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMemoryCheck.sol" startline="60" endline="71" pcid="459">
    function modMemoryCheck() internal pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.mod(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMemoryCheck.sol" startline="34" endline="45" pcid="457">
    function mulMemoryCheck() internal pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.mul(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMemoryCheck.sol" startline="47" endline="58" pcid="458">
    function divMemoryCheck() internal pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.div(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
</class>

<class classid="61" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/StorageSlotMock.sol" startline="26" endline="28" pcid="480">
    function getBoolean(bytes32 slot) public view returns (bool) {
        return slot.getBooleanSlot().value;
    }
</source>
<source file="systems/source-code/StorageSlotMock.sol" startline="38" endline="40" pcid="483">
    function getUint256(bytes32 slot) public view returns (uint256) {
        return slot.getUint256Slot().value;
    }
</source>
<source file="systems/source-code/StorageSlotMock.sol" startline="34" endline="36" pcid="482">
    function getBytes32(bytes32 slot) public view returns (bytes32) {
        return slot.getBytes32Slot().value;
    }
</source>
<source file="systems/source-code/StorageSlotMock.sol" startline="30" endline="32" pcid="481">
    function getAddress(bytes32 slot) public view returns (address) {
        return slot.getAddressSlot().value;
    }
</source>
</class>

<class classid="62" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="16" endline="18" pcid="495">
    function getDeadline(Timestamp memory timer) internal pure returns (uint64) {
        return timer._deadline;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="48" endline="50" pcid="502">
    function getDeadline(BlockNumber memory timer) internal pure returns (uint64) {
        return timer._deadline;
    }
</source>
</class>

<class classid="63" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="20" endline="22" pcid="496">
    function setDeadline(Timestamp storage timer, uint64 timestamp) internal {
        timer._deadline = timestamp;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="52" endline="54" pcid="503">
    function setDeadline(BlockNumber storage timer, uint64 timestamp) internal {
        timer._deadline = timestamp;
    }
</source>
</class>

<class classid="64" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="24" endline="26" pcid="497">
    function reset(Timestamp storage timer) internal {
        timer._deadline = 0;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="56" endline="58" pcid="504">
    function reset(BlockNumber storage timer) internal {
        timer._deadline = 0;
    }
</source>
</class>

<class classid="65" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="28" endline="30" pcid="498">
    function isUnset(Timestamp memory timer) internal pure returns (bool) {
        return timer._deadline == 0;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="60" endline="62" pcid="505">
    function isUnset(BlockNumber memory timer) internal pure returns (bool) {
        return timer._deadline == 0;
    }
</source>
</class>

<class classid="66" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="32" endline="34" pcid="499">
    function isStarted(Timestamp memory timer) internal pure returns (bool) {
        return timer._deadline > 0;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="64" endline="66" pcid="506">
    function isStarted(BlockNumber memory timer) internal pure returns (bool) {
        return timer._deadline > 0;
    }
</source>
</class>

<class classid="67" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="36" endline="38" pcid="500">
    function isPending(Timestamp memory timer) internal view returns (bool) {
        return timer._deadline > block.timestamp;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="68" endline="70" pcid="507">
    function isPending(BlockNumber memory timer) internal view returns (bool) {
        return timer._deadline > block.number;
    }
</source>
</class>

<class classid="68" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="40" endline="42" pcid="501">
    function isExpired(Timestamp memory timer) internal view returns (bool) {
        return isStarted(timer) && timer._deadline <= block.timestamp;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="72" endline="74" pcid="508">
    function isExpired(BlockNumber memory timer) internal view returns (bool) {
        return isStarted(timer) && timer._deadline <= block.number;
    }
</source>
</class>

<class classid="69" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="16" endline="18" pcid="510">
    function setDeadline(uint64 timestamp) public {
        _timer.setDeadline(timestamp);
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="16" endline="18" pcid="517">
    function setDeadline(uint64 timestamp) public {
        _timer.setDeadline(timestamp);
    }
</source>
</class>

</clones>
