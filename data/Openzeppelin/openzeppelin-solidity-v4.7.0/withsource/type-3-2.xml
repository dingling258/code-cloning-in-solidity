<clones>
<systeminfo processor="nicad6" system="source-code" granularity="functions-blind" threshold="30%" minlines="3" maxlines="2500"/>
<cloneinfo npcs="754" npairs="2271"/>
<runinfo ncompares="170153" cputime="15469"/>
<classinfo nclasses="95"/>

<class classid="1" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/AccessControlCrossChainMock.sol" startline="13" endline="15" pcid="1">
    function setRoleAdmin(bytes32 roleId, bytes32 adminRoleId) public {
        _setRoleAdmin(roleId, adminRoleId);
    }
</source>
<source file="systems/source-code/AccessControlEnumerableMock.sol" startline="12" endline="14" pcid="4">
    function setRoleAdmin(bytes32 roleId, bytes32 adminRoleId) public {
        _setRoleAdmin(roleId, adminRoleId);
    }
</source>
<source file="systems/source-code/AccessControlMock.sol" startline="12" endline="14" pcid="6">
    function setRoleAdmin(bytes32 roleId, bytes32 adminRoleId) public {
        _setRoleAdmin(roleId, adminRoleId);
    }
</source>
</class>

<class classid="2" nclones="12" nlines="3" similarity="100">
<source file="systems/source-code/ArraysImpl.sol" startline="16" endline="18" pcid="9">
    function findUpperBound(uint256 element) external view returns (uint256) {
        return _array.findUpperBound(element);
    }
</source>
<source file="systems/source-code/CheckpointsImpl.sol" startline="16" endline="18" pcid="33">
    function getAtBlock(uint256 blockNumber) public view returns (uint256) {
        return _totalCheckpoints.getAtBlock(blockNumber);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="169" endline="171" pcid="157">
    function get(uint256 key) public view returns (uint256) {
        return _map.get(key);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="68" endline="70" pcid="201">
    function at(uint256 index) public view returns (address) {
        return _set.at(index);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="33" endline="35" pcid="195">
    function at(uint256 index) public view returns (bytes32) {
        return _set.at(index);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="41" endline="43" pcid="133">
    function get(uint256 key) public view returns (address) {
        return _map.get(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="143" endline="145" pcid="151">
    function contains(uint256 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="85" endline="87" pcid="203">
    function contains(uint256 value) public view returns (bool) {
        return _set.contains(value);
    }
</source>
<source file="systems/source-code/BitmapMock.sol" startline="12" endline="14" pcid="15">
    function get(uint256 index) public view returns (bool) {
        return _bitmap.get(index);
    }
</source>
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="43" endline="45" pcid="65">
    function at(uint256 i) public view returns (bytes32) {
        return _vector.at(i);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="15" endline="17" pcid="127">
    function contains(uint256 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="103" endline="105" pcid="207">
    function at(uint256 index) public view returns (uint256) {
        return _set.at(index);
    }
</source>
</class>

<class classid="3" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/BeaconProxy.sol" startline="37" endline="39" pcid="12">
    function _beacon() internal view virtual returns (address) {
        return _getBeacon();
    }
</source>
<source file="systems/source-code/TransparentUpgradeableProxy.sol" startline="113" endline="115" pcid="706">
    function _admin() internal view virtual returns (address) {
        return _getAdmin();
    }
</source>
</class>

<class classid="4" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/BitmapMock.sol" startline="20" endline="22" pcid="17">
    function set(uint256 index) public {
        _bitmap.set(index);
    }
</source>
<source file="systems/source-code/BitmapMock.sol" startline="24" endline="26" pcid="18">
    function unset(uint256 index) public {
        _bitmap.unset(index);
    }
</source>
</class>

<class classid="5" nclones="2" nlines="5" similarity="75">
<source file="systems/source-code/BitMaps.sol" startline="41" endline="45" pcid="21">
    function set(BitMap storage bitmap, uint256 index) internal {
        uint256 bucket = index >> 8;
        uint256 mask = 1 << (index & 0xff);
        bitmap._data[bucket] |= mask;
    }
</source>
<source file="systems/source-code/BitMaps.sol" startline="50" endline="54" pcid="22">
    function unset(BitMap storage bitmap, uint256 index) internal {
        uint256 bucket = index >> 8;
        uint256 mask = 1 << (index & 0xff);
        bitmap._data[bucket] &= ~mask;
    }
</source>
</class>

<class classid="6" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/CallReceiverMock.sol" startline="35" endline="37" pcid="27">
    function mockFunctionRevertsNoReason() public payable {
        revert();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="28" endline="30" pcid="401">
    function onlyInitializingNested() public initializer {
        initializeOnlyInitializing();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="24" endline="26" pcid="400">
    function initializerNested() public initializer {
        initialize();
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="24" endline="26" pcid="439">
    function initialize() public initializer {
        __SampleHuman_init();
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="29" endline="31" pcid="440">
    function __SampleHuman_init() internal onlyInitializing {
        __SampleHuman_init_unchained();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="78" endline="80" pcid="408">
    function initialize() public initializer {
        doStuff();
    }
</source>
<source file="systems/source-code/ReentrancyMock.sol" startline="15" endline="17" pcid="489">
    function callback() external nonReentrant {
        _count();
    }
</source>
</class>

<class classid="7" nclones="24" nlines="3" similarity="100">
<source file="systems/source-code/CheckpointsImpl.sol" startline="12" endline="14" pcid="32">
    function latest() public view returns (uint256) {
        return _totalCheckpoints.latest();
    }
</source>
<source file="systems/source-code/CountersImpl.sol" startline="12" endline="14" pcid="52">
    function current() public view returns (uint256) {
        return _counter.current();
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="99" endline="101" pcid="206">
    function length() public view returns (uint256) {
        return _set.length();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="114" endline="116" pcid="146">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="12" endline="14" pcid="694">
    function getDeadline() public view returns (uint64) {
        return _timer.getDeadline();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="157" endline="159" pcid="154">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="36" endline="38" pcid="693">
    function isExpired() public view returns (bool) {
        return _timer.isExpired();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="24" endline="26" pcid="697">
    function isUnset() public view returns (bool) {
        return _timer.isUnset();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="72" endline="74" pcid="138">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="200" endline="202" pcid="162">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="64" endline="66" pcid="200">
    function length() public view returns (uint256) {
        return _set.length();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="29" endline="31" pcid="130">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="35" endline="37" pcid="63">
    function front() public view returns (bytes32) {
        return _vector.front();
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="29" endline="31" pcid="194">
    function length() public view returns (uint256) {
        return _set.length();
    }
</source>
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="39" endline="41" pcid="64">
    function back() public view returns (bytes32) {
        return _vector.back();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="12" endline="14" pcid="687">
    function getDeadline() public view returns (uint64) {
        return _timer.getDeadline();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="24" endline="26" pcid="690">
    function isUnset() public view returns (bool) {
        return _timer.isUnset();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="28" endline="30" pcid="698">
    function isStarted() public view returns (bool) {
        return _timer.isStarted();
    }
</source>
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="55" endline="57" pcid="68">
    function empty() public view returns (bool) {
        return _vector.empty();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="28" endline="30" pcid="691">
    function isStarted() public view returns (bool) {
        return _timer.isStarted();
    }
</source>
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="51" endline="53" pcid="67">
    function length() public view returns (uint256) {
        return _vector.length();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="36" endline="38" pcid="700">
    function isExpired() public view returns (bool) {
        return _timer.isExpired();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="32" endline="34" pcid="699">
    function isPending() public view returns (bool) {
        return _timer.isPending();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="32" endline="34" pcid="692">
    function isPending() public view returns (bool) {
        return _timer.isPending();
    }
</source>
</class>

<class classid="8" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/CountersImpl.sol" startline="16" endline="18" pcid="53">
    function increment() public {
        _counter.increment();
    }
</source>
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="20" endline="22" pcid="689">
    function reset() public {
        _timer.reset();
    }
</source>
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="47" endline="49" pcid="66">
    function clear() public {
        _vector.clear();
    }
</source>
<source file="systems/source-code/CountersImpl.sol" startline="20" endline="22" pcid="54">
    function decrement() public {
        _counter.decrement();
    }
</source>
<source file="systems/source-code/CountersImpl.sol" startline="24" endline="26" pcid="55">
    function reset() public {
        _counter.reset();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="20" endline="22" pcid="696">
    function reset() public {
        _timer.reset();
    }
</source>
</class>

<class classid="9" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="15" endline="17" pcid="59">
    function pushBack(bytes32 value) public {
        _vector.pushBack(value);
    }
</source>
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="19" endline="21" pcid="60">
    function pushFront(bytes32 value) public {
        _vector.pushFront(value);
    }
</source>
</class>

<class classid="10" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="23" endline="27" pcid="61">
    function popFront() public returns (bytes32) {
        bytes32 value = _vector.popFront();
        emit OperationResult(value);
        return value;
    }
</source>
<source file="systems/source-code/DoubleEndedQueueMock.sol" startline="29" endline="33" pcid="62">
    function popBack() public returns (bytes32) {
        bytes32 value = _vector.popBack();
        emit OperationResult(value);
        return value;
    }
</source>
</class>

<class classid="11" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/EIP712External.sol" startline="11" endline="13" pcid="84">
    function domainSeparator() external view returns (bytes32) {
        return _domainSeparatorV4();
    }
</source>
<source file="systems/source-code/VotesMock.sol" startline="13" endline="15" pcid="718">
    function getTotalSupply() public view returns (uint256) {
        return _getTotalSupply();
    }
</source>
<source file="systems/source-code/ERC721VotesMock.sol" startline="10" endline="12" pcid="327">
    function getTotalSupply() public view returns (uint256) {
        return _getTotalSupply();
    }
</source>
<source file="systems/source-code/ERC20FlashMintMock.sol" startline="37" endline="39" pcid="250">
    function flashFeeReceiver() public view returns (address) {
        return _flashFeeReceiver();
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="38" endline="40" pcid="743">
    function getExecutor() public view returns (address){
        return _executor();
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="62" endline="64" pcid="728">
    function getExecutor() public view returns (address){
        return _executor();
    }
</source>
</class>

<class classid="12" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/EIP712External.sol" startline="28" endline="30" pcid="86">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/ERC721VotesMock.sol" startline="22" endline="24" pcid="330">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/ERC20VotesCompMock.sol" startline="18" endline="20" pcid="270">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/VotesMock.sol" startline="37" endline="39" pcid="723">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/ERC20VotesMock.sol" startline="18" endline="20" pcid="275">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/ERC20PermitMock.sol" startline="17" endline="19" pcid="260">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
</class>

<class classid="13" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="186" endline="188" pcid="96">
    function remove(UintToUintMap storage map, uint256 key) internal returns (bool) {
        return remove(map._inner, bytes32(key));
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="278" endline="280" pcid="104">
    function remove(UintToAddressMap storage map, uint256 key) internal returns (bool) {
        return remove(map._inner, bytes32(key));
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="306" endline="308" pcid="185">
    function add(UintSet storage set, uint256 value) internal returns (bool) {
        return _add(set._inner, bytes32(value));
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="316" endline="318" pcid="186">
    function remove(UintSet storage set, uint256 value) internal returns (bool) {
        return _remove(set._inner, bytes32(value));
    }
</source>
</class>

<class classid="14" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="193" endline="195" pcid="97">
    function contains(UintToUintMap storage map, uint256 key) internal view returns (bool) {
        return contains(map._inner, bytes32(key));
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="285" endline="287" pcid="105">
    function contains(UintToAddressMap storage map, uint256 key) internal view returns (bool) {
        return contains(map._inner, bytes32(key));
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="323" endline="325" pcid="187">
    function contains(UintSet storage set, uint256 value) internal view returns (bool) {
        return _contains(set._inner, bytes32(value));
    }
</source>
</class>

<class classid="15" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="200" endline="202" pcid="98">
    function length(UintToUintMap storage map) internal view returns (uint256) {
        return length(map._inner);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="330" endline="332" pcid="188">
    function length(UintSet storage set) internal view returns (uint256) {
        return _length(set._inner);
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="478" endline="480" pcid="122">
    function length(Bytes32ToUintMap storage map) internal view returns (uint256) {
        return length(map._inner);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="256" endline="258" pcid="182">
    function length(AddressSet storage set) internal view returns (uint256) {
        return _length(set._inner);
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="292" endline="294" pcid="106">
    function length(UintToAddressMap storage map) internal view returns (uint256) {
        return length(map._inner);
    }
</source>
<source file="systems/source-code/EnumerableMap.sol" startline="386" endline="388" pcid="114">
    function length(AddressToUintMap storage map) internal view returns (uint256) {
        return length(map._inner);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="190" endline="192" pcid="176">
    function length(Bytes32Set storage set) internal view returns (uint256) {
        return _length(set._inner);
    }
</source>
</class>

<class classid="16" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="372" endline="374" pcid="112">
    function remove(AddressToUintMap storage map, address key) internal returns (bool) {
        return remove(map._inner, bytes32(uint256(uint160(key))));
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="232" endline="234" pcid="179">
    function add(AddressSet storage set, address value) internal returns (bool) {
        return _add(set._inner, bytes32(uint256(uint160(value))));
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="242" endline="244" pcid="180">
    function remove(AddressSet storage set, address value) internal returns (bool) {
        return _remove(set._inner, bytes32(uint256(uint160(value))));
    }
</source>
</class>

<class classid="17" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="379" endline="381" pcid="113">
    function contains(AddressToUintMap storage map, address key) internal view returns (bool) {
        return contains(map._inner, bytes32(uint256(uint160(key))));
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="249" endline="251" pcid="181">
    function contains(AddressSet storage set, address value) internal view returns (bool) {
        return _contains(set._inner, bytes32(uint256(uint160(value))));
    }
</source>
</class>

<class classid="18" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="464" endline="466" pcid="120">
    function remove(Bytes32ToUintMap storage map, bytes32 key) internal returns (bool) {
        return remove(map._inner, key);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="166" endline="168" pcid="173">
    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {
        return _add(set._inner, value);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="176" endline="178" pcid="174">
    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {
        return _remove(set._inner, value);
    }
</source>
</class>

<class classid="19" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMap.sol" startline="471" endline="473" pcid="121">
    function contains(Bytes32ToUintMap storage map, bytes32 key) internal view returns (bool) {
        return contains(map._inner, key);
    }
</source>
<source file="systems/source-code/EnumerableSet.sol" startline="183" endline="185" pcid="175">
    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {
        return _contains(set._inner, value);
    }
</source>
</class>

<class classid="20" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="24" endline="27" pcid="129">
    function remove(uint256 key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="152" endline="155" pcid="153">
    function remove(uint256 key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="94" endline="97" pcid="205">
    function remove(uint256 value) public {
        bool result = _set.remove(value);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="89" endline="92" pcid="204">
    function add(uint256 value) public {
        bool result = _set.add(value);
        emit OperationResult(result);
    }
</source>
</class>

<class classid="21" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="37" endline="39" pcid="132">
    function tryGet(uint256 key) public view returns (bool, address) {
        return _map.tryGet(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="165" endline="167" pcid="156">
    function tryGet(uint256 key) public view returns (bool, uint256) {
        return _map.tryGet(key);
    }
</source>
</class>

<class classid="22" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="45" endline="47" pcid="134">
    function getWithMessage(uint256 key, string calldata errorMessage) public view returns (address) {
        return _map.get(key, errorMessage);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="173" endline="175" pcid="158">
    function getWithMessage(uint256 key, string calldata errorMessage) public view returns (uint256) {
        return _map.get(key, errorMessage);
    }
</source>
</class>

<class classid="23" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="58" endline="60" pcid="135">
    function contains(address key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="84" endline="86" pcid="141">
    function get(address key) public view returns (uint256) {
        return _map.get(key);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="50" endline="52" pcid="197">
    function contains(address value) public view returns (bool) {
        return _set.contains(value);
    }
</source>
</class>

<class classid="24" nclones="3" nlines="4" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="67" endline="70" pcid="137">
    function remove(address key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="54" endline="57" pcid="198">
    function add(address value) public {
        bool result = _set.add(value);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="59" endline="62" pcid="199">
    function remove(address value) public {
        bool result = _set.remove(value);
        emit OperationResult(result);
    }
</source>
</class>

<class classid="25" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="100" endline="102" pcid="143">
    function contains(bytes32 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="126" endline="128" pcid="149">
    function get(bytes32 key) public view returns (bytes32) {
        return _map.get(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="186" endline="188" pcid="159">
    function contains(bytes32 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="212" endline="214" pcid="165">
    function get(bytes32 key) public view returns (uint256) {
        return _map.get(key);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="15" endline="17" pcid="191">
    function contains(bytes32 value) public view returns (bool) {
        return _set.contains(value);
    }
</source>
</class>

<class classid="26" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="109" endline="112" pcid="145">
    function remove(bytes32 key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="195" endline="198" pcid="161">
    function remove(bytes32 key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="24" endline="27" pcid="193">
    function remove(bytes32 value) public {
        bool result = _set.remove(value);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="19" endline="22" pcid="192">
    function add(bytes32 value) public {
        bool result = _set.add(value);
        emit OperationResult(result);
    }
</source>
</class>

<class classid="27" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="122" endline="124" pcid="148">
    function tryGet(bytes32 key) public view returns (bool, bytes32) {
        return _map.tryGet(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="208" endline="210" pcid="164">
    function tryGet(bytes32 key) public view returns (bool, uint256) {
        return _map.tryGet(key);
    }
</source>
</class>

<class classid="28" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="130" endline="132" pcid="150">
    function getWithMessage(bytes32 key, string calldata errorMessage) public view returns (bytes32) {
        return _map.get(key, errorMessage);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="216" endline="218" pcid="166">
    function getWithMessage(bytes32 key, string calldata errorMessage) public view returns (uint256) {
        return _map.get(key, errorMessage);
    }
</source>
</class>

<class classid="29" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155BurnableMock.sol" startline="10" endline="17" pcid="209">
    function mint(
        address to,
        uint256 id,
        uint256 value,
        bytes memory data
    ) public {
        _mint(to, id, value, data);
    }
</source>
<source file="systems/source-code/ERC1155Mock.sol" startline="18" endline="25" pcid="213">
    function mint(
        address to,
        uint256 id,
        uint256 value,
        bytes memory data
    ) public {
        _mint(to, id, value, data);
    }
</source>
</class>

<class classid="30" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155Mock.sol" startline="14" endline="16" pcid="212">
    function setURI(string memory newuri) public {
        _setURI(newuri);
    }
</source>
<source file="systems/source-code/ERC1155URIStorageMock.sol" startline="19" endline="21" pcid="231">
    function setBaseURI(string memory baseURI) public {
        _setBaseURI(baseURI);
    }
</source>
</class>

<class classid="31" nclones="11" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155PausableMock.sol" startline="11" endline="13" pcid="217">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/ERC20PausableMock.sol" startline="18" endline="20" pcid="256">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/ERC20PausableMock.sol" startline="22" endline="24" pcid="257">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/ERC20SnapshotMock.sol" startline="17" endline="19" pcid="265">
    function snapshot() public {
        _snapshot();
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="14" endline="16" pcid="300">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="18" endline="20" pcid="301">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/ERC721RoyaltyMock.sol" startline="30" endline="32" pcid="317">
    function deleteDefaultRoyalty() public {
        _deleteDefaultRoyalty();
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="95" endline="97" pcid="412">
    function disableInitializers() public {
        _disableInitializers();
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="24" endline="26" pcid="485">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="28" endline="30" pcid="486">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/ERC1155PausableMock.sol" startline="15" endline="17" pcid="218">
    function unpause() external {
        _unpause();
    }
</source>
</class>

<class classid="32" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155PausableMock.sol" startline="19" endline="28" pcid="219">
    function _beforeTokenTransfer(
        address operator,
        address from,
        address to,
        uint256[] memory ids,
        uint256[] memory amounts,
        bytes memory data
    ) internal virtual override(ERC1155, ERC1155Pausable) {
        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);
    }
</source>
<source file="systems/source-code/ERC1155PresetMinterPauser.sol" startline="118" endline="127" pcid="225">
    function _beforeTokenTransfer(
        address operator,
        address from,
        address to,
        uint256[] memory ids,
        uint256[] memory amounts,
        bytes memory data
    ) internal virtual override(ERC1155, ERC1155Pausable) {
        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);
    }
</source>
<source file="systems/source-code/ERC1155SupplyMock.sol" startline="11" endline="20" pcid="228">
    function _beforeTokenTransfer(
        address operator,
        address from,
        address to,
        uint256[] memory ids,
        uint256[] memory amounts,
        bytes memory data
    ) internal virtual override(ERC1155, ERC1155Supply) {
        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);
    }
</source>
</class>

<class classid="33" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155PresetMinterPauser.sol" startline="108" endline="116" pcid="224">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        virtual
        override(AccessControlEnumerable, ERC1155)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="31" endline="39" pcid="371">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        virtual
        override(Governor, GovernorTimelockCompound)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="31" endline="39" pcid="379">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        virtual
        override(Governor, GovernorTimelockControl)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
</class>

<class classid="34" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155URIStorageMock.sol" startline="15" endline="17" pcid="230">
    function setURI(uint256 tokenId, string memory _tokenURI) public {
        _setURI(tokenId, _tokenURI);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="28" endline="30" pcid="321">
    function setTokenURI(uint256 tokenId, string memory _tokenURI) public {
        _setTokenURI(tokenId, _tokenURI);
    }
</source>
</class>

<class classid="35" nclones="27" nlines="3" similarity="100">
<source file="systems/source-code/ERC20CappedMock.sol" startline="14" endline="16" pcid="245">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC20FlashMintMock.sol" startline="20" endline="22" pcid="246">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/PullPaymentMock.sol" startline="12" endline="14" pcid="487">
    function callTransfer(address dest, uint256 amount) public {
        _asyncTransfer(dest, amount);
    }
</source>
<source file="systems/source-code/ERC721VotesMock.sol" startline="14" endline="16" pcid="328">
    function mint(address account, uint256 tokenId) public {
        _mint(account, tokenId);
    }
</source>
<source file="systems/source-code/ERC20Mock.sol" startline="18" endline="20" pcid="252">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="40" endline="42" pcid="324">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC20Mock.sol" startline="22" endline="24" pcid="253">
    function burn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC20PausableMock.sol" startline="26" endline="28" pcid="258">
    function mint(address to, uint256 amount) public {
        _mint(to, amount);
    }
</source>
<source file="systems/source-code/ERC20PausableMock.sol" startline="30" endline="32" pcid="259">
    function burn(address from, uint256 amount) public {
        _burn(from, amount);
    }
</source>
<source file="systems/source-code/ERC20SnapshotMock.sol" startline="21" endline="23" pcid="266">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC20SnapshotMock.sol" startline="25" endline="27" pcid="267">
    function burn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC20VotesCompMock.sol" startline="10" endline="12" pcid="268">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC20VotesCompMock.sol" startline="14" endline="16" pcid="269">
    function burn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC20VotesMock.sol" startline="10" endline="12" pcid="273">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC20VotesMock.sol" startline="14" endline="16" pcid="274">
    function burn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC4626Mock.sol" startline="15" endline="17" pcid="279">
    function mockMint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC4626Mock.sol" startline="19" endline="21" pcid="280">
    function mockBurn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="36" endline="38" pcid="323">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721BurnableMock.sol" startline="14" endline="16" pcid="282">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721BurnableMock.sol" startline="18" endline="20" pcid="283">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="32" endline="34" pcid="289">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="36" endline="38" pcid="290">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="22" endline="24" pcid="296">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="26" endline="28" pcid="297">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="26" endline="28" pcid="303">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="30" endline="32" pcid="304">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721RoyaltyMock.sol" startline="22" endline="24" pcid="315">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
</class>

<class classid="36" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/ERC20FlashMintMock.sol" startline="41" endline="43" pcid="251">
    function _flashFeeReceiver() internal view override returns (address) {
        return _flashFeeReceiverAddress;
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="76" endline="78" pcid="731">
    function proposalThreshold() public view override returns (uint256) {   // HARNESS: pure -> view
        return _proposalThreshold;                                          // HARNESS: parametric
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="72" endline="74" pcid="730">
    function votingPeriod() public view override returns (uint256) {    // HARNESS: pure -> view
        return _votingPeriod;                                           // HARNESS: parametric
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="68" endline="70" pcid="729">
    function votingDelay() public view override returns (uint256) {     // HARNESS: pure -> view
        return _votingDelay;                                            // HARNESS: parametric
    }
</source>
</class>

<class classid="37" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ERC20Mock.sol" startline="26" endline="32" pcid="254">
    function transferInternal(
        address from,
        address to,
        uint256 value
    ) public {
        _transfer(from, to, value);
    }
</source>
<source file="systems/source-code/ERC20Mock.sol" startline="34" endline="40" pcid="255">
    function approveInternal(
        address owner,
        address spender,
        uint256 value
    ) public {
        _approve(owner, spender, value);
    }
</source>
<source file="systems/source-code/ERC777Mock.sol" startline="40" endline="46" pcid="333">
    function approveInternal(
        address holder,
        address spender,
        uint256 value
    ) public {
        _approve(holder, spender, value);
    }
</source>
</class>

<class classid="38" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/ERC2771ContextMock.sol" startline="15" endline="17" pcid="277">
    function _msgSender() internal view virtual override(Context, ERC2771Context) returns (address) {
        return ERC2771Context._msgSender();
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="95" endline="97" pcid="378">
    function _executor() internal view virtual override(Governor, GovernorTimelockCompound) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="95" endline="97" pcid="386">
    function _executor() internal view virtual override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="127" endline="129" pcid="359">
    function _executor() internal view virtual override(Governor, GovernorTimelockCompound) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/GovernorPreventLateQuorumMock.sol" startline="48" endline="50" pcid="369">
    function proposalThreshold() public view virtual override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
</class>

<class classid="39" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/ERC721BurnableMock.sol" startline="10" endline="12" pcid="281">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="32" endline="34" pcid="322">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="28" endline="30" pcid="288">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="22" endline="24" pcid="302">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="18" endline="20" pcid="295">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
</class>

<class classid="40" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/ERC721BurnableMock.sol" startline="22" endline="28" pcid="284">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="44" endline="50" pcid="325">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="40" endline="46" pcid="291">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="30" endline="36" pcid="298">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="34" endline="40" pcid="305">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
</class>

<class classid="41" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="16" endline="18" pcid="285">
    function _baseURI() internal view virtual override returns (string memory) {
        return _baseTokenURI;
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="16" endline="18" pcid="318">
    function _baseURI() internal view virtual override returns (string memory) {
        return _baseTokenURI;
    }
</source>
<source file="systems/source-code/ERC721PresetMinterPauserAutoId.sol" startline="67" endline="69" pcid="307">
    function _baseURI() internal view virtual override returns (string memory) {
        return _baseTokenURI;
    }
</source>
</class>

<class classid="42" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="20" endline="22" pcid="286">
    function setBaseURI(string calldata newBaseTokenURI) public {
        _baseTokenURI = newBaseTokenURI;
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="20" endline="22" pcid="319">
    function setBaseURI(string calldata newBaseTokenURI) public {
        _baseTokenURI = newBaseTokenURI;
    }
</source>
</class>

<class classid="43" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="24" endline="26" pcid="287">
    function baseURI() public view returns (string memory) {
        return _baseURI();
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="14" endline="16" pcid="294">
    function baseURI() public view returns (string memory) {
        return _baseURI();
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="24" endline="26" pcid="320">
    function baseURI() public view returns (string memory) {
        return _baseURI();
    }
</source>
</class>

<class classid="44" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="48" endline="50" pcid="292">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721VotesMock.sol" startline="18" endline="20" pcid="329">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="42" endline="44" pcid="306">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="38" endline="40" pcid="299">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721RoyaltyMock.sol" startline="26" endline="28" pcid="316">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="52" endline="54" pcid="326">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
</class>

<class classid="45" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721PresetMinterPauserAutoId.sol" startline="130" endline="138" pcid="312">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        virtual
        override(AccessControlEnumerable, ERC721, ERC721Enumerable)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="30" endline="38" pcid="348">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        virtual
        override(IERC165, Governor, GovernorTimelockCompound)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
</class>

<class classid="46" nclones="2" nlines="9" similarity="100">
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="48" endline="77" pcid="335">
    function tokensToSend(
        address operator,
        address from,
        address to,
        uint256 amount,
        bytes calldata userData,
        bytes calldata operatorData
    ) external override {
        if (_shouldRevertSend) {
            revert();
        }

        IERC777 token = IERC777(_msgSender());

        uint256 fromBalance = token.balanceOf(from);
        // when called due to burn, to will be the zero address, which will have a balance of 0
        uint256 toBalance = token.balanceOf(to);

        emit TokensToSendCalled(
            operator,
            from,
            to,
            amount,
            userData,
            operatorData,
            address(token),
            fromBalance,
            toBalance
        );
    }
</source>
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="79" endline="108" pcid="336">
    function tokensReceived(
        address operator,
        address from,
        address to,
        uint256 amount,
        bytes calldata userData,
        bytes calldata operatorData
    ) external override {
        if (_shouldRevertReceive) {
            revert();
        }

        IERC777 token = IERC777(_msgSender());

        uint256 fromBalance = token.balanceOf(from);
        // when called due to burn, to will be the zero address, which will have a balance of 0
        uint256 toBalance = token.balanceOf(to);

        emit TokensReceivedCalled(
            operator,
            from,
            to,
            amount,
            userData,
            operatorData,
            address(token),
            fromBalance,
            toBalance
        );
    }
</source>
</class>

<class classid="47" nclones="2" nlines="7" similarity="100">
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="110" endline="117" pcid="337">
    function senderFor(address account) public {
        _registerInterfaceForAddress(_TOKENS_SENDER_INTERFACE_HASH, account);

        address self = address(this);
        if (account == self) {
            registerSender(self);
        }
    }
</source>
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="123" endline="130" pcid="339">
    function recipientFor(address account) public {
        _registerInterfaceForAddress(_TOKENS_RECIPIENT_INTERFACE_HASH, account);

        address self = address(this);
        if (account == self) {
            registerRecipient(self);
        }
    }
</source>
</class>

<class classid="48" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="119" endline="121" pcid="338">
    function registerSender(address sender) public {
        _erc1820.setInterfaceImplementer(address(this), _TOKENS_SENDER_INTERFACE_HASH, sender);
    }
</source>
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="132" endline="134" pcid="340">
    function registerRecipient(address recipient) public {
        _erc1820.setInterfaceImplementer(address(this), _TOKENS_RECIPIENT_INTERFACE_HASH, recipient);
    }
</source>
</class>

<class classid="49" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="136" endline="138" pcid="341">
    function setShouldRevertSend(bool shouldRevert) public {
        _shouldRevertSend = shouldRevert;
    }
</source>
<source file="systems/source-code/ERC777SenderRecipientMock.sol" startline="140" endline="142" pcid="342">
    function setShouldRevertReceive(bool shouldRevert) public {
        _shouldRevertReceive = shouldRevert;
    }
</source>
</class>

<class classid="50" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="40" endline="42" pcid="349">
    function quorum(uint256) public pure override returns (uint256) {
        return 0;
    }
</source>
<source file="systems/source-code/GovernorWithParamsMock.sol" startline="13" endline="15" pcid="392">
    function quorum(uint256) public pure override returns (uint256) {
        return 0;
    }
</source>
<source file="systems/source-code/GovernorVoteMock.sol" startline="11" endline="13" pcid="388">
    function quorum(uint256) public pure override returns (uint256) {
        return 0;
    }
</source>
<source file="systems/source-code/GovernorCompMock.sol" startline="11" endline="13" pcid="360">
    function quorum(uint256) public pure override returns (uint256) {
        return 0;
    }
</source>
</class>

<class classid="51" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="54" endline="62" pcid="351">
    function proposalEta(uint256 proposalId)
        public
        view
        virtual
        override(IGovernorTimelock, GovernorTimelockCompound)
        returns (uint256)
    {
        return super.proposalEta(proposalId);
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="62" endline="70" pcid="382">
    function state(uint256 proposalId)
        public
        view
        virtual
        override(Governor, GovernorTimelockControl)
        returns (ProposalState)
    {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="62" endline="70" pcid="374">
    function state(uint256 proposalId)
        public
        view
        virtual
        override(Governor, GovernorTimelockCompound)
        returns (ProposalState)
    {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/GovernorPreventLateQuorumMock.sol" startline="38" endline="46" pcid="368">
    function proposalDeadline(uint256 proposalId)
        public
        view
        virtual
        override(Governor, GovernorPreventLateQuorum)
        returns (uint256)
    {
        return super.proposalDeadline(proposalId);
    }
</source>
</class>

<class classid="52" nclones="9" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="64" endline="66" pcid="352">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
<source file="systems/source-code/GovernorMock.sol" startline="38" endline="40" pcid="365">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="133" endline="140" pcid="738">
    function _executor()
        internal
        view
        override(Governor, GovernorTimelockControl)
        returns (address)
    {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="75" endline="77" pcid="461">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="81" endline="83" pcid="471">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="72" endline="74" pcid="375">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="72" endline="74" pcid="383">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="124" endline="131" pcid="753">
    function _executor()
        internal
        view
        override(Governor, GovernorTimelockCompound)
        returns (address)
    {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="84" endline="86" pcid="481">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
</class>

<class classid="53" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="95" endline="103" pcid="356">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal virtual override(Governor, GovernorTimelockCompound) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="76" endline="84" pcid="384">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal virtual override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="76" endline="84" pcid="376">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal virtual override(Governor, GovernorTimelockCompound) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="54" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="109" endline="116" pcid="357">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorWithParamsMock.sol" startline="53" endline="60" pcid="397">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorMock.sol" startline="29" endline="36" pcid="364">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorVoteMock.sol" startline="23" endline="30" pcid="391">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="50" endline="57" pcid="373">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="50" endline="57" pcid="381">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/GovernorCompMock.sol" startline="23" endline="30" pcid="363">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
</class>

<class classid="55" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="118" endline="125" pcid="358">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) internal virtual override(Governor, GovernorTimelockCompound) returns (uint256 proposalId) {
        return super._cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="86" endline="93" pcid="377">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) internal virtual override(Governor, GovernorTimelockCompound) returns (uint256 proposalId) {
        return super._cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="86" endline="93" pcid="385">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal virtual override(Governor, GovernorTimelockControl) returns (uint256 proposalId) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="56" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompMock.sol" startline="15" endline="17" pcid="361">
    function votingDelay() public pure override returns (uint256) {
        return 4;
    }
</source>
<source file="systems/source-code/GovernorWithParamsMock.sol" startline="17" endline="19" pcid="393">
    function votingDelay() public pure override returns (uint256) {
        return 4;
    }
</source>
<source file="systems/source-code/GovernorVoteMock.sol" startline="15" endline="17" pcid="389">
    function votingDelay() public pure override returns (uint256) {
        return 4;
    }
</source>
</class>

<class classid="57" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompMock.sol" startline="19" endline="21" pcid="362">
    function votingPeriod() public pure override returns (uint256) {
        return 16;
    }
</source>
<source file="systems/source-code/GovernorWithParamsMock.sol" startline="21" endline="23" pcid="394">
    function votingPeriod() public pure override returns (uint256) {
        return 16;
    }
</source>
<source file="systems/source-code/GovernorVoteMock.sol" startline="19" endline="21" pcid="390">
    function votingPeriod() public pure override returns (uint256) {
        return 16;
    }
</source>
</class>

<class classid="58" nclones="11" nlines="3" similarity="100">
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="41" endline="48" pcid="372">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="74" endline="81" pcid="747">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="40" endline="47" pcid="466">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="92" endline="99" pcid="749">
    function state(uint256 proposalId)
        public
        view
        override(Governor, GovernorTimelockCompound)
        returns (ProposalState)
    {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="101" endline="108" pcid="734">
    function state(uint256 proposalId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (ProposalState)
    {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="83" endline="90" pcid="732">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="38" endline="45" pcid="476">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="49" endline="51" pcid="467">
    function state(uint256 proposalId) public view override(Governor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="43" endline="45" pcid="457">
    function state(uint256 proposalId) public view override(Governor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="34" endline="41" pcid="456">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="41" endline="48" pcid="380">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
</class>

<class classid="59" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="16" endline="18" pcid="398">
    function initialize() public initializer {
        initializerRan = true;
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="34" endline="36" pcid="441">
    function __SampleHuman_init_unchained() internal onlyInitializing {
        isHuman = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="20" endline="22" pcid="399">
    function initializeOnlyInitializing() public onlyInitializing {
        onlyInitializingRan = true;
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="20" endline="22" pcid="484">
    function drasticMeasure() external whenPaused {
        drasticMeasureTaken = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="70" endline="72" pcid="407">
    function childInitialize() public initializer {
        childInitializerRan = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="58" endline="60" pcid="406">
    function initializeOnlyInitializing() public onlyInitializing {
        onlyInitializingRan = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="54" endline="56" pcid="405">
    function initialize() public initializer {
        initializerRan = true;
    }
</source>
</class>

<class classid="60" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="32" endline="34" pcid="402">
    function initializeWithX(uint256 _x) public payable initializer {
        x = _x;
    }
</source>
<source file="systems/source-code/SingleInheritanceInitializableMocks.sol" startline="14" endline="16" pcid="654">
    function initialize(uint256 value) public payable initializer {
        x = value;
    }
</source>
</class>

<class classid="61" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="36" endline="38" pcid="403">
    function nonInitializable(uint256 _x) public payable {
        x = _x;
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="56" endline="58" pcid="444">
    function __SampleMother_init_unchained(uint256 value) internal onlyInitializing {
        mother = value;
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="100" endline="102" pcid="450">
    function __SampleFather_init_unchained(uint256 _father) internal onlyInitializing {
        father = _father;
    }
</source>
<source file="systems/source-code/MultipleInheritanceInitializableMocks.sol" startline="133" endline="135" pcid="453">
    function __SampleChild_init_unchained(uint256 _child) internal onlyInitializing {
        child = _child;
    }
</source>
</class>

<class classid="62" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="99" endline="101" pcid="413">
    function doStuff() public onlyInitializing {
        counter++;
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="16" endline="18" pcid="483">
    function normalProcess() external whenNotPaused {
        count++;
    }
</source>
</class>

<class classid="63" nclones="9" nlines="3" similarity="100">
<source file="systems/source-code/MathMock.sol" startline="8" endline="10" pcid="414">
    function max(uint256 a, uint256 b) public pure returns (uint256) {
        return Math.max(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="46" endline="48" pcid="631">
    function doMod(uint256 a, uint256 b) public pure returns (uint256) {
        return SafeMath.mod(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="42" endline="44" pcid="630">
    function doDiv(uint256 a, uint256 b) public pure returns (uint256) {
        return SafeMath.div(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="38" endline="40" pcid="629">
    function doMul(uint256 a, uint256 b) public pure returns (uint256) {
        return SafeMath.mul(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="34" endline="36" pcid="628">
    function doSub(uint256 a, uint256 b) public pure returns (uint256) {
        return SafeMath.sub(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="30" endline="32" pcid="627">
    function doAdd(uint256 a, uint256 b) public pure returns (uint256) {
        return SafeMath.add(a, b);
    }
</source>
<source file="systems/source-code/MathMock.sol" startline="12" endline="14" pcid="415">
    function min(uint256 a, uint256 b) public pure returns (uint256) {
        return Math.min(a, b);
    }
</source>
<source file="systems/source-code/MathMock.sol" startline="16" endline="18" pcid="416">
    function average(uint256 a, uint256 b) public pure returns (uint256) {
        return Math.average(a, b);
    }
</source>
<source file="systems/source-code/MathMock.sol" startline="20" endline="22" pcid="417">
    function ceilDiv(uint256 a, uint256 b) public pure returns (uint256) {
        return Math.ceilDiv(a, b);
    }
</source>
</class>

<class classid="64" nclones="2" nlines="7" similarity="80">
<source file="systems/source-code/MerkleProof.sol" startline="56" endline="62" pcid="422">
    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {
        bytes32 computedHash = leaf;
        for (uint256 i = 0; i < proof.length; i++) {
            computedHash = _hashPair(computedHash, proof[i]);
        }
        return computedHash;
    }
</source>
<source file="systems/source-code/MerkleProof.sol" startline="69" endline="75" pcid="423">
    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {
        bytes32 computedHash = leaf;
        for (uint256 i = 0; i < proof.length; i++) {
            computedHash = _hashPair(computedHash, proof[i]);
        }
        return computedHash;
    }
</source>
</class>

<class classid="65" nclones="2" nlines="23" similarity="94">
<source file="systems/source-code/MerkleProof.sol" startline="113" endline="152" pcid="426">
    function processMultiProof(
        bytes32[] memory proof,
        bool[] memory proofFlags,
        bytes32[] memory leaves
    ) internal pure returns (bytes32 merkleRoot) {
        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by
        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the
        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of
        // the merkle tree.
        uint256 leavesLen = leaves.length;
        uint256 totalHashes = proofFlags.length;

        // Check proof validity.
        require(leavesLen + proof.length - 1 == totalHashes, "MerkleProof: invalid multiproof");

        // The xxxPos values are "pointers" to the next value to consume in each array. All accesses are done using
        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's "pop".
        bytes32[] memory hashes = new bytes32[](totalHashes);
        uint256 leafPos = 0;
        uint256 hashPos = 0;
        uint256 proofPos = 0;
        // At each step, we compute the next hash using two values:
        // - a value from the "main queue". If not all leaves have been consumed, we get the next leaf, otherwise we
        //   get the next hash.
        // - depending on the flag, either another value for the "main queue" (merging branches) or an element from the
        //   `proof` array.
        for (uint256 i = 0; i < totalHashes; i++) {
            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];
            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];
            hashes[i] = _hashPair(a, b);
        }

        if (totalHashes > 0) {
            return hashes[totalHashes - 1];
        } else if (leavesLen > 0) {
            return leaves[0];
        } else {
            return proof[0];
        }
    }
</source>
<source file="systems/source-code/MerkleProof.sol" startline="159" endline="198" pcid="427">
    function processMultiProofCalldata(
        bytes32[] calldata proof,
        bool[] calldata proofFlags,
        bytes32[] memory leaves
    ) internal pure returns (bytes32 merkleRoot) {
        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by
        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the
        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of
        // the merkle tree.
        uint256 leavesLen = leaves.length;
        uint256 totalHashes = proofFlags.length;

        // Check proof validity.
        require(leavesLen + proof.length - 1 == totalHashes, "MerkleProof: invalid multiproof");

        // The xxxPos values are "pointers" to the next value to consume in each array. All accesses are done using
        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's "pop".
        bytes32[] memory hashes = new bytes32[](totalHashes);
        uint256 leafPos = 0;
        uint256 hashPos = 0;
        uint256 proofPos = 0;
        // At each step, we compute the next hash using two values:
        // - a value from the "main queue". If not all leaves have been consumed, we get the next leaf, otherwise we
        //   get the next hash.
        // - depending on the flag, either another value for the "main queue" (merging branches) or an element from the
        //   `proof` array.
        for (uint256 i = 0; i < totalHashes; i++) {
            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];
            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];
            hashes[i] = _hashPair(a, b);
        }

        if (totalHashes > 0) {
            return hashes[totalHashes - 1];
        } else if (leavesLen > 0) {
            return leaves[0];
        } else {
            return proof[0];
        }
    }
</source>
</class>

<class classid="66" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="24" endline="26" pcid="454">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="24" endline="26" pcid="473">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="26" endline="28" pcid="463">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
</class>

<class classid="67" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="28" endline="30" pcid="455">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="28" endline="30" pcid="474">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="30" endline="32" pcid="464">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
</class>

<class classid="68" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="47" endline="54" pcid="458">
    function propose(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        string memory description
    ) public override(Governor, IGovernor) returns (uint256) {
        return super.propose(targets, values, calldatas, description);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="101" endline="107" pcid="750">
    function propose(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, string memory description)
        public
        override(Governor, IGovernor)
        returns (uint256)
    {
        return super.propose(targets, values, calldatas, description);
    }
</source>
</class>

<class classid="69" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="56" endline="64" pcid="459">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="62" endline="70" pcid="469">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="65" endline="73" pcid="479">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="109" endline="114" pcid="751">
    function _execute(uint256 proposalId, address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)
        internal
        override(Governor, GovernorTimelockCompound)
    {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="118" endline="123" pcid="736">
    function _execute(uint256 proposalId, address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)
        internal
        override(Governor, GovernorTimelockControl)
    {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="70" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="66" endline="73" pcid="460">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="125" endline="131" pcid="737">
    function _cancel(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)
        internal
        override(Governor, GovernorTimelockControl)
        returns (uint256)
    {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="116" endline="122" pcid="752">
    function _cancel(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)
        internal
        override(Governor, GovernorTimelockCompound)
        returns (uint256)
    {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="75" endline="82" pcid="480">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="72" endline="79" pcid="470">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="71" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="79" endline="86" pcid="462">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="85" endline="92" pcid="472">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="133" endline="140" pcid="754">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockCompound)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="142" endline="149" pcid="739">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
</class>

<class classid="72" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor2.sol" startline="34" endline="36" pcid="465">
    function proposalThreshold() public pure override returns (uint256) {
        return 1000e18;
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="32" endline="34" pcid="475">
    function proposalThreshold() public pure override returns (uint256) {
        return 1000e18;
    }
</source>
</class>

<class classid="73" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor2.sol" startline="53" endline="60" pcid="468">
    function propose(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        string memory description
    ) public override(Governor, GovernorProposalThreshold, IGovernor) returns (uint256) {
        return super.propose(targets, values, calldatas, description);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="110" endline="116" pcid="735">
    function propose(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, string memory description)
        public
        override(Governor, GovernorProposalThreshold, IGovernor)
        returns (uint256)
    {
        return super.propose(targets, values, calldatas, description);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="56" endline="63" pcid="478">
    function propose(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        string memory description
    ) public override(Governor, GovernorCompatibilityBravo, IGovernor) returns (uint256) {
        return super.propose(targets, values, calldatas, description);
    }
</source>
</class>

<class classid="74" nclones="32" nlines="3" similarity="100">
<source file="systems/source-code/SafeCastMock.sol" startline="11" endline="13" pcid="558">
    function toUint256(int256 a) public pure returns (uint256) {
        return a.toUint256();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="143" endline="145" pcid="591">
    function toInt248(int256 a) public pure returns (int248) {
        return a.toInt248();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="167" endline="169" pcid="597">
    function toInt200(int256 a) public pure returns (int200) {
        return a.toInt200();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="263" endline="265" pcid="621">
    function toInt8(int256 a) public pure returns (int8) {
        return a.toInt8();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="259" endline="261" pcid="620">
    function toInt16(int256 a) public pure returns (int16) {
        return a.toInt16();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="255" endline="257" pcid="619">
    function toInt24(int256 a) public pure returns (int24) {
        return a.toInt24();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="251" endline="253" pcid="618">
    function toInt32(int256 a) public pure returns (int32) {
        return a.toInt32();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="247" endline="249" pcid="617">
    function toInt40(int256 a) public pure returns (int40) {
        return a.toInt40();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="243" endline="245" pcid="616">
    function toInt48(int256 a) public pure returns (int48) {
        return a.toInt48();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="239" endline="241" pcid="615">
    function toInt56(int256 a) public pure returns (int56) {
        return a.toInt56();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="235" endline="237" pcid="614">
    function toInt64(int256 a) public pure returns (int64) {
        return a.toInt64();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="231" endline="233" pcid="613">
    function toInt72(int256 a) public pure returns (int72) {
        return a.toInt72();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="227" endline="229" pcid="612">
    function toInt80(int256 a) public pure returns (int80) {
        return a.toInt80();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="223" endline="225" pcid="611">
    function toInt88(int256 a) public pure returns (int88) {
        return a.toInt88();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="219" endline="221" pcid="610">
    function toInt96(int256 a) public pure returns (int96) {
        return a.toInt96();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="215" endline="217" pcid="609">
    function toInt104(int256 a) public pure returns (int104) {
        return a.toInt104();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="211" endline="213" pcid="608">
    function toInt112(int256 a) public pure returns (int112) {
        return a.toInt112();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="147" endline="149" pcid="592">
    function toInt240(int256 a) public pure returns (int240) {
        return a.toInt240();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="207" endline="209" pcid="607">
    function toInt120(int256 a) public pure returns (int120) {
        return a.toInt120();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="203" endline="205" pcid="606">
    function toInt128(int256 a) public pure returns (int128) {
        return a.toInt128();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="199" endline="201" pcid="605">
    function toInt136(int256 a) public pure returns (int136) {
        return a.toInt136();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="195" endline="197" pcid="604">
    function toInt144(int256 a) public pure returns (int144) {
        return a.toInt144();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="151" endline="153" pcid="593">
    function toInt232(int256 a) public pure returns (int232) {
        return a.toInt232();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="191" endline="193" pcid="603">
    function toInt152(int256 a) public pure returns (int152) {
        return a.toInt152();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="187" endline="189" pcid="602">
    function toInt160(int256 a) public pure returns (int160) {
        return a.toInt160();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="155" endline="157" pcid="594">
    function toInt224(int256 a) public pure returns (int224) {
        return a.toInt224();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="183" endline="185" pcid="601">
    function toInt168(int256 a) public pure returns (int168) {
        return a.toInt168();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="179" endline="181" pcid="600">
    function toInt176(int256 a) public pure returns (int176) {
        return a.toInt176();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="159" endline="161" pcid="595">
    function toInt216(int256 a) public pure returns (int216) {
        return a.toInt216();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="175" endline="177" pcid="599">
    function toInt184(int256 a) public pure returns (int184) {
        return a.toInt184();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="163" endline="165" pcid="596">
    function toInt208(int256 a) public pure returns (int208) {
        return a.toInt208();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="171" endline="173" pcid="598">
    function toInt192(int256 a) public pure returns (int192) {
        return a.toInt192();
    }
</source>
</class>

<class classid="75" nclones="32" nlines="3" similarity="100">
<source file="systems/source-code/SafeCastMock.sol" startline="15" endline="17" pcid="559">
    function toUint248(uint256 a) public pure returns (uint248) {
        return a.toUint248();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="115" endline="117" pcid="584">
    function toUint48(uint256 a) public pure returns (uint48) {
        return a.toUint48();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="119" endline="121" pcid="585">
    function toUint40(uint256 a) public pure returns (uint40) {
        return a.toUint40();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="123" endline="125" pcid="586">
    function toUint32(uint256 a) public pure returns (uint32) {
        return a.toUint32();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="127" endline="129" pcid="587">
    function toUint24(uint256 a) public pure returns (uint24) {
        return a.toUint24();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="111" endline="113" pcid="583">
    function toUint56(uint256 a) public pure returns (uint56) {
        return a.toUint56();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="107" endline="109" pcid="582">
    function toUint64(uint256 a) public pure returns (uint64) {
        return a.toUint64();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="39" endline="41" pcid="565">
    function toUint200(uint256 a) public pure returns (uint200) {
        return a.toUint200();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="35" endline="37" pcid="564">
    function toUint208(uint256 a) public pure returns (uint208) {
        return a.toUint208();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="135" endline="137" pcid="589">
    function toUint8(uint256 a) public pure returns (uint8) {
        return a.toUint8();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="31" endline="33" pcid="563">
    function toUint216(uint256 a) public pure returns (uint216) {
        return a.toUint216();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="27" endline="29" pcid="562">
    function toUint224(uint256 a) public pure returns (uint224) {
        return a.toUint224();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="23" endline="25" pcid="561">
    function toUint232(uint256 a) public pure returns (uint232) {
        return a.toUint232();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="19" endline="21" pcid="560">
    function toUint240(uint256 a) public pure returns (uint240) {
        return a.toUint240();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="43" endline="45" pcid="566">
    function toUint192(uint256 a) public pure returns (uint192) {
        return a.toUint192();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="47" endline="49" pcid="567">
    function toUint184(uint256 a) public pure returns (uint184) {
        return a.toUint184();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="51" endline="53" pcid="568">
    function toUint176(uint256 a) public pure returns (uint176) {
        return a.toUint176();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="55" endline="57" pcid="569">
    function toUint168(uint256 a) public pure returns (uint168) {
        return a.toUint168();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="59" endline="61" pcid="570">
    function toUint160(uint256 a) public pure returns (uint160) {
        return a.toUint160();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="63" endline="65" pcid="571">
    function toUint152(uint256 a) public pure returns (uint152) {
        return a.toUint152();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="67" endline="69" pcid="572">
    function toUint144(uint256 a) public pure returns (uint144) {
        return a.toUint144();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="71" endline="73" pcid="573">
    function toUint136(uint256 a) public pure returns (uint136) {
        return a.toUint136();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="75" endline="77" pcid="574">
    function toUint128(uint256 a) public pure returns (uint128) {
        return a.toUint128();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="79" endline="81" pcid="575">
    function toUint120(uint256 a) public pure returns (uint120) {
        return a.toUint120();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="83" endline="85" pcid="576">
    function toUint112(uint256 a) public pure returns (uint112) {
        return a.toUint112();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="87" endline="89" pcid="577">
    function toUint104(uint256 a) public pure returns (uint104) {
        return a.toUint104();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="131" endline="133" pcid="588">
    function toUint16(uint256 a) public pure returns (uint16) {
        return a.toUint16();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="91" endline="93" pcid="578">
    function toUint96(uint256 a) public pure returns (uint96) {
        return a.toUint96();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="95" endline="97" pcid="579">
    function toUint88(uint256 a) public pure returns (uint88) {
        return a.toUint88();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="99" endline="101" pcid="580">
    function toUint80(uint256 a) public pure returns (uint80) {
        return a.toUint80();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="103" endline="105" pcid="581">
    function toUint72(uint256 a) public pure returns (uint72) {
        return a.toUint72();
    }
</source>
<source file="systems/source-code/SafeCastMock.sol" startline="139" endline="141" pcid="590">
    function toInt256(uint256 a) public pure returns (int256) {
        return a.toInt256();
    }
</source>
</class>

<class classid="76" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/SafeMathMock.sol" startline="8" endline="10" pcid="622">
    function tryAdd(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {
        return SafeMath.tryAdd(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="20" endline="22" pcid="625">
    function tryDiv(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {
        return SafeMath.tryDiv(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="24" endline="26" pcid="626">
    function tryMod(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {
        return SafeMath.tryMod(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="12" endline="14" pcid="623">
    function trySub(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {
        return SafeMath.trySub(a, b);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="16" endline="18" pcid="624">
    function tryMul(uint256 a, uint256 b) public pure returns (bool flag, uint256 value) {
        return SafeMath.tryMul(a, b);
    }
</source>
</class>

<class classid="77" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/SafeMathMock.sol" startline="50" endline="56" pcid="632">
    function subWithMessage(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) public pure returns (uint256) {
        return SafeMath.sub(a, b, errorMessage);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="58" endline="64" pcid="633">
    function divWithMessage(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) public pure returns (uint256) {
        return SafeMath.div(a, b, errorMessage);
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="66" endline="72" pcid="634">
    function modWithMessage(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) public pure returns (uint256) {
        return SafeMath.mod(a, b, errorMessage);
    }
</source>
</class>

<class classid="78" nclones="5" nlines="12" similarity="100">
<source file="systems/source-code/SafeMathMock.sol" startline="74" endline="85" pcid="635">
    function addMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.add(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="126" endline="137" pcid="639">
    function modMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.mod(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="113" endline="124" pcid="638">
    function divMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.div(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="87" endline="98" pcid="636">
    function subMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.sub(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="100" endline="111" pcid="637">
    function mulMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.mul(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
</class>

<class classid="79" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/SignedMathMock.sol" startline="8" endline="10" pcid="642">
    function max(int256 a, int256 b) public pure returns (int256) {
        return SignedMath.max(a, b);
    }
</source>
<source file="systems/source-code/SignedSafeMathMock.sol" startline="8" endline="10" pcid="650">
    function mul(int256 a, int256 b) public pure returns (int256) {
        return SignedSafeMath.mul(a, b);
    }
</source>
<source file="systems/source-code/SignedSafeMathMock.sol" startline="16" endline="18" pcid="652">
    function sub(int256 a, int256 b) public pure returns (int256) {
        return SignedSafeMath.sub(a, b);
    }
</source>
<source file="systems/source-code/SignedMathMock.sol" startline="12" endline="14" pcid="643">
    function min(int256 a, int256 b) public pure returns (int256) {
        return SignedMath.min(a, b);
    }
</source>
<source file="systems/source-code/SignedMathMock.sol" startline="16" endline="18" pcid="644">
    function average(int256 a, int256 b) public pure returns (int256) {
        return SignedMath.average(a, b);
    }
</source>
<source file="systems/source-code/SignedSafeMathMock.sol" startline="20" endline="22" pcid="653">
    function add(int256 a, int256 b) public pure returns (int256) {
        return SignedSafeMath.add(a, b);
    }
</source>
<source file="systems/source-code/SignedSafeMathMock.sol" startline="12" endline="14" pcid="651">
    function div(int256 a, int256 b) public pure returns (int256) {
        return SignedSafeMath.div(a, b);
    }
</source>
</class>

<class classid="80" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/StorageSlotMock.sol" startline="26" endline="28" pcid="661">
    function getBoolean(bytes32 slot) public view returns (bool) {
        return slot.getBooleanSlot().value;
    }
</source>
<source file="systems/source-code/StorageSlotMock.sol" startline="38" endline="40" pcid="664">
    function getUint256(bytes32 slot) public view returns (uint256) {
        return slot.getUint256Slot().value;
    }
</source>
<source file="systems/source-code/StorageSlotMock.sol" startline="34" endline="36" pcid="663">
    function getBytes32(bytes32 slot) public view returns (bytes32) {
        return slot.getBytes32Slot().value;
    }
</source>
<source file="systems/source-code/StorageSlotMock.sol" startline="30" endline="32" pcid="662">
    function getAddress(bytes32 slot) public view returns (address) {
        return slot.getAddressSlot().value;
    }
</source>
</class>

<class classid="81" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/StringsMock.sol" startline="8" endline="10" pcid="669">
    function fromUint256(uint256 value) public pure returns (string memory) {
        return Strings.toString(value);
    }
</source>
<source file="systems/source-code/StringsMock.sol" startline="12" endline="14" pcid="670">
    function fromUint256Hex(uint256 value) public pure returns (string memory) {
        return Strings.toHexString(value);
    }
</source>
</class>

<class classid="82" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="14" endline="16" pcid="673">
    function getDeadline(Timestamp memory timer) internal pure returns (uint64) {
        return timer._deadline;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="46" endline="48" pcid="680">
    function getDeadline(BlockNumber memory timer) internal pure returns (uint64) {
        return timer._deadline;
    }
</source>
</class>

<class classid="83" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="18" endline="20" pcid="674">
    function setDeadline(Timestamp storage timer, uint64 timestamp) internal {
        timer._deadline = timestamp;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="50" endline="52" pcid="681">
    function setDeadline(BlockNumber storage timer, uint64 timestamp) internal {
        timer._deadline = timestamp;
    }
</source>
</class>

<class classid="84" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="22" endline="24" pcid="675">
    function reset(Timestamp storage timer) internal {
        timer._deadline = 0;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="54" endline="56" pcid="682">
    function reset(BlockNumber storage timer) internal {
        timer._deadline = 0;
    }
</source>
</class>

<class classid="85" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="26" endline="28" pcid="676">
    function isUnset(Timestamp memory timer) internal pure returns (bool) {
        return timer._deadline == 0;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="58" endline="60" pcid="683">
    function isUnset(BlockNumber memory timer) internal pure returns (bool) {
        return timer._deadline == 0;
    }
</source>
</class>

<class classid="86" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="30" endline="32" pcid="677">
    function isStarted(Timestamp memory timer) internal pure returns (bool) {
        return timer._deadline > 0;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="62" endline="64" pcid="684">
    function isStarted(BlockNumber memory timer) internal pure returns (bool) {
        return timer._deadline > 0;
    }
</source>
</class>

<class classid="87" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="34" endline="36" pcid="678">
    function isPending(Timestamp memory timer) internal view returns (bool) {
        return timer._deadline > block.timestamp;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="66" endline="68" pcid="685">
    function isPending(BlockNumber memory timer) internal view returns (bool) {
        return timer._deadline > block.number;
    }
</source>
</class>

<class classid="88" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/Timers.sol" startline="38" endline="40" pcid="679">
    function isExpired(Timestamp memory timer) internal view returns (bool) {
        return isStarted(timer) && timer._deadline <= block.timestamp;
    }
</source>
<source file="systems/source-code/Timers.sol" startline="70" endline="72" pcid="686">
    function isExpired(BlockNumber memory timer) internal view returns (bool) {
        return isStarted(timer) && timer._deadline <= block.number;
    }
</source>
</class>

<class classid="89" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="16" endline="18" pcid="688">
    function setDeadline(uint64 timestamp) public {
        _timer.setDeadline(timestamp);
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="16" endline="18" pcid="695">
    function setDeadline(uint64 timestamp) public {
        _timer.setDeadline(timestamp);
    }
</source>
</class>

<class classid="90" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TransparentUpgradeableProxy.sol" startline="62" endline="64" pcid="701">
    function admin() external ifAdmin returns (address admin_) {
        admin_ = _getAdmin();
    }
</source>
<source file="systems/source-code/TransparentUpgradeableProxy.sol" startline="75" endline="77" pcid="702">
    function implementation() external ifAdmin returns (address implementation_) {
        implementation_ = _implementation();
    }
</source>
</class>

<class classid="91" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/UpgradeableBeacon.sol" startline="35" endline="37" pcid="708">
    function implementation() public view virtual override returns (address) {
        return _implementation;
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="67" endline="69" pcid="746">
    function votingPeriod() public view override virtual returns (uint256) {    // HARNESS: pure -> view
        return _votingPeriod;                                                   // HARNESS: parametric
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="63" endline="65" pcid="745">
    function votingDelay() public view override virtual returns (uint256) {     // HARNESS: pure -> view
        return _votingDelay;                                                    // HARNESS: parametric
    }
</source>
</class>

<class classid="92" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="28" endline="30" pcid="724">
    function isExecuted(uint256 proposalId) public view returns (bool) {
        return _proposals[proposalId].executed;
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="26" endline="28" pcid="740">
    function isExecuted(uint256 proposalId) public view returns (bool) {
        return _proposals[proposalId].executed;
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="32" endline="34" pcid="725">
    function isCanceled(uint256 proposalId) public view returns (bool) {
        return _proposals[proposalId].canceled;
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="30" endline="32" pcid="741">
    function isCanceled(uint256 proposalId) public view returns (bool) {
        return _proposals[proposalId].canceled;
    }
</source>
</class>

<class classid="93" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="44" endline="55" pcid="726">
    function _castVote(
        uint256 proposalId,
        address account,
        uint8 support,
        string memory reason
    ) internal override virtual returns (uint256) {
        
        uint256 deltaWeight = super._castVote(proposalId, account, support, reason);  //HARNESS
        ghost_sum_vote_power_by_id[proposalId] += deltaWeight;

        return deltaWeight;        
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="48" endline="59" pcid="744">
    function _castVote(
        uint256 proposalId,
        address account,
        uint8 support,
        string memory reason
    ) internal override virtual returns (uint256) {
        
        uint256 deltaWeight = super._castVote(proposalId, account, support, reason);  //HARNESS
        ghost_sum_vote_power_by_id[proposalId] += deltaWeight;

        return deltaWeight;        
    }
</source>
</class>

<class classid="94" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="57" endline="59" pcid="727">
    function snapshot(uint256 proposalId) public view returns (uint64) {
        return _proposals[proposalId].voteStart._deadline;
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="34" endline="36" pcid="742">
    function snapshot(uint256 proposalId) public view returns (uint64) {
        return _proposals[proposalId].voteStart._deadline;
    }
</source>
</class>

<class classid="95" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="92" endline="99" pcid="733">
    function getVotes(address account, uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotes)
        returns (uint256)
    {
        return super.getVotes(account, blockNumber);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="83" endline="90" pcid="748">
    function getVotes(address account, uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotes)
        returns (uint256)
    {
        return super.getVotes(account, blockNumber);
    }
</source>
</class>

</clones>
