<clones>
<systeminfo processor="nicad6" system="source-code" granularity="functions" threshold="30%" minlines="3" maxlines="2500"/>
<cloneinfo npcs="806" npairs="308"/>
<runinfo ncompares="196482" cputime="10371"/>
<classinfo nclasses="65"/>

<class classid="1" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/AccessControlCrossChainMock.sol" startline="13" endline="15" pcid="1">
    function setRoleAdmin(bytes32 roleId, bytes32 adminRoleId) public {
        _setRoleAdmin(roleId, adminRoleId);
    }
</source>
<source file="systems/source-code/AccessControlMock.sol" startline="12" endline="14" pcid="6">
    function setRoleAdmin(bytes32 roleId, bytes32 adminRoleId) public {
        _setRoleAdmin(roleId, adminRoleId);
    }
</source>
<source file="systems/source-code/AccessControlEnumerableMock.sol" startline="12" endline="14" pcid="4">
    function setRoleAdmin(bytes32 roleId, bytes32 adminRoleId) public {
        _setRoleAdmin(roleId, adminRoleId);
    }
</source>
</class>

<class classid="2" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/CheckpointsMock.sol" startline="29" endline="31" pcid="36">
    function length() public view returns (uint256) {
        return _totalCheckpoints.length();
    }
</source>
<source file="systems/source-code/CheckpointsMock.sol" startline="105" endline="107" pcid="48">
    function length() public view returns (uint256) {
        return _totalCheckpoints.length();
    }
</source>
<source file="systems/source-code/CheckpointsMock.sol" startline="67" endline="69" pcid="42">
    function length() public view returns (uint256) {
        return _totalCheckpoints.length();
    }
</source>
</class>

<class classid="3" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/EIP712External.sol" startline="28" endline="30" pcid="102">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/VotesMock.sol" startline="37" endline="39" pcid="775">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/ERC20VotesCompMock.sol" startline="18" endline="20" pcid="295">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/ERC20PermitMock.sol" startline="17" endline="19" pcid="285">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/ERC20VotesMock.sol" startline="18" endline="20" pcid="300">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
<source file="systems/source-code/ERC721VotesMock.sol" startline="22" endline="24" pcid="368">
    function getChainId() external view returns (uint256) {
        return block.chainid;
    }
</source>
</class>

<class classid="4" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="16" endline="18" pcid="143">
    function contains(uint256 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="145" endline="147" pcid="167">
    function contains(uint256 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
</class>

<class classid="5" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="25" endline="28" pcid="145">
    function remove(uint256 key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="154" endline="157" pcid="169">
    function remove(uint256 key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
</class>

<class classid="6" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="30" endline="32" pcid="146">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="116" endline="118" pcid="162">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="73" endline="75" pcid="154">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="202" endline="204" pcid="178">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="159" endline="161" pcid="170">
    function length() public view returns (uint256) {
        return _map.length();
    }
</source>
</class>

<class classid="7" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="102" endline="104" pcid="159">
    function contains(bytes32 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="188" endline="190" pcid="175">
    function contains(bytes32 key) public view returns (bool) {
        return _map.contains(key);
    }
</source>
</class>

<class classid="8" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/EnumerableMapMock.sol" startline="111" endline="114" pcid="161">
    function remove(bytes32 key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
<source file="systems/source-code/EnumerableMapMock.sol" startline="197" endline="200" pcid="177">
    function remove(bytes32 key) public {
        bool result = _map.remove(key);
        emit OperationResult(result);
    }
</source>
</class>

<class classid="9" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/EnumerableSetMock.sol" startline="30" endline="32" pcid="210">
    function length() public view returns (uint256) {
        return _set.length();
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="65" endline="67" pcid="216">
    function length() public view returns (uint256) {
        return _set.length();
    }
</source>
<source file="systems/source-code/EnumerableSetMock.sol" startline="100" endline="102" pcid="222">
    function length() public view returns (uint256) {
        return _set.length();
    }
</source>
</class>

<class classid="10" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155BurnableMock.sol" startline="10" endline="17" pcid="225">
    function mint(
        address to,
        uint256 id,
        uint256 value,
        bytes memory data
    ) public {
        _mint(to, id, value, data);
    }
</source>
<source file="systems/source-code/ERC1155Mock.sol" startline="18" endline="25" pcid="229">
    function mint(
        address to,
        uint256 id,
        uint256 value,
        bytes memory data
    ) public {
        _mint(to, id, value, data);
    }
</source>
</class>

<class classid="11" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155PausableMock.sol" startline="11" endline="13" pcid="233">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="31" endline="33" pcid="313">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="14" endline="16" pcid="338">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="24" endline="26" pcid="541">
    function pause() external {
        _pause();
    }
</source>
<source file="systems/source-code/ERC20PausableMock.sol" startline="18" endline="20" pcid="281">
    function pause() external {
        _pause();
    }
</source>
</class>

<class classid="12" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/ERC1155PausableMock.sol" startline="15" endline="17" pcid="234">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/PausableMock.sol" startline="28" endline="30" pcid="542">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="35" endline="37" pcid="314">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="18" endline="20" pcid="339">
    function unpause() external {
        _unpause();
    }
</source>
<source file="systems/source-code/ERC20PausableMock.sol" startline="22" endline="24" pcid="282">
    function unpause() external {
        _unpause();
    }
</source>
</class>

<class classid="13" nclones="2" nlines="6" similarity="75">
<source file="systems/source-code/ERC1271WalletMock.sol" startline="20" endline="25" pcid="249">
    function isValidSignature(bytes32, bytes memory) public pure override returns (bytes4) {
        assembly {
            mstore(0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
            return(0, 32)
        }
    }
</source>
<source file="systems/source-code/ERC165MaliciousData.sol" startline="6" endline="11" pcid="262">
    function supportsInterface(bytes4) public pure returns (bool) {
        assembly {
            mstore(0, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)
            return(0, 32)
        }
    }
</source>
</class>

<class classid="14" nclones="8" nlines="3" similarity="100">
<source file="systems/source-code/ERC20CappedMock.sol" startline="14" endline="16" pcid="270">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="43" endline="45" pcid="316">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="32" endline="34" pcid="327">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721BurnableMock.sol" startline="14" endline="16" pcid="305">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="22" endline="24" pcid="334">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="36" endline="38" pcid="361">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="26" endline="28" pcid="341">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721RoyaltyMock.sol" startline="22" endline="24" pcid="353">
    function mint(address to, uint256 tokenId) public {
        _mint(to, tokenId);
    }
</source>
</class>

<class classid="15" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/ERC20FlashMintMock.sol" startline="20" endline="22" pcid="271">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC20VotesMock.sol" startline="10" endline="12" pcid="298">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC20VotesCompMock.sol" startline="10" endline="12" pcid="293">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC20Mock.sol" startline="18" endline="20" pcid="277">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/ERC20SnapshotMock.sol" startline="21" endline="23" pcid="291">
    function mint(address account, uint256 amount) public {
        _mint(account, amount);
    }
</source>
</class>

<class classid="16" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/ERC20Mock.sol" startline="22" endline="24" pcid="278">
    function burn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC20VotesCompMock.sol" startline="14" endline="16" pcid="294">
    function burn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC20VotesMock.sol" startline="14" endline="16" pcid="299">
    function burn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/ERC20SnapshotMock.sol" startline="25" endline="27" pcid="292">
    function burn(address account, uint256 amount) public {
        _burn(account, amount);
    }
</source>
</class>

<class classid="17" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/ERC721BurnableMock.sol" startline="10" endline="12" pcid="304">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="39" endline="41" pcid="315">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="28" endline="30" pcid="326">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="18" endline="20" pcid="333">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="22" endline="24" pcid="340">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="32" endline="34" pcid="360">
    function exists(uint256 tokenId) public view returns (bool) {
        return _exists(tokenId);
    }
</source>
</class>

<class classid="18" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/ERC721BurnableMock.sol" startline="18" endline="20" pcid="306">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="26" endline="28" pcid="335">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="40" endline="42" pcid="362">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="30" endline="32" pcid="342">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="36" endline="38" pcid="328">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="51" endline="53" pcid="318">
    function safeMint(address to, uint256 tokenId) public {
        _safeMint(to, tokenId);
    }
</source>
</class>

<class classid="19" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/ERC721BurnableMock.sol" startline="22" endline="28" pcid="307">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="34" endline="40" pcid="343">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="44" endline="50" pcid="363">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="30" endline="36" pcid="336">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="40" endline="46" pcid="329">
    function safeMint(
        address to,
        uint256 tokenId,
        bytes memory _data
    ) public {
        _safeMint(to, tokenId, _data);
    }
</source>
</class>

<class classid="20" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721ConsecutiveEnumerableMock.sol" startline="30" endline="32" pcid="309">
    function _ownerOf(uint256 tokenId) internal view virtual override(ERC721, ERC721Consecutive) returns (address) {
        return super._ownerOf(tokenId);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="55" endline="57" pcid="319">
    function _ownerOf(uint256 tokenId) internal view virtual override(ERC721, ERC721Consecutive) returns (address) {
        return super._ownerOf(tokenId);
    }
</source>
</class>

<class classid="21" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721ConsecutiveEnumerableMock.sol" startline="34" endline="36" pcid="310">
    function _mint(address to, uint256 tokenId) internal virtual override(ERC721, ERC721Consecutive) {
        super._mint(to, tokenId);
    }
</source>
<source file="systems/source-code/ERC721ConsecutiveMock.sol" startline="59" endline="61" pcid="320">
    function _mint(address to, uint256 tokenId) internal virtual override(ERC721, ERC721Consecutive) {
        super._mint(to, tokenId);
    }
</source>
</class>

<class classid="22" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="16" endline="18" pcid="323">
    function _baseURI() internal view override returns (string memory) {
        return _baseTokenURI;
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="16" endline="18" pcid="356">
    function _baseURI() internal view override returns (string memory) {
        return _baseTokenURI;
    }
</source>
</class>

<class classid="23" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="20" endline="22" pcid="324">
    function setBaseURI(string calldata newBaseTokenURI) public {
        _baseTokenURI = newBaseTokenURI;
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="20" endline="22" pcid="357">
    function setBaseURI(string calldata newBaseTokenURI) public {
        _baseTokenURI = newBaseTokenURI;
    }
</source>
</class>

<class classid="24" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="24" endline="26" pcid="325">
    function baseURI() public view returns (string memory) {
        return _baseURI();
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="24" endline="26" pcid="358">
    function baseURI() public view returns (string memory) {
        return _baseURI();
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="14" endline="16" pcid="332">
    function baseURI() public view returns (string memory) {
        return _baseURI();
    }
</source>
</class>

<class classid="25" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/ERC721EnumerableMock.sol" startline="48" endline="50" pcid="330">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721RoyaltyMock.sol" startline="26" endline="28" pcid="354">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721URIStorageMock.sol" startline="52" endline="54" pcid="364">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721VotesMock.sol" startline="18" endline="20" pcid="367">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721PausableMock.sol" startline="42" endline="44" pcid="344">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
<source file="systems/source-code/ERC721Mock.sol" startline="38" endline="40" pcid="337">
    function burn(uint256 tokenId) public {
        _burn(tokenId);
    }
</source>
</class>

<class classid="26" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/ERC721VotesMock.sol" startline="10" endline="12" pcid="365">
    function getTotalSupply() public view returns (uint256) {
        return _getTotalSupply();
    }
</source>
<source file="systems/source-code/VotesMock.sol" startline="13" endline="15" pcid="770">
    function getTotalSupply() public view returns (uint256) {
        return _getTotalSupply();
    }
</source>
</class>

<class classid="27" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="39" endline="41" pcid="387">
    function quorum(uint256) public pure override returns (uint256) {
        return 0;
    }
</source>
<source file="systems/source-code/GovernorCompMock.sol" startline="11" endline="13" pcid="398">
    function quorum(uint256) public pure override returns (uint256) {
        return 0;
    }
</source>
<source file="systems/source-code/GovernorVoteMock.sol" startline="11" endline="13" pcid="426">
    function quorum(uint256) public pure override returns (uint256) {
        return 0;
    }
</source>
<source file="systems/source-code/GovernorWithParamsMock.sol" startline="13" endline="15" pcid="430">
    function quorum(uint256) public pure override returns (uint256) {
        return 0;
    }
</source>
</class>

<class classid="28" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="61" endline="63" pcid="390">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
<source file="systems/source-code/GovernorMock.sol" startline="38" endline="40" pcid="403">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="65" endline="67" pcid="421">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
<source file="systems/source-code/GovernorPreventLateQuorumMock.sol" startline="47" endline="49" pcid="407">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="70" endline="72" pcid="413">
    function proposalThreshold() public view override(Governor, GovernorSettings) returns (uint256) {
        return super.proposalThreshold();
    }
</source>
</class>

<class classid="29" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="92" endline="100" pcid="394">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockCompound) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="109" endline="114" pcid="803">
    function _execute(uint256 proposalId, address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)
        internal
        override(Governor, GovernorTimelockCompound)
    {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="74" endline="82" pcid="414">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockCompound) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="30" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="106" endline="113" pcid="395">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorWithParamsMock.sol" startline="53" endline="60" pcid="435">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorVoteMock.sol" startline="23" endline="30" pcid="429">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="49" endline="56" pcid="411">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorCompMock.sol" startline="23" endline="30" pcid="401">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorMock.sol" startline="29" endline="36" pcid="402">
    function cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) public returns (uint256 proposalId) {
        return _cancel(targets, values, calldatas, salt);
    }
</source>
</class>

<class classid="31" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="115" endline="122" pcid="396">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) internal override(Governor, GovernorTimelockCompound) returns (uint256 proposalId) {
        return super._cancel(targets, values, calldatas, salt);
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="84" endline="91" pcid="415">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 salt
    ) internal override(Governor, GovernorTimelockCompound) returns (uint256 proposalId) {
        return super._cancel(targets, values, calldatas, salt);
    }
</source>
</class>

<class classid="32" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompatibilityBravoMock.sol" startline="124" endline="126" pcid="397">
    function _executor() internal view override(Governor, GovernorTimelockCompound) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="124" endline="131" pcid="805">
    function _executor()
        internal
        view
        override(Governor, GovernorTimelockCompound)
        returns (address)
    {
        return super._executor();
    }
</source>
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="93" endline="95" pcid="416">
    function _executor() internal view override(Governor, GovernorTimelockCompound) returns (address) {
        return super._executor();
    }
</source>
</class>

<class classid="33" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompMock.sol" startline="15" endline="17" pcid="399">
    function votingDelay() public pure override returns (uint256) {
        return 4;
    }
</source>
<source file="systems/source-code/GovernorVoteMock.sol" startline="15" endline="17" pcid="427">
    function votingDelay() public pure override returns (uint256) {
        return 4;
    }
</source>
<source file="systems/source-code/GovernorWithParamsMock.sol" startline="17" endline="19" pcid="431">
    function votingDelay() public pure override returns (uint256) {
        return 4;
    }
</source>
</class>

<class classid="34" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/GovernorCompMock.sol" startline="19" endline="21" pcid="400">
    function votingPeriod() public pure override returns (uint256) {
        return 16;
    }
</source>
<source file="systems/source-code/GovernorVoteMock.sol" startline="19" endline="21" pcid="428">
    function votingPeriod() public pure override returns (uint256) {
        return 16;
    }
</source>
<source file="systems/source-code/GovernorWithParamsMock.sol" startline="21" endline="23" pcid="432">
    function votingPeriod() public pure override returns (uint256) {
        return 16;
    }
</source>
</class>

<class classid="35" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="31" endline="38" pcid="409">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockCompound)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="133" endline="140" pcid="806">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockCompound)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
</class>

<class classid="36" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="40" endline="47" pcid="410">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="34" endline="41" pcid="512">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="74" endline="81" pcid="799">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="40" endline="47" pcid="522">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="38" endline="45" pcid="532">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="40" endline="47" pcid="418">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="83" endline="90" pcid="784">
    function quorum(uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotesQuorumFraction)
        returns (uint256)
    {
        return super.quorum(blockNumber);
    }
</source>
</class>

<class classid="37" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/GovernorTimelockCompoundMock.sol" startline="61" endline="68" pcid="412">
    function state(uint256 proposalId)
        public
        view
        override(Governor, GovernorTimelockCompound)
        returns (ProposalState)
    {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="92" endline="99" pcid="801">
    function state(uint256 proposalId)
        public
        view
        override(Governor, GovernorTimelockCompound)
        returns (ProposalState)
    {
        return super.state(proposalId);
    }
</source>
</class>

<class classid="38" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="31" endline="38" pcid="417">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="142" endline="149" pcid="791">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="85" endline="92" pcid="528">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="79" endline="86" pcid="518">
    function supportsInterface(bytes4 interfaceId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (bool)
    {
        return super.supportsInterface(interfaceId);
    }
</source>
</class>

<class classid="39" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="61" endline="63" pcid="420">
    function state(uint256 proposalId) public view override(Governor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="101" endline="108" pcid="786">
    function state(uint256 proposalId)
        public
        view
        override(Governor, GovernorTimelockControl)
        returns (ProposalState)
    {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="49" endline="51" pcid="523">
    function state(uint256 proposalId) public view override(Governor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="43" endline="45" pcid="513">
    function state(uint256 proposalId) public view override(Governor, GovernorTimelockControl) returns (ProposalState) {
        return super.state(proposalId);
    }
</source>
</class>

<class classid="40" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="69" endline="77" pcid="422">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="118" endline="123" pcid="788">
    function _execute(uint256 proposalId, address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)
        internal
        override(Governor, GovernorTimelockControl)
    {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="62" endline="70" pcid="525">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="56" endline="64" pcid="515">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="65" endline="73" pcid="535">
    function _execute(
        uint256 proposalId,
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) {
        super._execute(proposalId, targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="41" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/GovernorTimelockControlMock.sol" startline="88" endline="90" pcid="424">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="84" endline="86" pcid="537">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="133" endline="140" pcid="790">
    function _executor()
        internal
        view
        override(Governor, GovernorTimelockControl)
        returns (address)
    {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="81" endline="83" pcid="527">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
<source file="systems/source-code/MyGovernor1.sol" startline="75" endline="77" pcid="517">
    function _executor() internal view override(Governor, GovernorTimelockControl) returns (address) {
        return super._executor();
    }
</source>
</class>

<class classid="42" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="20" endline="22" pcid="437">
    function initialize() public initializer {
        initializerRan = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="58" endline="60" pcid="444">
    function initialize() public initializer {
        initializerRan = true;
    }
</source>
</class>

<class classid="43" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/InitializableMock.sol" startline="24" endline="26" pcid="438">
    function initializeOnlyInitializing() public onlyInitializing {
        onlyInitializingRan = true;
    }
</source>
<source file="systems/source-code/InitializableMock.sol" startline="62" endline="64" pcid="445">
    function initializeOnlyInitializing() public onlyInitializing {
        onlyInitializingRan = true;
    }
</source>
</class>

<class classid="44" nclones="2" nlines="7" similarity="80">
<source file="systems/source-code/MerkleProof.sol" startline="56" endline="62" pcid="478">
    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {
        bytes32 computedHash = leaf;
        for (uint256 i = 0; i < proof.length; i++) {
            computedHash = _hashPair(computedHash, proof[i]);
        }
        return computedHash;
    }
</source>
<source file="systems/source-code/MerkleProof.sol" startline="69" endline="75" pcid="479">
    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {
        bytes32 computedHash = leaf;
        for (uint256 i = 0; i < proof.length; i++) {
            computedHash = _hashPair(computedHash, proof[i]);
        }
        return computedHash;
    }
</source>
</class>

<class classid="45" nclones="2" nlines="23" similarity="94">
<source file="systems/source-code/MerkleProof.sol" startline="122" endline="161" pcid="482">
    function processMultiProof(
        bytes32[] memory proof,
        bool[] memory proofFlags,
        bytes32[] memory leaves
    ) internal pure returns (bytes32 merkleRoot) {
        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by
        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the
        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of
        // the merkle tree.
        uint256 leavesLen = leaves.length;
        uint256 totalHashes = proofFlags.length;

        // Check proof validity.
        require(leavesLen + proof.length - 1 == totalHashes, "MerkleProof: invalid multiproof");

        // The xxxPos values are "pointers" to the next value to consume in each array. All accesses are done using
        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's "pop".
        bytes32[] memory hashes = new bytes32[](totalHashes);
        uint256 leafPos = 0;
        uint256 hashPos = 0;
        uint256 proofPos = 0;
        // At each step, we compute the next hash using two values:
        // - a value from the "main queue". If not all leaves have been consumed, we get the next leaf, otherwise we
        //   get the next hash.
        // - depending on the flag, either another value for the "main queue" (merging branches) or an element from the
        //   `proof` array.
        for (uint256 i = 0; i < totalHashes; i++) {
            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];
            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];
            hashes[i] = _hashPair(a, b);
        }

        if (totalHashes > 0) {
            return hashes[totalHashes - 1];
        } else if (leavesLen > 0) {
            return leaves[0];
        } else {
            return proof[0];
        }
    }
</source>
<source file="systems/source-code/MerkleProof.sol" startline="170" endline="209" pcid="483">
    function processMultiProofCalldata(
        bytes32[] calldata proof,
        bool[] calldata proofFlags,
        bytes32[] memory leaves
    ) internal pure returns (bytes32 merkleRoot) {
        // This function rebuild the root hash by traversing the tree up from the leaves. The root is rebuilt by
        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the
        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of
        // the merkle tree.
        uint256 leavesLen = leaves.length;
        uint256 totalHashes = proofFlags.length;

        // Check proof validity.
        require(leavesLen + proof.length - 1 == totalHashes, "MerkleProof: invalid multiproof");

        // The xxxPos values are "pointers" to the next value to consume in each array. All accesses are done using
        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's "pop".
        bytes32[] memory hashes = new bytes32[](totalHashes);
        uint256 leafPos = 0;
        uint256 hashPos = 0;
        uint256 proofPos = 0;
        // At each step, we compute the next hash using two values:
        // - a value from the "main queue". If not all leaves have been consumed, we get the next leaf, otherwise we
        //   get the next hash.
        // - depending on the flag, either another value for the "main queue" (merging branches) or an element from the
        //   `proof` array.
        for (uint256 i = 0; i < totalHashes; i++) {
            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];
            bytes32 b = proofFlags[i] ? leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++] : proof[proofPos++];
            hashes[i] = _hashPair(a, b);
        }

        if (totalHashes > 0) {
            return hashes[totalHashes - 1];
        } else if (leavesLen > 0) {
            return leaves[0];
        } else {
            return proof[0];
        }
    }
</source>
</class>

<class classid="46" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="24" endline="26" pcid="510">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="26" endline="28" pcid="519">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="24" endline="26" pcid="529">
    function votingDelay() public pure override returns (uint256) {
        return 1; // 1 block
    }
</source>
</class>

<class classid="47" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="28" endline="30" pcid="511">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="28" endline="30" pcid="530">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="30" endline="32" pcid="520">
    function votingPeriod() public pure override returns (uint256) {
        return 45818; // 1 week
    }
</source>
</class>

<class classid="48" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="47" endline="54" pcid="514">
    function propose(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        string memory description
    ) public override(Governor, IGovernor) returns (uint256) {
        return super.propose(targets, values, calldatas, description);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="101" endline="107" pcid="802">
    function propose(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, string memory description)
        public
        override(Governor, IGovernor)
        returns (uint256)
    {
        return super.propose(targets, values, calldatas, description);
    }
</source>
</class>

<class classid="49" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor1.sol" startline="66" endline="73" pcid="516">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor2.sol" startline="72" endline="79" pcid="526">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="75" endline="82" pcid="536">
    function _cancel(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        bytes32 descriptionHash
    ) internal override(Governor, GovernorTimelockControl) returns (uint256) {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="125" endline="131" pcid="789">
    function _cancel(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, bytes32 descriptionHash)
        internal
        override(Governor, GovernorTimelockControl)
        returns (uint256)
    {
        return super._cancel(targets, values, calldatas, descriptionHash);
    }
</source>
</class>

<class classid="50" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor2.sol" startline="34" endline="36" pcid="521">
    function proposalThreshold() public pure override returns (uint256) {
        return 1000e18;
    }
</source>
<source file="systems/source-code/MyGovernor3.sol" startline="32" endline="34" pcid="531">
    function proposalThreshold() public pure override returns (uint256) {
        return 1000e18;
    }
</source>
</class>

<class classid="51" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/MyGovernor2.sol" startline="53" endline="60" pcid="524">
    function propose(
        address[] memory targets,
        uint256[] memory values,
        bytes[] memory calldatas,
        string memory description
    ) public override(Governor, GovernorProposalThreshold, IGovernor) returns (uint256) {
        return super.propose(targets, values, calldatas, description);
    }
</source>
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="110" endline="116" pcid="787">
    function propose(address[] memory targets, uint256[] memory values, bytes[] memory calldatas, string memory description)
        public
        override(Governor, GovernorProposalThreshold, IGovernor)
        returns (uint256)
    {
        return super.propose(targets, values, calldatas, description);
    }
</source>
</class>

<class classid="52" nclones="5" nlines="12" similarity="75">
<source file="systems/source-code/SafeMathMock.sol" startline="74" endline="85" pcid="691">
    function addMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.add(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="100" endline="111" pcid="693">
    function mulMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.mul(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="113" endline="124" pcid="694">
    function divMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.div(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="87" endline="98" pcid="692">
    function subMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.sub(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
<source file="systems/source-code/SafeMathMock.sol" startline="126" endline="137" pcid="695">
    function modMemoryCheck() public pure returns (uint256 mem) {
        uint256 length = 32;
        assembly {
            mem := mload(0x40)
        }
        for (uint256 i = 0; i < length; ++i) {
            SafeMath.mod(1, 1);
        }
        assembly {
            mem := sub(mload(0x40), mem)
        }
    }
</source>
</class>

<class classid="53" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="12" endline="14" pcid="739">
    function getDeadline() public view returns (uint64) {
        return _timer.getDeadline();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="12" endline="14" pcid="746">
    function getDeadline() public view returns (uint64) {
        return _timer.getDeadline();
    }
</source>
</class>

<class classid="54" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="16" endline="18" pcid="740">
    function setDeadline(uint64 timestamp) public {
        _timer.setDeadline(timestamp);
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="16" endline="18" pcid="747">
    function setDeadline(uint64 timestamp) public {
        _timer.setDeadline(timestamp);
    }
</source>
</class>

<class classid="55" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="20" endline="22" pcid="741">
    function reset() public {
        _timer.reset();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="20" endline="22" pcid="748">
    function reset() public {
        _timer.reset();
    }
</source>
</class>

<class classid="56" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="24" endline="26" pcid="742">
    function isUnset() public view returns (bool) {
        return _timer.isUnset();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="24" endline="26" pcid="749">
    function isUnset() public view returns (bool) {
        return _timer.isUnset();
    }
</source>
</class>

<class classid="57" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="28" endline="30" pcid="743">
    function isStarted() public view returns (bool) {
        return _timer.isStarted();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="28" endline="30" pcid="750">
    function isStarted() public view returns (bool) {
        return _timer.isStarted();
    }
</source>
</class>

<class classid="58" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="32" endline="34" pcid="744">
    function isPending() public view returns (bool) {
        return _timer.isPending();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="32" endline="34" pcid="751">
    function isPending() public view returns (bool) {
        return _timer.isPending();
    }
</source>
</class>

<class classid="59" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/TimersBlockNumberImpl.sol" startline="36" endline="38" pcid="745">
    function isExpired() public view returns (bool) {
        return _timer.isExpired();
    }
</source>
<source file="systems/source-code/TimersTimestampImpl.sol" startline="36" endline="38" pcid="752">
    function isExpired() public view returns (bool) {
        return _timer.isExpired();
    }
</source>
</class>

<class classid="60" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="28" endline="30" pcid="776">
    function isExecuted(uint256 proposalId) public view returns (bool) {
        return _proposals[proposalId].executed;
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="26" endline="28" pcid="792">
    function isExecuted(uint256 proposalId) public view returns (bool) {
        return _proposals[proposalId].executed;
    }
</source>
</class>

<class classid="61" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="32" endline="34" pcid="777">
    function isCanceled(uint256 proposalId) public view returns (bool) {
        return _proposals[proposalId].canceled;
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="30" endline="32" pcid="793">
    function isCanceled(uint256 proposalId) public view returns (bool) {
        return _proposals[proposalId].canceled;
    }
</source>
</class>

<class classid="62" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="44" endline="55" pcid="778">
    function _castVote(
        uint256 proposalId,
        address account,
        uint8 support,
        string memory reason
    ) internal override virtual returns (uint256) {
        
        uint256 deltaWeight = super._castVote(proposalId, account, support, reason);  //HARNESS
        ghost_sum_vote_power_by_id[proposalId] += deltaWeight;

        return deltaWeight;        
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="48" endline="59" pcid="796">
    function _castVote(
        uint256 proposalId,
        address account,
        uint8 support,
        string memory reason
    ) internal override virtual returns (uint256) {
        
        uint256 deltaWeight = super._castVote(proposalId, account, support, reason);  //HARNESS
        ghost_sum_vote_power_by_id[proposalId] += deltaWeight;

        return deltaWeight;        
    }
</source>
</class>

<class classid="63" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="57" endline="59" pcid="779">
    function snapshot(uint256 proposalId) public view returns (uint64) {
        return _proposals[proposalId].voteStart._deadline;
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="34" endline="36" pcid="794">
    function snapshot(uint256 proposalId) public view returns (uint64) {
        return _proposals[proposalId].voteStart._deadline;
    }
</source>
</class>

<class classid="64" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="62" endline="64" pcid="780">
    function getExecutor() public view returns (address){
        return _executor();
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="38" endline="40" pcid="795">
    function getExecutor() public view returns (address){
        return _executor();
    }
</source>
</class>

<class classid="65" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/WizardControlFirstPriority.sol" startline="92" endline="99" pcid="785">
    function getVotes(address account, uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotes)
        returns (uint256)
    {
        return super.getVotes(account, blockNumber);
    }
</source>
<source file="systems/source-code/WizardFirstTry.sol" startline="83" endline="90" pcid="800">
    function getVotes(address account, uint256 blockNumber)
        public
        view
        override(IGovernor, GovernorVotes)
        returns (uint256)
    {
        return super.getVotes(account, blockNumber);
    }
</source>
</class>

</clones>
